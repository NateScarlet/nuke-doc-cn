<?xml version="1.0" encoding="utf-8"?><index PreMerged="false" SearchType="Stem" NGramSize="1"><urls><Url Source="../content/welcome.html" Title="Welcome to Nuke 9.0" Abstract="Welcome to Nuke 9.0 Nuke is an Academy Award® winning compositor. It has been used to create extraordinary images on scores of feature films, including Avatar, District 9, Australia, The Dark Knight, Quantum of Solace, The Curious Case of Benjamin Button, Iron Man, Transformers, Pirates of the Caribbean: At World’s End, and countless commercials and music videos." /><Url Source="../content/reference_guide/preface/getting_help.html" Title="Getting Help" Abstract="Getting Help Nuke features several forms of help, in a variety of locations. Viewing Tool Tips Most controls offer concise instructions in the form of tool tips. To display the tool tips, move your mouse pointer over an interface control or a node parameter." /><Url Source="../content/getting_started/getting_started/getting_started.html" Title="Getting Started" Abstract="Getting Started This chapter covers installation and licensing, the default Nuke environments and workspaces,  and the Preferences dialog." /><Url Source="../content/getting_started/meet_nuke/nuke_product_family.html" Title="Meet the Nuke Product Family" Abstract="Meet the Nuke Product Family This chapter introduces the different products and modes of Nuke and explains some key concepts you should know before using Nuke products." /><Url Source="../content/getting_started/meet_nuke/flavors_nuke.html" Title=" Nuke Products" Abstract="Nuke Products The Nuke products have different purposes and different levels of functionality. Nuke Studio is a product that combines the functionality of all the Nuke products listed below, which are then used as different modes in which to run Nuke Studio. It also includes its own specific functions that are only applicable to Nuke Studio." /><Url Source="../content/getting_started/meet_nuke/about_nukestudio.html" Title="About Nuke" Abstract="About Nuke When you purchase Nuke, it contains all the Nuke products as different modes. For example, you can choose to run Nuke in NukeX mode, or Nuke Non-commercial mode." /><Url Source="../content/getting_started/meet_nuke/about_nukex.html" Title="About NukeX" Abstract="About NukeX When using NukeX, you have all the features of Nuke in use, plus the following: CameraTracker" /><Url Source="../content/getting_started/meet_nuke/about_nuke_assist.html" Title="About Nuke Assist" Abstract="About Nuke Assist Nuke Assist is licensed as part of a NukeX or Nuke Studio maintenance package and is intended for use as a workstation for artists performing painting, rotoscoping, and tracking. Nuke Assist doesn’t support any NukeX-or Nuke Studio-specific features apart from PlanarTracker, and has a limited subset of Nuke nodes and features available. The following nodes are supported by Nuke Assist:" /><Url Source="../content/getting_started/meet_nuke/about_nc.html" Title="About Nuke Non-commercial" Abstract="About Nuke Non-commercial Nuke Non-commercial is a free version of Nuke that  runs outside the regular licensing model. Nuke Non-commercial is meant for personal, educational, and other non-commercial use. It is aimed at students, industry professionals, and others interested in Nuke. It includes most of the features of the commercial version of Nuke, offering you a chance to explore and learn the application fully while using it from the comfort of your own home." /><Url Source="../content/getting_started/meet_nuke/key_concepts.html" Title="Key Concepts" Abstract="Key Concepts Nuke products are a resolution-independent compositing system, with extensive channel support, powerful image manipulation tools, and a rich 3D compositing environment. This section explains concepts you should know before using Nuke products." /><Url Source="../content/getting_started/meet_nuke/understanding_workflow.html" Title="Understanding the Workflow" Abstract="Understanding the Workflow A Nuke project consists of a network of linked operators called nodes. Nuke's Compositing environment utilizes a node-based workflow, where you connect a series of nodes to read, process, and manipulate images. Each node in the script, or comp,  performs an operation and contributes to the output." /><Url Source="../content/getting_started/meet_nuke/multiple_image_formats.html" Title="Working with Multiple Image Formats" Abstract="Working with Multiple Image Formats Nuke products support multiple file formats, such as Cineon, TIFF, OpenEXR, HDRI, and RAW camera data (using the dcraw command-line program), and allows you to mix them all within the same composite. By default, Nuke products convert all imported sequences to their native 32-bit linear RGB colorspace. You can, however, use the Colorspace node to force one of several color models, including sRGB, Cineon, rec709, gamma 1.80/2.20, HSV, or HSL. The Log2Lin node lets you convert between logarithmic and linear colorspace (and vice versa)." /><Url Source="../content/getting_started/meet_nuke/channel_operations.html" Title="Channel Operations" Abstract="Channel Operations In Nuke products, you can assign the output of each node as new channels, and pass them to the next node in the script. When you need to re-use a particular channel (say, to apply a color correction to the hair), you simply choose the channel containing the matte from the downstream color-correction node." /><Url Source="../content/getting_started/meet_nuke/8_16_32_bit_images.html" Title="8-, 16-, and 32-Bit Image Processing" Abstract="8-, 16-, and 32-Bit Image Processing Some digital compositing systems, especially those geared for video work, are optimized for processing exclusively 8-bit elements (that is, images with 256 intensity values per channel). Other systems allow for the mixing of 8, 16, and 32-bit elements." /><Url Source="../content/getting_started/meet_nuke/compositing_3d.html" Title="Compositing in 3D" Abstract="Compositing in 3D Some digital compositing systems support a strictly two-dimensional workflow. Nuke products, by contrast, offer a robust 3D workspace that lets you create and render complex scenes composed of polygonal models, cards (planes textured with images), cameras, lights, and textures." /><Url Source="../content/getting_started/meet_nuke/render_farms.html" Title="Render Farms and Frame Servers" Abstract="Render Farms and Frame Servers Nuke products support virtually all third-party and proprietary render-queuing software. By integrating Nuke products with such a system, the render load can be distributed across all the Nuke- or NukeX-licensed machines on your network, whether Windows, Mac, or Linux-based. See Render Farms for more information." /><Url Source="../content/getting_started/installation/installation_licensing.html" Title="Installation and Licensing" Abstract="Installation and Licensing We know the installation and licensing of a new application can be a boring task that you just want to be done with as soon as possible. To help you with that, this chapter guides you to the point where you have the application in front of you and are ready to start work." /><Url Source="../content/comp_environment/realtime_playback/realtime_playback.html" Title="Achieving Real-time Playback" Abstract="Achieving Real-time Playback Nuke's real-time playback does not only depend on hardware and graphics card. To achieve real-time playback, there are several other things you should take into account:" /><Url Source="../content/getting_started/installation/windows.html" Title="Windows" Abstract="Windows After installation, all Nuke applications are run from either desktop icons, the Start menu, or from the command line using command line arguments." /><Url Source="../content/getting_started/installation/installing_nuke_win.html" Title="Installing Nuke on Windows" Abstract="Installing Nuke on Windows The installation package installs Nuke, NukeX, and Nuke Studio, and icons for these appear in your installation folder." /><Url Source="../content/getting_started/installation/launching_nuke_win.html" Title="Launching Nuke on Windows" Abstract="Launching Nuke on Windows To launch the application on Windows, do one of the following: Double-click the Nuke, NukeX, or Nuke Studio icon on the Desktop." /><Url Source="../content/getting_started/installation/licensing_nuke_win.html" Title="Licensing Nuke on Windows" Abstract="Licensing Nuke on Windows The following licensing methods are available: Activation Keys and Node Locked Licenses - these can be used to license an application on a single machine. They do not work on different machines and if you need them to, you’ll have to transfer your license." /><Url Source="../content/getting_started/installation/noncommercial_win.html" Title="Licensing Nuke Non-commercial on Windows" Abstract="Licensing Nuke Non-commercial on Windows Subscription licensing differs from traditional node locked or floating licenses in that a single license, or entitlement, is valid on any authorized device up to the entitlement's maximum number of activations." /><Url Source="../content/getting_started/installation/mac_os_x.html" Title="Mac OS X" Abstract="Mac OS X After installation, all Nuke applications are run from either desktop icons, the Finder, or from the Terminal using arguments." /><Url Source="../content/getting_started/installation/installing_nuke_mac.html" Title="Installing Nuke on Mac OS X" Abstract="Installing Nuke on Mac OS X The installation package installs Nuke, NukeX, and Nuke Studio, and icons for these appear in your installation folder." /><Url Source="../content/getting_started/installation/launching_nuke_mac.html" Title="Launching Nuke on Mac OS X" Abstract="Launching Nuke on Mac OS X To launch the application on Mac OS X, do one of the following: Double-click the Nuke, NukeX, or Nuke Studio dock icon." /><Url Source="../content/getting_started/installation/licensing_nuke_mac.html" Title="Licensing Nuke on Mac OS X" Abstract="Licensing Nuke on Mac OS X The following licensing methods are available: Activation Keys and Node Locked Licenses - these can be used to license an application on a single machine. They do not work on different machines and if you need them to, you’ll have to transfer your license." /><Url Source="../content/getting_started/installation/noncommercial_mac.html" Title="Licensing Nuke Non-commercial on Mac OS X" Abstract="Licensing Nuke Non-commercial on Mac OS X Subscription licensing differs from traditional node locked or floating licenses in that a single license, or entitlement, is valid on any authorized device up to the entitlement's maximum number of activations." /><Url Source="../content/getting_started/installation/linux.html" Title="Linux" Abstract="Linux After installation, all Nuke applications are run from either desktop icons, the browser, or from the terminal using  arguments." /><Url Source="../content/getting_started/installation/installing_nuke_linux.html" Title="Installing Nuke on Linux" Abstract="Installing Nuke on Linux The installation package installs Nuke, NukeX, and Nuke Studio, and icons for these appear in your installation folder." /><Url Source="../content/getting_started/installation/launching_nuke_linux.html" Title="Launching Nuke on Linux" Abstract="Launching Nuke on Linux To launch the application on Linux, do one of the following: Double-click the Nuke, NukeX, or Nuke Studio icon on the Desktop." /><Url Source="../content/getting_started/installation/licensing_nuke_linux.html" Title="Licensing Nuke on Linux" Abstract="Licensing Nuke on Linux The following licensing methods are available: Activation Keys and Node Locked Licenses - these can be used to license an application on a single machine. They do not work on different machines and if you need them to, you’ll have to transfer your license." /><Url Source="../content/getting_started/installation/noncommercial_linux.html" Title="Licensing Nuke Non-commercial on Linux" Abstract="Licensing Nuke Non-commercial on Linux Subscription licensing differs from traditional node locked or floating licenses in that a single license, or entitlement, is valid on any authorized device up to the entitlement's maximum number of activations." /><Url Source="../content/getting_started/using_interface/nuke_studio_environments.html" Title="Nuke Studio Environments" Abstract="Nuke Studio Environments The Timeline Environment The Nuke Studio Timeline environment allows you to conform, create Nuke Comps, add soft effects, perform timeline-based editing, export your project, and view and edit metadata and properties." /><Url Source="../content/getting_started/using_interface/workspaces.html" Title="Workspaces" Abstract="Workspaces Default Workspaces There are six default workspaces in Nuke/NukeX and Nuke Studio. By default, Nuke/NukeX opens in the Compositing workspace and Nuke Studio opens in the Finishing workspace. To change the workspace, you can do either of the following:" /><Url Source="../content/comp_environment/customizing_interface/setting_preferences.html" Title="Setting Preferences" Abstract="Setting Preferences Displaying the Preferences Dialog Open the Preferences dialog by pressing Shift+S. The preferences available depend on which mode Nuke is launched in." /><Url Source="../content/getting_started/using_interface/using_compositing_env.html" Title="Using the Compositing Environment" Abstract="Using the Compositing Environment This chapter is designed to help you learn how to use the Compositing environment including working with nodes, using the Toolbar, and using the Properties panel." /><Url Source="../content/getting_started/using_interface/toolbar_menus_content.html" Title="Toolbar, Menu Bar, and Content Menus" Abstract="Toolbar, Menu Bar, and Content Menus The Toolbar is located on the left-hand side of the Viewer in the Compositing environment. It consists of a number of menu icons. The different nodes are grouped under these icons based on their functions. You use the Toolbar to add nodes to the Node Graph." /><Url Source="../content/getting_started/using_interface/using_toolbar.html" Title="Using the Toolbar" Abstract="Using the Toolbar The Compositing environment’s Toolbar includes the following icons: Nuke Assist does not support all the toolbars available in Nuke. See  Flavors of Nuke for more information." /><Url Source="../content/getting_started/using_interface/working_nodes.html" Title="Working with Nodes" Abstract="Working with Nodes Nodes are the basic building blocks of any composite. You can create a new compositing script by inserting and connecting nodes to form a network of operations. These operations concatenate and allow you to manipulate your images." /><Url Source="../content/getting_started/using_interface/navigating_node_graph.html" Title="Navigating Inside the Node Graph" Abstract="Navigating Inside the Node Graph As scripts grow in complexity, you need to be able to pan to a particular cluster of nodes quickly. The Node Graph offers a couple of methods for doing so." /><Url Source="../content/getting_started/using_interface/properties_panels.html" Title="Properties Panels" Abstract="Properties Panels " /><Url Source="../content/getting_started/using_interface/using_color_controls.html" Title="Using the Color Controls " Abstract="Using the Color Controls In the Properties panels, there are usually four extra controls to the right of a control including color swatch, color picker, channel selector and the animation menu. The first three are color controls. For more information about using the animation menu, see Animating Parameters." /><Url Source="../content/getting_started/using_interface/customizing_nodes_defaults.html" Title="Customizing a Node’s Defaults with Node Presets" Abstract="Customizing a Node’s Defaults with Node Presets Sometimes the default control values on a node aren’t the ones you use most often. If you find yourself frequently adjusting many control defaults, you may want to save your customized default values as a node preset." /><Url Source="../content/getting_started/using_interface/animating_parameters.html" Title="Animating Parameters" Abstract="Animating Parameters Animating a parameter refers to changing its value over time. You do so by setting keyframes (frames at which you explicitly define a value) and allowing Nuke to interpolate the values in between. You can animate most of Nuke’s parameters in this manner." /><Url Source="../content/getting_started/using_interface/viewers.html" Title="Compositing Viewers" Abstract="Compositing Viewers A Viewer node displays the render output of any connected process nodes in the Viewer panel and does not edit any data. Viewer nodes allow you to quickly assign the right values to parameters as they allow you to edit in context - that is, edit a given node’s parameters upstream in a script while viewing the effect of those changes downstream." /><Url Source="../content/getting_started/using_interface/using_viewer_controls.html" Title="Using the Viewer Controls" Abstract="Using the Viewer Controls A Viewer’s on-screen controls let you navigate the timeline, display channels, zoom, choose cameras (3D mode), and create display wipes and composites." /><Url Source="../content/getting_started/using_interface/using_file_browser.html" Title="Using the File Browser" Abstract="Using the File Browser Whenever you load or save files in Nuke, you’ll see a browser similar to the one shown in the image below. The directory navigation buttons let you create or access the directory from which you wish to read or write data." /><Url Source="../content/getting_started/using_interface/undoing_redoing.html" Title="Undoing and Redoing" Abstract="Undoing and Redoing Nuke generally gives you an undo history that extends back to the first action of the application’s current session." /><Url Source="../content/getting_started/using_interface/progress_bars.html" Title="Progress Bars" Abstract="Progress Bars Nuke displays a progress bar for each active task it performs. By default, progress bars appear in a pop-up dialog, but you can also display them in the Progress panel. To do so, click on a content menu button and select Windows &gt; Progress. This opens a Progress panel. The next time you get a progress bar, it appears in the panel. If you delete the panel, progress bars appear in a pop-up dialog again." /><Url Source="../content/getting_started/using_interface/handling_errors.html" Title="Handling Errors" Abstract="Handling Errors Sometimes things may not go as you planned and you might face an error message in Nuke. When this happens, an error alert displays in the Viewer and on the node that has a problem in the Node Graph." /><Url Source="../content/timeline_environment/customworkspace/custom_workspaces.html" Title="Using Nuke Studio's Timeline Environment" Abstract="Using Nuke Studio's Timeline Environment This chapter is designed to help you learn how to use Nuke Studio's Timeline environment, including ingesting media and using the Timeline Viewer." /><Url Source="../content/timeline_environment/ingest/about_clips.html" Title="About Clips" Abstract="About Clips The interface sorts your bin clips into three broad categories: Audio and Video, Audio Only, and Video Only. Clips are displayed differently depending on their content, location, and in the case of the Viewer, the current mode." /><Url Source="../content/timeline_environment/ingest/ingesting.html" Title="Ingesting Media" Abstract="Ingesting Media Adding media is as simple as drag-and-drop from a file browser or selecting File &gt; Import File(s) or Import Folder(s). The application imports your media into the bin view providing you with a thumbnail of all of your clips and preserving the original folder and file hierarchy." /><Url Source="../content/timeline_environment/ingest/using_drag_drop.html" Title="Using Drag-and-Drop" Abstract="Using Drag-and-Drop Locate your media in a file browser and drag the frame range, clip, folder, or folders into the Project tab." /><Url Source="../content/timeline_environment/ingest/using_file_browsers.html" Title="Using the File Browser" Abstract="Using the File Browser If you prefer to work with menus, you can also import clips using the file browser. You can import individual clip files, ranges, or entire folders, depending on the amount of media you intend to use." /><Url Source="../content/timeline_environment/ingest/reconnect_refresh.html" Title="Reconnecting and Refreshing Clips" Abstract="Reconnecting and Refreshing Clips During the post process, media inevitably changes location or form. You can reload or replace your media using the reconnect, refresh, and rescan functions." /><Url Source="../content/timeline_environment/ingest/caching_media_locally.html" Title="Caching Media Locally" Abstract="Caching Media Locally Nuke Studio has the facility to cache bin files locally, either individually or by setting an automatically localized folder (NUKE_TEMP_DIR/localize, by default), to help guarantee playback stability. Local caching is controlled initially in the Preferences dialog, then on a clip-by-clip basis." /><Url Source="../content/timeline_environment/usingviewer/using_viewer.html" Title="Using the Timeline Viewer" Abstract="Using the Timeline Viewer Nuke Studio's Timeline environment supports two distinct Viewer types: clip and sequence. This chapter describes the difference between the two and how to use them." /><Url Source="../content/timeline_environment/usingviewer/playback_tools.html" Title="Timeline Playback Tools" Abstract="Timeline Playback Tools There are many useful tools at the top of the Viewer, some of which allow you to select channels, adjust gain and gamma, and zoom and scale down the image in the Viewer." /><Url Source="../content/timeline_environment/usingviewer/viewer_tools.html" Title="Timeline Viewer Tools" Abstract="Timeline Viewer Tools The Viewer has two sets of tools for manipulating your media: the Viewer tools and the playback tools. The Viewer tools, located at the top of the Timeline Viewer, are used to affect the mouse pointer as you move over the Viewer, and to select Viewer preferences:" /><Url Source="../content/timeline_environment/usingviewer/using_media_tab.html" Title="Using the Media Tab" Abstract="Using the Media Tab The Media tab contains format specific controls dependent on the media currently in the Viewer. If the Media tab is not displayed in your workspace, navigate to Window &gt; Media to open it in a floating window." /><Url Source="../content/timeline_environment/usingviewer/working_with_colourspace.html" Title="Working with Colorspaces" Abstract="Working with Colorspaces Colorspace changes are applicable to clips in bins and track items, as well as in the Viewer using the Media tab." /><Url Source="../content/timeline_environment/usingviewer/previewing_on_sdi.html" Title="Previewing on a Broadcast Monitor" Abstract="Previewing on a Broadcast Monitor The Monitor Out feature allows you to preview Viewer images on an external broadcast video monitor to check the final result, including the correct colorspace and aspect ratio. This option requires additional hardware, such as a monitor output card or a FireWire port." /><Url Source="../content/timeline_environment/usingviewer/using_scopes.html" Title="Using Scopes" Abstract="Using Scopes Nuke provides scopes to help you evaluate your media. There are a number of global controls (Preferences &gt; Panels &gt; Scopes) that affect how the Scopes display information:" /><Url Source="../content/timeline_environment/usingviewer/waveform.html" Title="Waveform" Abstract="Waveform The Waveform scope provides information on clip luminance, or brightness, which you can use to decide whether the clip is over or under exposed. The white traces represent luminance values from 0 - 100% (black through the spectrum to white). The higher the waveform, the brighter the image in the Viewer." /><Url Source="../content/timeline_environment/usingviewer/vectorscopes.html" Title="Vectorscopes" Abstract="Vectorscopes Vectorscopes display color, saturation, and hue information for the current frame. Similar to color wheels, Vectorscopes display information radially, from the center outward. The farther from the center the data spans, the more saturation is represented." /><Url Source="../content/timeline_environment/usingviewer/about_anamorphic_media.html" Title="About Anamorphic Media" Abstract="About Anamorphic Media The Viewer automatically recognizes anamorphic clips and displays them with the correct aspect ratio." /><Url Source="../content/timeline_environment/usingviewer/about_quicktime_media.html" Title="About QuickTime Media" Abstract="About QuickTime Media Working with .mov files can be unpredictable when compared to other formats, so Hiero gives you a few QuickTime options when reading and writing .mov files." /><Url Source="../content/timeline_environment/usingviewer/about_red_media.html" Title="About RED Media" Abstract="About RED Media When working with RED clips, using a RED Rocket card can increase the rendering speed significantly, especially at higher resolutions." /><Url Source="../content/comp_environment/nuke/nuke_intro.html" Title="Compositing with Nuke" Abstract="Compositing with Nuke Each chapter in this section explains in detail a key feature of Nuke. You can use the section to familiarize yourself with the features you are particularly interested in, or to get answers to specific problems that arise during compositing. For information on the features in NukeX and Nuke Studio, see NukeX and Nuke Studio or Timeline Editing in Nuke Studio" /><Url Source="../content/getting_started/managing_scripts/managing_scripts.html" Title="Managing Scripts" Abstract="Managing Scripts In this chapter, you learn about Nuke’s project files called scripts or comps. The topics covered include setting up, saving, and loading scripts. You’ll also learn about managing your node tree in the Node Graph, using Precomp nodes, and working with file metadata." /><Url Source="../content/getting_started/managing_scripts/setting_up_your_script.html" Title="Setting Up Your Script" Abstract="Setting Up Your Script When you start working on a script, you should first define the settings for it. This involves assigning the script a name, frame range, frame rate, and default full and proxy resolution format." /><Url Source="../content/getting_started/managing_scripts/name_frame_range_fps.html" Title="Name, Time Span, and Frame Rate" Abstract="Name, Time Span, and Frame Rate To set the script name, frame range, and frame rate: Select Edit &gt; Project Settings, or simply press S over a blank portion of the workspace." /><Url Source="../content/getting_started/managing_scripts/setting_default_directory.html" Title="Setting the Default Project Directory" Abstract="Setting the Default Project Directory In the Project Settings (Edit &gt; Project Settings) you can define your default project directory. You can then refer to it with ’./’ in your file paths, for example ./test.jpg for an image called test in your default project directory." /><Url Source="../content/getting_started/managing_scripts/full_size_formats.html" Title="Full-Size Formats" Abstract="Full-Size Formats When you start a new script in Nuke, you need to set up a full-size format. The full-size format determines the size of the  image that you get from any disconnected node inputs. It also sets the default size of any script-generated elements, such as Constants and ColorBars." /><Url Source="../content/getting_started/managing_scripts/proxy_mode.html" Title="Proxy Mode" Abstract="Proxy Mode When compositing with Nuke, you can work in two different modes: the full-size mode or proxy mode. In the full-size mode, images are read in exactly as they are on the disk, and all positions are in actual pixels in these images. This is the mode you want to use for accurate feedback and when rendering the final output." /><Url Source="../content/getting_started/managing_scripts/loading_image_sequences.html" Title="Loading Image Sequences" Abstract="Loading Image Sequences When you are ready to start compositing, you may want to begin by importing a background or foreground image sequence. Typically, you would read in both full- and proxy-resolution versions of the sequence. You can read in several image sequences in one go." /><Url Source="../content/getting_started/managing_scripts/importing_image_sequences.html" Title="Importing Image Sequences" Abstract="Importing Image Sequences To import an image sequence using Nuke's file browser: Select Image &gt; Read (or press R over the Nuke Node Graph)." /><Url Source="../content/getting_started/managing_scripts/naming_conventions.html" Title="Naming Conventions" Abstract="Naming Conventions The file names of image sequences generally end in a number before the extension, for example image0001.rgb, image0002.rgb, image0003.rgb, and so on. When browsing for files like this, you may notice that the sequence appears as image####.rgb. Here, #### is Nuke’s way of indicating that the number is in a 4-digit incremental format. For a 3-digit format, such as image001.rgb, the frame number variable would be ###." /><Url Source="../content/getting_started/managing_scripts/changing_read_frames.html" Title="Changing the Relation Between the Current Frame and the Frame Read In" Abstract="Changing the Relation Between the Current Frame and the Frame Read In By default, Nuke assumes an exact relation between the current frame processed, and the frame read in. For example, at frame 15, Nuke reads in image.0015.rgb. However, you can change this behavior using the frame parameter on the Read node. For instance, if you have a sequence that runs from image.0500.rgb to image.1000.rgb, you may want to read in image.0500.rgb at frame 1. Nuke lets you do this using expressions, specified start frames, and constant offsets. Each method is described below." /><Url Source="../content/getting_started/managing_scripts/reformatting_image_sequences.html" Title="Reformatting Image Sequences" Abstract="Reformatting Image Sequences When you import image sequences, Nuke stores their format settings and makes them available to the Reformat node. You can then use the Reformat node to resize and reposition your image sequences to a different format. Reformat nodes also allow you to use plates of varying image resolution on a single script without running into issues when combining them." /><Url Source="../content/getting_started/managing_scripts/image_caching.html" Title="Image Caching" Abstract="Image Caching To ensure fast playback, Nuke uses several ways of caching data. Some of these include the following:" /><Url Source="../content/getting_started/managing_scripts/cache_directory.html" Title="The Cache Directory" Abstract="The Cache Directory Both the automatic caching and the DiskCache node use the same cache directory defined using the Preferences dialog. In the Preferences, you can also set the maximum size you allow the disk cache to consume. For more information on the caching preferences, see Defining the Settings for Caching below." /><Url Source="../content/getting_started/managing_scripts/defining_settings_caching.html" Title="Defining the Settings for Caching" Abstract="Defining the Settings for Caching You can define the settings for caching  in the Preferences &gt; Performance &gt; Caching." /><Url Source="../content/getting_started/managing_scripts/clearing_disk_cache.html" Title="Clearing the Disk Cache" Abstract="Clearing the Disk Cache When the disk cache becomes full, old items are automatically deleted. If necessary, you can also empty the disk cache manually. You may want to do this if, for some reason, wrong images are displayed in the Viewer." /><Url Source="../content/getting_started/managing_scripts/using_diskcache_node.html" Title="Using the DiskCache Node" Abstract="Using the DiskCache Node The DiskCache node caches to disk scanlines from its input as they are requested by its output. This can be useful, for example, if:" /><Url Source="../content/getting_started/managing_scripts/caching_files_locally.html" Title="Caching Files Locally for Better Performance" Abstract="Caching Files Locally for Better Performance You may find that sometimes loading files from a remote server slows down your processing. In such a case, you can tell Nuke to bring down the files you’re frequently working with and store them on a local drive for speedier processing." /><Url Source="../content/getting_started/managing_scripts/saving_scripts_recovering.html" Title="Saving Scripts and Recovering Back-Ups" Abstract="Saving Scripts and Recovering Back-Ups You know the mantra: save and save often. Nuke provides three ways to save your scripts, or comps, making it easy to version them. There's also an automatic timed backup, which you can turn off if you're feeling brave - but we sure don't recommend it." /><Url Source="../content/getting_started/managing_scripts/saving_scripts.html" Title="Saving Scripts" Abstract="Saving Scripts There are three ways of saving scripts: To save a new script, select File &gt; Save Comp as (or press Shift+Ctrl/Cmd+S)." /><Url Source="../content/getting_started/managing_scripts/automatic_backup_scripts.html" Title="Automatic Back-Up of Scripts" Abstract="Automatic Back-Up of Scripts You can define where and how often Nuke makes automatic back-ups your files, or turn off the autosave function." /><Url Source="../content/getting_started/managing_scripts/recovering_backups.html" Title="Recovering Back-Ups" Abstract="Recovering Back-Ups After experiencing a system or power failure, you are likely to want to recover the back-up files created by Nuke’s autosave function." /><Url Source="../content/getting_started/managing_scripts/closing_scripts.html" Title="Closing Nuke Scripts" Abstract="Closing Nuke Scripts To close a script: Select File &gt; Close Comp (or press Ctrl/Cmd+W). If you have made any unsaved changes to the script, Nuke prompts you to select whether to save them. Click Yes to save your changes or No to ignore them." /><Url Source="../content/getting_started/managing_scripts/loading_scripts.html" Title="Loading Nuke Scripts" Abstract="Loading Nuke Scripts When you have built a script, or comp, and saved it and want to come back to it later, you need to load in an entire script file. You recognize Nuke’s script files from the extension .nk (for example firstscript.nk)." /><Url Source="../content/getting_started/managing_scripts/defining_frame_ranges.html" Title="Defining Frame Ranges" Abstract="Defining Frame Ranges Several dialogs in Nuke, such as the Frames to render and Frames to flipbook dialogs, prompt you for a frame range. To define one, you need to enter a starting frame and an ending frame, separated by a dash. For example, to restrict an action to frames 1, 2, 3, 4, and 5, you would use 1-5 as the frame range." /><Url Source="../content/comp_environment/reformatting_elements/reformatting_elements.html" Title="Reformatting Elements" Abstract="Reformatting Elements This chapter teaches you how to reformat images through scaling, cropping, and pixel aspect adjustments. You will also learn to adjust bounding boxes to minimize processing and rendering times." /><Url Source="../content/comp_environment/reformatting_elements/reformatting_images.html" Title="Reformatting Images" Abstract="Reformatting Images This section discusses scaling operations with specific regard to reformatting elements to match specific resolutions and pixel aspect ratios. Nuke includes at least two nodes designed for reformatting elements: Reformat and Crop." /><Url Source="../content/comp_environment/reformatting_elements/using_reformat.html" Title="Using the Reformat Node" Abstract="Using the Reformat Node You can use the Reformat node for three different purposes: To generate image sequences that match a desired image format in terms of both resolution and pixel aspect ratio (the width to height ratio of the format’s individual pixels)." /><Url Source="../content/comp_environment/reformatting_elements/cropping_elements.html" Title="Cropping Elements" Abstract="Cropping Elements To crop a frame is to cut out the unwanted portions of the image area. To Crop Elements" /><Url Source="../content/comp_environment/reformatting_elements/adjusting_bbox.html" Title="Adjusting the Bounding Box" Abstract="Adjusting the Bounding Box The bounding box defines the area of the frame that Nuke sees as having valid image data. The larger the bounding box is, the longer it takes Nuke to process and render the images. To minimize processing and rendering times, you can crop the bounding box. Occasionally, the bounding box may also be too small, in which case you need to expand it." /><Url Source="../content/comp_environment/reformatting_elements/resizing_bbox.html" Title="Resizing the Bounding Box" Abstract="Resizing the Bounding Box The AdjBBox node lets you expand or crop the edges of the bounding box by a specified number of pixels." /><Url Source="../content/comp_environment/reformatting_elements/copying_bbox.html" Title="Copying a Bounding Box from One Input to Another" Abstract="Copying a Bounding Box from One Input to Another Some Nuke operations, such as a merge, can cause an expansion of the bounding box area because Nuke does not know that the extra area is going to be black or another constant color. Often, you can fix this by copying the bounding box from one of the inputs to the resulting image, thus cutting off this extra area. For this, you can use the CopyBBox node." /><Url Source="../content/comp_environment/reformatting_elements/adding_blackoutside.html" Title="Adding a Black Outside Edge to the Bounding Box" Abstract="Adding a Black Outside Edge to the Bounding Box If you adjust a bounding box with the AdjBBox or CopyBBox node, you may notice that whatever is outside the bounding box area gets replicated towards the edges of the image. If necessary, you can remove these replicated edge pixels and fill everything outside the bounding box area with black. To do this, use the BlackOutside node." /><Url Source="../content/comp_environment/channels/channels.html" Title="Channels" Abstract="Channels Digital images generally consist of the four standard channels: red, green, blue, and alpha. Nuke allows you to create or import additional channels as masks, lighting passes, and other types of image data." /><Url Source="../content/comp_environment/channels/understanding_channels.html" Title="Understanding Channels and Layers" Abstract="Understanding Channels and Layers At a very basic level, channels in Nuke carry image data and layers are containers for these channels, up to the maximum of 1023 channels per script. When elements are rendered out in the OpenEXR format, for example, you can operate on multiple channels from a single image." /><Url Source="../content/comp_environment/channels/creating_channels.html" Title="Creating Channels and Layers" Abstract="Creating Channels and Layers It’s important to understand that many types of nodes allow you to direct their output to a specific channel and parent layer. You have the option of processing these channels in each subsequent node, or leaving them unchanged." /><Url Source="../content/comp_environment/channels/calling_channels.html" Title="Calling Channels" Abstract="Calling Channels By default, most nodes in Nuke attempt to process the current channels in the rgba set and place the output in those same channels. However, many nodes also contain an input dropdown menu which lets you select the channels you want to process, and an output dropdown menu to select the channel(s) where the results should be stored." /><Url Source="../content/comp_environment/channels/viewing_channels.html" Title="Viewing Channels in the Viewer" Abstract="Viewing Channels in the Viewer You can view the individual red, green, blue, and alpha channels in the Viewer using the R, G, B, and A keys on the keyboard. For more information, see Compositing Viewers and Using the Timeline Viewer." /><Url Source="../content/comp_environment/channels/selecting_input_channels.html" Title="Selecting Input Channels" Abstract="Selecting Input Channels A node’s channels field lets you select one or several channels for processing." /><Url Source="../content/comp_environment/channels/selecting_masks.html" Title="Selecting Masks" Abstract="Selecting Masks The mask controls in a node’s properties panel let you select a single channel for use as a matte in a given process (typically, a color correction). The given process thereafter is limited to the non-black areas of the selected channel." /><Url Source="../content/comp_environment/channels/linking_channels.html" Title="Linking Channels Using the Link Menu" Abstract="Linking Channels Using the Link Menu You can create expression links to connect channel and layer controls with other controls in various nodes. Since these controls aren’t meant to be animated, you can’t use the full range of Nuke expressions, nor can you use Python or Tcl languages. You can link controls using the Link menu  next to the control on the properties panel:" /><Url Source="../content/comp_environment/channels/tracing_channels.html" Title="Tracing Channels" Abstract="Tracing Channels You may have noticed that nodes visually indicate the channels which they are processing (that is, treating in some way) and passing (that is, conveying without any treatment). This is done via a system of colored rectangles, which allows you to trace the flow of channels throughout a script." /><Url Source="../content/comp_environment/channels/renaming_channels.html" Title="Renaming Channels " Abstract="Renaming Channels In the course of building your script, you may find it necessary to replace certain channels in a layer." /><Url Source="../content/comp_environment/channels/removing_channels.html" Title="Removing Channels and Layers" Abstract="Removing Channels and Layers When you are done using a layer or a channel within a layer, you may wish, for the sake of clarity, to remove it so that it is no longer passed to downstream nodes. Note that leaving channels in the stream does not itself cause them to be computed, only channels required are computed." /><Url Source="../content/comp_environment/channels/swapping_channels.html" Title="Swapping Channels " Abstract="Swapping Channels Nuke features two main nodes for channel swapping: Shuffle and ShuffleCopy. Shuffle lets you rearrange the channels from a single image (1 input) and then output the result to the next node in your compositing tree. ShuffleCopy lets you rearrange channels from two images (2 inputs) and output the result. Let’s take a look at the ShuffleCopy node first." /><Url Source="../content/comp_environment/channels/channel_outputs.html" Title="Channel Outputs" Abstract="Channel Outputs The combination of the boxes checked in the channel matrix create the list of channels that are output to the layer selected in the top dropdown menu on the right." /><Url Source="../content/comp_environment/channels/assigning_constants.html" Title="Assigning Constants" Abstract="Assigning Constants The shuffle nodes also include parameters that let you assign white (1) or black (0) constants to any incoming channel. So, for example, to reset the alpha channel to a full-frame image, you would configure the matrix as follows:" /><Url Source="../content/comp_environment/channels/creating_swap_channelsets.html" Title="Creating Swap Layers" Abstract="Creating Swap Layers Finally, note that if the layer to which you wish to output channels does not yet exist, you can create it using the new option on the dropdown menus on the right. Once you select the new option, you follow the same process for creating layers as is described under Creating Channels and Layers." /><Url Source="../content/comp_environment/merging/merges.html" Title="Merging Images" Abstract="Merging Images With Nuke, you can merge images in a wide variety of ways. In this chapter, we teach you how to use the Merge, ContactSheet, and CopyRectangle nodes." /><Url Source="../content/comp_environment/merging/layering_images.html" Title="Layering Images Together with the Merge Node" Abstract="Layering Images Together with the Merge Node The Merge node with its compositing algorithms allows you to control just how your images are combined." /><Url Source="../content/comp_environment/merging/merge_operations.html" Title="Merge Operations" Abstract="Merge Operations When layering images with the Merge node, you need to select a compositing algorithm that determines how the pixel values from one input are calculated with the pixel values from the other to create the new pixel values that are output as the merged image." /><Url Source="../content/comp_environment/merging/generating_contactsheets.html" Title="Generating Contact Sheets" Abstract="Generating Contact Sheets In order to demonstrate, document or manage what you are doing for a project, it can be useful to generate a contact sheet that shows your frame sequence(s) lined up next to each other in a matrix. For this, you can use the ContactSheet node. It generates a contact sheet from all its inputs or from the frames of one input." /><Url Source="../content/comp_environment/merging/copying_rectangles.html" Title="Copying a Rectangle from one Image to Another" Abstract="Copying a Rectangle from one Image to Another With the CopyRectangle node, you can copy a rectangle from one input on top of another." /><Url Source="../content/comp_environment/denoise/removing_noise_denoise.html" Title="Removing Noise with Denoise" Abstract="Removing Noise with Denoise The Denoise node is an efficient tool for removing noise or grain from your footage. It uses spatial filtering to remove noise without losing image quality." /><Url Source="../content/comp_environment/denoise/connecting_denoise.html" Title="Connecting Denoise" Abstract="Connecting Denoise To connect Denoise: Create a Denoise node by clicking Filter &gt; Denoise. Connect the Denoise node’s Source input to the image you want to denoise." /><Url Source="../content/comp_environment/denoise/analyzing_removing_noise.html" Title="Analyzing and Removing Noise" Abstract="Analyzing and Removing Noise To analyze and remove noise: In the Denoise controls, set Source to Film or Digital depending on the type of footage you’re using. Film is the default setting and it works fine in most cases even if the footage is in a digital format." /><Url Source="../content/comp_environment/denoise/reviewing_results.html" Title="Reviewing the Results" Abstract="Reviewing the Results To review the results: Zoom in to review the results. To compare the denoised image with the original, press D on the Denoise node repeatedly to disable and re-enable it." /><Url Source="../content/comp_environment/denoise/fine_tuning.html" Title="Fine Tuning" Abstract="Fine Tuning To fine tune the results: Set Denoise Amount to adjust the overall amount of noise to remove. Increase this to remove more noise, or decrease it if you want to keep more detail. A value of 0 removes no noise." /><Url Source="../content/comp_environment/keying_with_primatte/keying_primatte.html" Title="Keying with Primatte" Abstract="Keying with Primatte This section explains how to use the blue/green screen keyer, Primatte, in Nuke." /><Url Source="../content/comp_environment/keying_with_primatte/connecting_primatte.html" Title="Connecting the Primatte Node" Abstract="Connecting the Primatte Node To connect the Primatte node: Start up Nuke and create a Primatte node (Keyer &gt; Primatte)." /><Url Source="../content/comp_environment/keying_with_primatte/primatte_basic_operation.html" Title="Primatte Basic Operation Tutorial" Abstract="Primatte Basic Operation Tutorial This describes the operation of the Primatte node in Nuke. A more detailed explanation of how the Primatte algorithm actually works can be found under The Primatte Algorithm ." /><Url Source="../content/comp_environment/keying_with_primatte/auto_compute.html" Title="Auto-Compute" Abstract="Auto-Compute Primatte has a feature that attempts to eliminate the first three steps of the more standard keying procedure. The Auto-Compute button is a good starting point and it may make your keying operation much easier." /><Url Source="../content/comp_environment/keying_with_primatte/smart_select_bg_color.html" Title="Smart Select BG Color" Abstract="Smart Select BG Color Ensure that the Smart Select BG Color action is selected (it should be at this time as it is the default operation mode)." /><Url Source="../content/comp_environment/keying_with_primatte/clean_bg_noise.html" Title="Clean BG Noise" Abstract="Clean BG Noise Set operation to Clean BG Noise. If there are any white regions in the dark, bluescreen area, it is noise (or shades of blue that did not get picked up on the first sample) and should be removed. Sample through these white noise regions and release the pen or mouse button to process the data and eliminate the noise. Repeat this procedure as often as necessary to clear all the noise from the background areas. Sometimes increasing the brightness of your monitor or the screen gamma allows you to see noise that would otherwise be invisible." /><Url Source="../content/comp_environment/keying_with_primatte/clean_fg_noise.html" Title="Clean FG Noise" Abstract="Clean FG Noise If there are dark regions in the middle of the mostly white foreground object, that is, if the key is not 100% in some portion of the targeted foreground, select Clean FG Noise from the operation dropdown menu. Use the same techniques as for Clean BG Noise, but this time sample the dark pixels in the foreground area until that area is as white as possible." /><Url Source="../content/comp_environment/keying_with_primatte/spill_removal_method1.html" Title="Spill Removal - Method #1" Abstract="Spill Removal - Method #1 There are three ways in Primatte to remove the spill color. The quickest method is to select Spill Sponge from the operation dropdown menu and then sample the spill areas away. By just positioning the cursor over a bluish pixel and sampling it, the blue disappears from the selected color region and is replaced by a more natural color. Additional spill removal should be done using the Fine Tuning tools or by using the Spill(-) operation. Both are explained further on in this chapter." /><Url Source="../content/comp_environment/keying_with_primatte/spill_removal_method2.html" Title="Spill Removal - Method #2" Abstract="Spill Removal - Method #2 To remove spill: Select the Fine Tuning Sliders in the operation dropdown menu. This activates the Fine Tuning sliders." /><Url Source="../content/comp_environment/keying_with_primatte/spill_removal_method3.html" Title="Spill Removal - Method #3" Abstract="Spill Removal - Method #3 If these final spill suppression operations have changed the final compositing results, you may have to return to earlier operations to clean up the matte. If the composite view looks good, it is a good idea to go back and take a final look at the alpha channel view. Sometimes in the Primatte operation, a 100% foreground area (all white) becomes slightly transparent (gray). You can clean those transparent areas up by using the Matte Sponge tool." /><Url Source="../content/comp_environment/keying_with_primatte/sampling_tools.html" Title="Sampling Tools" Abstract="Sampling Tools Primatte’s spill, matte, and detail sampling tools allow you to make fine adjustments to balance between these aspects of your composite. You can find these tools in the operation dropdown menu in the Primatte properties panel." /><Url Source="../content/comp_environment/keying_with_primatte/replacing_spill.html" Title="Replacing Spill " Abstract="Replacing Spill The proper processing of spill on foreground objects is one of the many useful features of Primatte. You can move between four modes to see how they affect the image clip you are working with. Under Spill Process, in the replace with dropdown menu, you can select the following options:" /><Url Source="../content/comp_environment/keying_with_primatte/primatte_controls.html" Title="Primatte Controls" Abstract="Primatte Controls On the Primatte properties panel, you can further adjust several controls. " /><Url Source="../content/comp_environment/keying_with_primatte/initialize_section.html" Title="Initialize Section" Abstract="Initialize Section In the Initialize section, you can select which algorithm Primatte uses to calculate your keying result:" /><Url Source="../content/comp_environment/keying_with_primatte/viewer_tools.html" Title="Primatte Viewer Tools" Abstract="Primatte Viewer Tools To navigate within the Primatte Viewer, you can: drag to rotate the polyhedrons," /><Url Source="../content/comp_environment/keying_with_primatte/degrain_section.html" Title="Degrain Section" Abstract="Degrain Section The Degrain tools are used when a foreground image is highly compromised by film grain. As a result of the grain, when backing screen noise is completely removed, the edges of the foreground object often become harsh and jagged leading to a poor key. These tools were created to, hopefully, help when a compositing artist is faced with a grainy image." /><Url Source="../content/comp_environment/keying_with_primatte/actions_section.html" Title="Actions Section" Abstract="Actions Section In the operations dropdown menu, you can select from the following options: Smart Select BG Color" /><Url Source="../content/comp_environment/keying_with_primatte/adjust_lighting.html" Title="Adjust Lighting" Abstract="Adjust Lighting When adjust lighting is enabled, Primatte first creates a grid on the foreground image and samples the grid to determine which squares contain foreground information and which contain some shade of the background color. Using the remaining shades of blue, it uses extrapolations of the existing backing screen colors, and then uses this technique to fill in the area previously covered by the foreground object. This results in a clean backing screen that has no foreground object (to see this, you can set output mode to adjust lighting BG). Primatte uses this clean backing screen as the reference data to process the original foreground image to generate light-adjusted foreground that has a much more even shade of blue with the foreground object (this is displayed if you set output mode to adjust lighting FG). This allows Primatte to perform the keying operation using the light-adjusted foreground, resulting in a clean key around all areas on the foreground object." /><Url Source="../content/comp_environment/keying_with_primatte/hybrid_matte.html" Title="Hybrid Matte" Abstract="Hybrid Matte After sampling the backing screen color and finding that the edges of the foreground object look very good, you sometimes find that an area of the foreground object is transparent. This is due to the foreground containing a color that is close to the backing screen color. When this transparency is removed using the Clean FG Noise operation, the edge of the foreground object picks up a fringe that is close to the backing screen color. This is very hard to remove without sacrificing quality somewhere else on the image." /><Url Source="../content/comp_environment/keying_with_primatte/fine_tuning.html" Title="Fine Tuning" Abstract="Fine Tuning When the Fine Tuning Sliders operational mode is selected, the color of the sampled pixel within the Viewer window is registered as a reference color for fine tuning. It is displayed in the current color chip in the Actions section. To perform the tuning operation, sample a color region on the image, select a Fine Tuning slider and move the slider to achieve the desired effect. See the Fine Tuning Sliders tool descriptions further on in this section for more details on slider selection." /><Url Source="../content/comp_environment/keying_with_primatte/spill_process_section.html" Title="Spill Process Section" Abstract="Spill Process Section The controls in the Spill Process section of the Primatte properties panel let you specify how to replace the spill color." /><Url Source="../content/comp_environment/keying_with_primatte/output_section.html" Title="Output Section" Abstract="Output Section These are the formats for the output of the node (output mode): composite - outputs the composite result of the Primatte node, along with the calculated matte." /><Url Source="../content/comp_environment/keying_with_primatte/primatte_algorithm.html" Title="The Primatte Algorithm " Abstract="The Primatte Algorithm There are three Primatte algorithms. Here is a chart that shows the main differences between them." /><Url Source="../content/comp_environment/keying_with_primatte/how_primatte_works.html" Title="Explanation of How Primatte Works" Abstract="Explanation of How Primatte Works The Primatte chromakey algorithm is a sophisticated method of color space segmentation that can be easily explained to help a user achieve maximum effectiveness with the tool. Basically, Primatte segments all the colors in the foreground image into one of four separate categories. The result is a spill suppressed foreground image and a matte which is used to apply the modified foreground to a suitable background." /><Url Source="../content/comp_environment/keying_with_primatte/how_primatte_rt+_works.html" Title="Explanation of How Primatte RT+ works" Abstract="Explanation of How Primatte RT+ works The Primatte RT+ algorithm differs from the Primatte algorithm in that it has a six surface color separator instead of the 128-faceted polyhedrons. This makes the Primatte RT+ algorithm much simpler and, therefore, faster to calculate. The results and performance of Primatte RT+ falls in between the Primatte and Primatte RT options. Where the Primatte RT+ algorithm might not work well is with less saturated backing screen colors and it also does not support the complement color spill suppression method (which is the spill suppression method that delivers the best detail). For a well-lit and photographed image or clip, this algorithm produces good results and render quickly." /><Url Source="../content/comp_environment/keying_with_primatte/how_primatte_rt_works.html" Title="Explanation of How Primatte RT works" Abstract="Explanation of How Primatte RT works Primatte RT is the simplest algorithm and, therefore, the fastest. It uses only a single planar surface to separate the 3D RGB colorspace and, as a result, does not have the ability to separate out the foreground from the backing screen as carefully as the above Primatte algorithm. Like the Primatte RT+ algorithm, Primatte RT might not work well with less saturated backing screen colors and it too does not support the complement color spill suppression method (which is the spill suppression method that delivers the best detail). For a well-lit and photographed image or clip, this algorithm produces good results and render very quickly." /><Url Source="../content/comp_environment/keying_with_primatte/contact_details.html" Title="Contact Details" Abstract="Contact Details Here are the contact details for the Photron main office and Primatte office. Main Office" /><Url Source="../content/comp_environment/keying_with_keylight/keying_keylight.html" Title="Keying with Keylight" Abstract="Keying with Keylight This section explains how to use the blue/green screen keyer, Keylight, in Nuke." /><Url Source="../content/comp_environment/keying_with_keylight/basic_keying.html" Title="Basic Keying" Abstract="Basic Keying The following section describes the parameters you need to do basic keying. This gives you enough to tackle most simple keys. A discussion of advanced parameters to fine tune keys and tackle complex keys can be found under Advanced Keying." /><Url Source="../content/comp_environment/keying_with_keylight/picking_screen_color.html" Title="Picking the Screen Color" Abstract="Picking the Screen Color The screen color is probably the most important parameter and you should always pick the screen color before doing anything else. It should be set to the color of the green or blue curtain behind the foreground object. Pick the screen color directly from the image by Ctrl/Cmd+Shift+Alt dragging a rectangle over the blue pixels. The average value of the pixels selected is used." /><Url Source="../content/comp_environment/keying_with_keylight/screen_matte.html" Title="Screen Matte" Abstract="Screen Matte Setting the screen color pulls a key, or in other words, creates a matte - the Screen Matte. Setting the screen color also despills the foreground, although you can also use the Despill Bias to remove more spill. In some cases this is enough to get a decent key. For more information on Screen Color, see ." /><Url Source="../content/comp_environment/keying_with_keylight/viewing_key.html" Title="Viewing the Key" Abstract="Viewing the Key After picking the screen color, you have created a matte (the screen matte) and despilled the foreground. The result can be displayed in a number of different ways using the View control. You can output the final composite of the foreground over the background as an rgba, or you can output the premultiplied or unpremultiplied foreground for compositing elsewhere in the tree. The screen matte and the status view are the other two options which are useful in fine-tuning the key rather than as an output image in their own right." /><Url Source="../content/comp_environment/keying_with_keylight/keying_more.html" Title="Keying More" Abstract="Keying More To improve the key by firming up the foreground so the background doesn’t show through, you should adjust the Clip White parameter. To key more of the foreground so that the background is clearer, you should use the Clip Black parameter. Look at the Screen Matte and the Composite while you’re doing this. Don’t overdo either of these or the edges between foreground and background become hard." /><Url Source="../content/comp_environment/keying_with_keylight/advanced_keying.html" Title="Advanced Keying" Abstract="Advanced Keying The following section describes how Keylight works under the hood as well as the parameters you need to fine tune keys and get the most out of Keylight. Basic parameters covered previously may also be covered here in more detail." /><Url Source="../content/comp_environment/keying_with_keylight/view.html" Title="View" Abstract="View The View parameter allows Keylight to render the final composite of the foreground over the background, or the foreground RGBA for compositing further down the tree. Two options, Screen Matte and Status, are for viewing the key rather than an output. The options are:" /><Url Source="../content/comp_environment/keying_with_keylight/screen_color.html" Title="Screen Color" Abstract="Screen Color The screen color represents the color of the pure blue (or green) screen. The first thing you should do when pulling a key is pick the Screen Color." /><Url Source="../content/comp_environment/keying_with_keylight/clip_black_white.html" Title="Clip Black and White" Abstract="Clip Black and White The clip levels are adjusted using two parameters - Clip Black and Clip White. Any alpha value at or below Clip Black is set to zero and any alpha value at or above Clip White is set to 1. The figure on the left shows the original alpha of an image, and the figure on the right shows the result of clipping it." /><Url Source="../content/comp_environment/keying_with_keylight/screen_gain.html" Title="Screen Gain" Abstract="Screen Gain The screen gain controls how much of the screen color is removed to make the screen matte. Increasing this value keys more. The figure on the left shows the Status after picking the Screen Color." /><Url Source="../content/comp_environment/keying_with_keylight/screen_balance.html" Title="Screen Balance" Abstract="Screen Balance The Screen Balance is set automatically after picking the Screen Color. Saturation is measured by comparing the intensity of the primary component against a weighted average of the two other components. This is where the Screen Balance control comes in. A balance of 1 means that the saturation is measured against the smallest of the other two components in the screen color." /><Url Source="../content/comp_environment/keying_with_keylight/preblur.html" Title="PreBlur" Abstract="PreBlur Some shots can be improved by softening the foreground image that is used to generate the key. The original image is then used in the composite and color corrections. The Screen PreBlur parameter is used to do this. DV footage or grainy shots may benefit from subtle use of this control." /><Url Source="../content/comp_environment/keying_with_keylight/tuning.html" Title="Tuning" Abstract="Tuning Keylight creates the screen matte after the screen color has been picked. You can make fine adjustments to this matte using the Gain controls. Increasing the gain controls makes the screen matte more transparent by increasing the amount of screen color showing through the matte. This tends to tint the edges the opposite of the screen color (for blue screens, edges become yellow). Decreasing the gain makes the main matte more opaque by reducing the amount of screen color showing through the matte." /><Url Source="../content/comp_environment/keying_with_keylight/screen_processing.html" Title="Screen Processing" Abstract="Screen Processing Once you have picked the screen color and got the screen matte, you may wish to process this matte using the parameters in the Screen Matte group. The matte can be adjusted using clipping levels; it can be eroded or grown, despotted, and softened." /><Url Source="../content/comp_environment/keying_with_keylight/mattes.html" Title="Mattes" Abstract="Mattes There are 4 mattes in Keylight. Screen Matte Inside Mask Outside Mask Alpha (Composite Alpha) The Screen Matte is generated by the Keylight algorithm after the screen color has been picked. It can be processed (clipped, eroded, etc) by the screen matte processing tools." /><Url Source="../content/comp_environment/keying_with_keylight/inside_outside_masks.html" Title="Inside and Outside Masks" Abstract="Inside and Outside Masks If you can’t adequately improve the screen matte using the clip levels, you can create a matte in Nuke round the pixels you definitely want to be foreground or background and use this as a mask input. The inside mask makes the foreground less transparent and the outside mask is used to clean up the background that might have bits of the foreground showing through. It is sometimes referred to as the hold out mask." /><Url Source="../content/comp_environment/keying_with_keylight/source_alpha.html" Title="Source Alpha" Abstract="Source Alpha This parameter determines what to do with any embedded alpha in the original source image. You need this if you are doing multiple keys on different parts of the image with the View output set to Intermediate Result." /><Url Source="../content/comp_environment/keying_with_keylight/color_replacement.html" Title="Color Replacement" Abstract="Color Replacement Remember that Keylight does two things - it removes the screen color to despill the image and generates an alpha (Screen Matte) to composite the foreground over the background layer." /><Url Source="../content/comp_environment/keying_with_ultimatte/keying_ultimatte.html" Title="Keying with Ultimatte" Abstract="Keying with Ultimatte This section explains how to use the blue/green screen keyer, Ultimatte, in Nuke." /><Url Source="../content/comp_environment/keying_with_ultimatte/connecting_ultimatte.html" Title="Connecting the Ultimatte Node " Abstract="Connecting the Ultimatte Node Start up Nuke, create an Ultimatte node by clicking Keyer &gt; Ultimatte and connect a foreground and a background image (and any additional inputs you want) to it. Add a Nuke Viewer node so you can see the result." /><Url Source="../content/comp_environment/keying_with_ultimatte/sampling_screen_color.html" Title="Sampling the Screen Color" Abstract="Sampling the Screen Color The first step when keying with Ultimatte is to sample the screen color, or tell Ultimatte what color your blue or green screen is. Do the following:" /><Url Source="../content/comp_environment/keying_with_ultimatte/overlay_tools_screen_correct.html" Title="Using Overlay Tools and Screen Correct" Abstract="Using Overlay Tools and Screen Correct Screen Correct compensates for anomalies in the backing area such as uneven lighting, smudges, seams, variation in the backing color, green set pieces, and unwanted shadows cast by set pieces, boom arms, etc. This technique assumes that an exact copy of the problematic green screen element with the subject matter omitted, usually called a Clean Plate, is supplied." /><Url Source="../content/comp_environment/keying_with_ultimatte/adjusting_matte_density.html" Title="Adjusting the Density of the Matte " Abstract="Adjusting the Density of the Matte The controls on the Density tab are used to adjust the density or opacity of the foreground objects. The density of a foreground object is determined by its matte (alpha) value. A completely opaque object's matte is white, a completely transparent object's matte is black, and a partially transparent object's matte is gray. Use the add matte dropper to scrub on areas in the matte that appear gray, but should be white (fully opaque) in the matte. These areas are described as &quot;print-through&quot;, meaning that the opacity of the subject is too low in this area and the background is visible through the foreground in this area. Be careful not to select those objects that should have a gray matte value such as fine hair, smoke or partially transparent objects, as they become opaque. To learn which controls were automatically set by Ultimatte, click the Density tab in the properties panel and note the position of the controls." /><Url Source="../content/comp_environment/keying_with_ultimatte/adjusting_spill_controls.html" Title="Adjusting Spill Controls" Abstract="Adjusting Spill Controls Ultimatte automatically suppresses spill from the backing onto foreground subject matter. The spill controls are used to suppress excessive spill or to retain color similar to spill that has been over-suppressed. To adjust the spill controls, check the spill suppression box on the Ultimatte tab and click Spill tab:" /><Url Source="../content/comp_environment/keying_with_ultimatte/retaining_shadows.html" Title="Retaining Shadows and Removing Noise" Abstract="Retaining Shadows and Removing Noise Use the hold shadow dropper (only available when screen correct and shadow are enabled) to scrub on the shadows that you’d like to preserve. These shadows may best be seen in the foreground image." /><Url Source="../content/comp_environment/keying_with_ultimatte/adjusting_color_controls.html" Title="Adjusting Color Controls" Abstract="Adjusting Color Controls Check the color conformance box on the Ultimatte tab, and set these controls on the Color tab. A good keying result requires matched blacks, whites, and gammas between the foreground and background elements. With color conformance you can select blacks, whites, and gammas and can automatically match the foreground to the background (or vice versa)." /><Url Source="../content/comp_environment/keying_with_ultimatte/adjusting_film_controls.html" Title="Adjusting Film Controls" Abstract="Adjusting Film Controls Use the controls on the Film tab to reduce the effects of cyan undercutting. These controls are only available when Film box is checked on Ultimatte tab. You can view the results better when you select subject in the overlay dropdown menu on the Ultimatte tab." /><Url Source="../content/comp_environment/keying_with_ultimatte/choosing_output_mode.html" Title="Choosing an Output Mode" Abstract="Choosing an Output Mode You can output the merged foreground and background as a final composite, or you can output the premultiplied or unpremultiplied foreground for compositing elsewhere in your node tree. In the output mode dropdown menu,  select:" /><Url Source="../content/comp_environment/rotopaint/using_rotopaint.html" Title="Using RotoPaint" Abstract="Using RotoPaint Nuke features a vector-based RotoPaint node for help with tasks like rotoscoping, rig removal, garbage matting, and dustbusting. You can draw Bezier and B-Spline shapes with individual and layer group attributes, including per-point and global feather, motion blur, blending modes and individual or hierarchical 2D transformations. This chapter gives full instructions on its usage." /><Url Source="../content/comp_environment/rotopaint/roto_or_rotopaint.html" Title="Roto or RotoPaint?" Abstract="Roto or RotoPaint? There are two similar nodes in Nuke for rotoscoping, Roto and RotoPaint. The main difference between these two is that you can only create and edit Bezier and B-spline shapes with Roto, while RotoPaint allows you to draw paint strokes too with various brushes. So the Roto node is an optimal choice if you’re doing rotoscoping only, whereas RotoPaint gives you a broader scale of tools to use." /><Url Source="../content/comp_environment/rotopaint/rotopaint_quick_start.html" Title="RotoPaint Quick Start" Abstract="RotoPaint Quick Start Here's a quick overview of the workflow: Connect the RotoPaint node to a Viewer and possible backgrounds. For more information, see Connecting the RotoPaint Node on page 1." /><Url Source="../content/comp_environment/rotopaint/connecting_rotopaint.html" Title="Connecting the RotoPaint Node" Abstract="Connecting the RotoPaint Node The RotoPaint node accepts one primary input. Even if you have no inputs, you can still use RotoPaint and in that case, you can use the format control to select your output format (by default, the format control is hidden, but you can display it by clicking on the black triangle above color)." /><Url Source="../content/comp_environment/rotopaint/working_toolbars.html" Title="Working with the Toolbars" Abstract="Working with the Toolbars In the RotoPaint node, you can use two toolbars to define the type of stroke/shape you want to start drawing. These toolbars are placed in the Viewer. The vertical RotoPaint toolbar is for selecting the tool you want to use and the horizontal one, RotoPaint tool settings, is for adjusting the currently selected tool’s settings before drawing new strokes/shapes." /><Url Source="../content/comp_environment/rotopaint/working_stroke_shape_list.html" Title="Working with the Stroke/Shape List" Abstract="Working with the Stroke/Shape List After you’ve drawn strokes/shapes, you can edit their order and group them with the Stroke/Shape list in the RotoPaint properties panel. By default, the newest stroke/shape/group appears on top of the list, and your strokes/shapes are named according to their type (for example, &quot;Bezier1&quot; or &quot;Smear2&quot;)." /><Url Source="../content/comp_environment/rotopaint/drawing_paint_strokes.html" Title="Drawing Paint Strokes" Abstract="Drawing Paint Strokes Any given RotoPaint node can hold many paint strokes and shapes. You can apply paint strokes using any of the following tools (see also Drawing Shapes on page 1)." /><Url Source="../content/comp_environment/rotopaint/using_brush_tool.html" Title="Using the Brush tool" Abstract="Using the Brush tool The Brush tool lets you apply colored or blended strokes to the current plate. To Use the Brush Tool" /><Url Source="../content/comp_environment/rotopaint/using_eraser_tool.html" Title="Using the Eraser Tool" Abstract="Using the Eraser Tool The Eraser tool lets you remove pixels from existing paint strokes. To Use the Eraser Tool" /><Url Source="../content/comp_environment/rotopaint/using_clone_tool.html" Title="Using the Clone Tool" Abstract="Using the Clone Tool The Clone tool lets you remove unwanted features from the plate or from a different input by painting over them with pixels offset from the pointer or a transformation of the pointer." /><Url Source="../content/comp_environment/rotopaint/using_reveal_tool.html" Title="Using the Reveal Tool" Abstract="Using the Reveal Tool The Reveal tool lets you pull pixels from background elements onto the current plate. The Reveal tool requires at least two inputs (see Connecting the RotoPaint Node); otherwise, your strokes draw in white. You can also view which input you are using as the source for your strokes in the Source column in the stroke/shape list." /><Url Source="../content/comp_environment/rotopaint/using_blur_tool.html" Title="Using the Blur Tool" Abstract="Using the Blur Tool The Blur tool lets you blur parts of the plate. To Use the Blur Tool Click the Blur tool  in the RotoPaint toolbar." /><Url Source="../content/comp_environment/rotopaint/using_sharpen_tool.html" Title="Using the Sharpen Tool" Abstract="Using the Sharpen Tool With the Sharpen tool, you can sharpen the image within the area of the brush stroke." /><Url Source="../content/comp_environment/rotopaint/using_smear_tool.html" Title="Using the Smear Tool" Abstract="Using the Smear Tool With the Smear tool, you can smear or stretch pixels over the surrounding pixels." /><Url Source="../content/comp_environment/rotopaint/using_dodge_tool.html" Title="Using the Dodge Tool" Abstract="Using the Dodge Tool With the Dodge tool, you can lighten the pixels in the area of the brush stroke. This makes the background color brighter on the area of the brush stroke to reflect the brush stroke." /><Url Source="../content/comp_environment/rotopaint/using_burn_tool.html" Title="Using the Burn Tool" Abstract="Using the Burn Tool With the Burn tool, you can darken the pixels in the area of the brush stroke. This makes the background color darker on the area of the brush stroke." /><Url Source="../content/comp_environment/rotopaint/drawing_shapes.html" Title="Drawing Shapes" Abstract="Drawing Shapes Any given RotoPaint node can hold several shapes, and you can draw them using any of the following tools." /><Url Source="../content/comp_environment/rotopaint/using_bezier_tools.html" Title="Using the Bezier and Cusped Bezier Tools" Abstract="Using the Bezier and Cusped Bezier Tools The Bezier and Cusped Bezier tools let you draw Bezier shapes. Cusped Beziers are Bezier shapes with sharp corners and no tangents." /><Url Source="../content/comp_environment/rotopaint/using_b_spline_tool.html" Title="Using the B-Spline Tool" Abstract="Using the B-Spline Tool The B-spline tool lets you draw B-spline shapes. To Use the B-Spline Tool Right-click the Bezier tool in the RotoPaint toolbar and select B-Spline tool ." /><Url Source="../content/comp_environment/rotopaint/using_ellipse_rectangle_tools.html" Title="Using the Ellipse, Rectangle, and Cusped Rectangle Tools" Abstract="Using the Ellipse, Rectangle, and Cusped Rectangle Tools The Ellipse, Rectangle, and Cusped Rectangle tools let you draw an ellipse- or rectangle-shaped Bezier shape. Rectangles and cusped rectangles look exactly the same initially, but if you move one or more of the control points, you can see that cusped rectangles always have sharp corners and no tangents." /><Url Source="../content/comp_environment/rotopaint/using_open_spline_tool.html" Title="Using the Open Spline Tool" Abstract="Using the Open Spline Tool The Open Spline tool lets you draw curves in a similar way to other shapes, except that they don't need form a closed shape." /><Url Source="../content/comp_environment/rotopaint/default_tools_settings.html" Title="Setting Default RotoPaint Tools and Settings" Abstract="Setting Default RotoPaint Tools and Settings You can choose to have your RotoPaint always open with a particular tool selected, or open a particular tool with the settings you want." /><Url Source="../content/comp_environment/rotopaint/selecting_output_format.html" Title="Selecting the Output Format and Channels " Abstract="Selecting the Output Format and Channels In the RotoPaint properties panel, you can select one output channel or many to indicate the channels where the results of your changes should be stored." /><Url Source="../content/comp_environment/rotopaint/selecting_strokes_shapes.html" Title="Selecting Existing Strokes/Shapes for Editing" Abstract="Selecting Existing Strokes/Shapes for Editing If you’ve already drawn a stroke/shape but wish to make changes to it, you can select it or certain parts of it with the RotoPaint selection tools. You can also toggle between all of them in the RotoPaint toolbar using the shortcut Q." /><Url Source="../content/comp_environment/rotopaint/editing_existing_attributes.html" Title="Editing Existing Stroke/Shape Attributes" Abstract="Editing Existing Stroke/Shape Attributes After selecting a stroke/shape using the stroke/shape list or one of the Select tools, you can edit and animate its attributes in the properties panel. For more information on selecting strokes/shapes, see Selecting Existing Strokes/Shapes for Editing and Working with the Stroke/Shape List." /><Url Source="../content/comp_environment/rotopaint/editing_common_attrs.html" Title="Editing Attributes Common to Strokes and Shapes" Abstract="Editing Attributes Common to Strokes and Shapes Many controls in the RotoPaint properties panel apply to both strokes and shapes. These controls are grouped under the RotoPaint tab." /><Url Source="../content/comp_environment/rotopaint/transforming_strokes_shapes.html" Title="Transforming Strokes/Shapes/Groups" Abstract="Transforming Strokes/Shapes/Groups To apply spatial transformations to your strokes, shapes, or groups, you can use the controls under the Transform tab. Select a stroke/shape/group from the stroke/shape list and adjust:" /><Url Source="../content/comp_environment/rotopaint/adjusting_mask_controls.html" Title="Adjusting Mask Controls" Abstract="Adjusting Mask Controls By default, mask is set to none, but if you want to use a mask, do the following:" /><Url Source="../content/comp_environment/rotopaint/editing_shape_attrs.html" Title="Editing Shape-Specific Attributes" Abstract="Editing Shape-Specific Attributes The RotoPaint properties panel includes a set of controls that you mainly need when you're editing the attributes of a shape. You can find these on the Shape tab in the properties panel." /><Url Source="../content/comp_environment/rotopaint/editing_stroke_attrs.html" Title="Editing Stroke-Specific Attributes" Abstract="Editing Stroke-Specific Attributes The RotoPaint properties panel includes a set of controls that you mainly need when you're editing the attributes of a paint stroke. You can find most of these under the Stroke tab in the properties panel." /><Url Source="../content/comp_environment/rotopaint/editing_clone_reveal_attrs.html" Title="Editing Clone or Reveal Attributes" Abstract="Editing Clone or Reveal Attributes When you are using the Clone or Reveal tool, you can adjust the controls under the Clone tab to transform the input that's being cloned or revealed. Adjust:" /><Url Source="../content/comp_environment/rotopaint/editing_existing_timing.html" Title="Editing Existing Stroke/Shape Timing" Abstract="Editing Existing Stroke/Shape Timing When editing an existing stroke/shape, you can edit the range of frames during which a stroke/shape is visible in the properties Lifetime tab. The lifetime of a stroke/shape/group is also visible in the Life column in the stroke/shape list. By default, a shape is visible on all frames, whereas a stroke is only visible on a single frame, the frame it was painted on." /><Url Source="../content/comp_environment/rotopaint/editing_existing_stacks.html" Title="Editing Existing Stroke/Shape Stack Order" Abstract="Editing Existing Stroke/Shape Stack Order When editing strokes/shapes after you’ve drawn them, you can edit their foreground to background drawing order." /><Url Source="../content/comp_environment/rotopaint/editing_existing_splines.html" Title="Editing Existing Stroke/Shape Splines" Abstract="Editing Existing Stroke/Shape Splines To edit a stroke/shape’s position, you first need to select the stroke/shape in the Viewer or the stroke/shape list. You can then modify the points that make up the stroke/shape’s position." /><Url Source="../content/comp_environment/rotopaint/copy_paste_stroke_attrs.html" Title="Copying, Cutting, and Pasting Stroke Attributes" Abstract="Copying, Cutting, and Pasting Stroke Attributes Copying, cutting, and pasting stroke/shape attributes is achieved in a similar way to affecting position:" /><Url Source="../content/comp_environment/rotopaint/cusp_smooth_expression.html" Title="Point Cusping, Smoothing, Expressions, and Links" Abstract="Point Cusping, Smoothing, Expressions, and Links Roto and RotoPaint allow you manipulate curves, by cusping or smoothing the points on the curve, add expressions, and link controls to points." /><Url Source="../content/comp_environment/rotopaint/animating_strokes_shapes.html" Title="Animating Strokes/Shapes" Abstract="Animating Strokes/Shapes All strokes/shapes that appear on more than one frame can be animated. By default, the autokey  option in the RotoPaint tool settings is on, which means your changes to a stroke/shape automatically creates keyframes and animates your stroke/shape. You can also access all the curves and shapes in the Curve Editor and Dope Sheet." /><Url Source="../content/comp_environment/rotopaint/viewing_spline_keyframes.html" Title="Viewing Spline Keyframes" Abstract="Viewing Spline Keyframes You can use the spline key controls on the RotoPaint tab to view whether there are keyframes set for the spline of your stroke/shape. Do the following:" /><Url Source="../content/comp_environment/rotopaint/deleting_rippling_keys.html" Title="Deleting or Rippling Keyframes" Abstract="Deleting or Rippling Keyframes You can delete keyframes individually or by stroke/shape, or use the ripple function to change a keyframe and apply that same relative adjustment to the point across a range of frames." /><Url Source="../content/comp_environment/rotopaint/copy_cut_paste_keys.html" Title="Copying, Cutting, and Pasting Animations" Abstract="Copying, Cutting, and Pasting Animations Copying, cutting, and pasting can save you time, but can be destructive. For example, pasting over shapes destroys all points and keyframes of the target shape in order to replace it." /><Url Source="../content/comp_environment/rotopaint/adding_motionblur.html" Title="Adding Motion Blur" Abstract="Adding Motion Blur After animating your shapes, you can apply motion blur to individual shapes in the shape list or to the all shapes in the current node using the controls in the properties Motion Blur tab." /><Url Source="../content/comp_environment/rotopaint/viewing_points_curve_editor.html" Title="Viewing Points in the Curve Editor and the Dope Sheet" Abstract="Viewing Points in the Curve Editor and the Dope Sheet You can edit your stroke/shape points, their feather points and tangents in the Curve Editor and Dope Sheet. To read more about using the Curve Editor and Dope Sheet, see Animating Parameters." /><Url Source="../content/comp_environment/rotopaint/copy_cut_paste_stroke.html" Title="Copying, Pasting, and Cutting Stroke Positions" Abstract="Copying, Pasting, and Cutting Stroke Positions After creating a stroke/shape, you can copy, paste, and cut its position to use the same shape in other strokes/shapes. Copying, cutting, or pasting values applies to only one keyframe." /><Url Source="../content/comp_environment/rotopaint/copy_cut_paste_point.html" Title="Copying, Pasting, and Cutting Point Positions" Abstract="Copying, Pasting, and Cutting Point Positions You can copy point position values in a stroke/shape you have selected. This enables you to use the same values for another point in a stroke/shape. Unlike cutting point values, described below, copying position values does not delete any keys set." /><Url Source="../content/comp_environment/rotopaint/pasting_point_positions.html" Title="Pasting Point Positions" Abstract="Pasting Point Positions You can paste any position you’ve copied/cut from another point to a selected point in a stroke/shape. If you have autokey turned on, this also sets a keyframe at the current frame to animate this point. The attributes of the strokes or any keys set to animate the attributes are not affected." /><Url Source="../content/comp_environment/rotopaint/cutting_point_positions.html" Title="Cutting Point Positions" Abstract="Cutting Point Positions You can cut the position values of a point in a stroke/shape. Cut also copies the positions at the current frame to the clipboard. The point attributes or any keys set to animate the attributes are not affected." /><Url Source="../content/comp_environment/rotopaint/rotopaint_and_stereo.html" Title="RotoPaint and Stereoscopic Projects" Abstract="RotoPaint and Stereoscopic Projects If you need to use RotoPaint in a multi-view or stereoscopic project, you may want to draw your strokes/shapes or apply your edits to one view only (for example, the left view but not the right), or create a stroke/shape in one view and have it automatically generated for the other in the correct position." /><Url Source="../content/comp_environment/rotopaint/selecting_draw_view.html" Title="Selecting the View to Draw on" Abstract="Selecting the View to Draw on When you are using the RotoPaint node to draw a new stroke/shape in a stereoscopic or multi-view project, you can toggle the single view checkbox in the RotoPaint tool settings to draw your stroke/shape on one view only or multiple views. For existing strokes/shapes/groups, you can use the view control to select the view the stroke/shape is visible. If you’re working on a stereoscopic project, the view you’re using for a particular stroke, shape, or group is also visible on the View column in the stroke/shape list." /><Url Source="../content/comp_environment/rotopaint/selecting_clone_view.html" Title="Selecting the View to Clone from" Abstract="Selecting the View to Clone from When cloning, you can select the view to use as the clone source. Go to the Clone tab and set the view dropdown menu to the view you want to clone from. To use the view currently displayed in the Viewer, select current." /><Url Source="../content/comp_environment/rotopaint/reproducing_shapes.html" Title="Reproducing Strokes/Shapes in Other Views" Abstract="Reproducing Strokes/Shapes in Other Views To create a stroke/shape on one view and have it automatically generated for the other:" /><Url Source="../content/comp_environment/rotopaint/editing_strokes_shapes.html" Title="Editing Strokes/Shapes in One View Only" Abstract="Editing Strokes/Shapes in One View Only Splitting a view off allows you to edit the stroke/shape data in that view only, without affecting any other views that exist in your project settings." /><Url Source="../content/comp_environment/rotopaint/applying_stereo_offset.html" Title="Applying a Stereo Offset" Abstract="Applying a Stereo Offset The stereo offset control in the RotoPaint properties allows you to move the selected stroke/shape on the x and y axes. This is an extra transform that is applied after all other transforms. Typically, you would position the stroke/shape correctly in the hero view, then split stereo offset, and drag the stroke/shape to its correct location in any other views. Note that you can also press Shift while dragging to constrain the movement to the x or y axis only." /><Url Source="../content/comp_environment/rotopaint/bezier_paint_nodes.html" Title="Where Are the Bezier and Paint Nodes?" Abstract="Where Are the Bezier and Paint Nodes? The pre-6.0 Bezier and Paint nodes have been deprecated in favor of the RotoPaint node. With RotoPaint you have the ability to add more strokes and shapes, group them, and so on. However, Bezier and Paint are still in the application for backwards-compatibility with old scripts. Should you find the need (or just feel nostalgic), you can create the Paint and Bezier nodes in a couple of easy ways:" /><Url Source="../content/comp_environment/tracking_stabilizing/tracking_stabilizing.html" Title="Tracking and Stabilizing " Abstract="Tracking and Stabilizing Nuke’s 2D Tracker allows you to extract animation data from the position, rotation, and size of a pattern. You can then apply the data directly to transform or match-move another element. Or you can invert the data values and apply them to the original element to stabilize the image." /><Url Source="../content/comp_environment/tracking_stabilizing/connect_tracker_node.html" Title="Connecting the Tracker Node" Abstract="Connecting the Tracker Node To connect the Tracker node: Read in and select the clip you want to track." /><Url Source="../content/comp_environment/tracking_stabilizing/adding_track_anchors.html" Title="Adding Track Anchors" Abstract="Adding Track Anchors You can add as many track anchors as required, depending on which transformational components you wish to track. For example, when tracking in areas of distortion or noise, it's a good idea to add a lot of tracking anchors and then average the results to get a better overall track." /><Url Source="../content/comp_environment/tracking_stabilizing/positioning_track_anchor.html" Title="Positioning Track Anchors" Abstract="Positioning Track Anchors Each track anchor consists of a pattern and search area: Pattern - the target pixels tracked across multiple frames. This pattern should be as distinct as possible from the surrounding frame and remain visible throughout the majority of the sequence." /><Url Source="../content/comp_environment/tracking_stabilizing/tracking_preferences.html" Title="Tracking Preferences and Viewer Tools" Abstract="Tracking Preferences and Viewer Tools Before tracking, use the Tracker’s properties panel and Viewer tools to control Viewer output and determine tracking behavior." /><Url Source="../content/comp_environment/tracking_stabilizing/automatic_vs_keyframe.html" Title="Automatic vs. Keyframe Tracking" Abstract="Automatic vs. Keyframe Tracking After placing track anchors and setting your preferences, you’re ready to calculate your tracks. Nuke’s Tracker provides two calculation methods:" /><Url Source="../content/comp_environment/tracking_stabilizing/automatic_tracking.html" Title="Automatic Tracking" Abstract="Automatic Tracking Calculating tracks automatically uses the tools above the Viewer to control the direction and range of frames to track. Tracking backwards can produce a better track than going forwards if the pattern is clearly visible later in the clip. By default, Auto-Tracking grabs the reference pattern on the first frame of the sequence, from within the pattern anchor, using this pattern throughout the track for comparison between frames." /><Url Source="../content/comp_environment/tracking_stabilizing/calculating_auto_tracks.html" Title="Calculating Auto-Tracks" Abstract="Calculating Auto-Tracks To calculate auto-tracks: In the Tracker properties panel, select each track you wish to calculate or click select all to use all tracks." /><Url Source="../content/comp_environment/tracking_stabilizing/troubleshooting_auto.html" Title="Troubleshooting Auto-Tracks" Abstract="Troubleshooting Auto-Tracks No matter how sophisticated tracking becomes, some sequences are inevitably going to cause problems. There are a number of pre-tracking checks you can perform to assist Auto-Tracking:" /><Url Source="../content/comp_environment/tracking_stabilizing/keyframe_tracking.html" Title="Keyframe Tracking" Abstract="Keyframe Tracking Calculating tracks using keyframes can be the better option for more complex patterns and movement. It requires a little more work to set up, but can produce more reliable tracks." /><Url Source="../content/comp_environment/tracking_stabilizing/calculating_key_tracks.html" Title="Calculating Keyframe Tracks" Abstract="Calculating Keyframe Tracks To calculate keyframe tracks: In the Tracker properties panel, select each track you wish to calculate in the Tracks list or click select all." /><Url Source="../content/comp_environment/tracking_stabilizing/troubleshooting_keyframe.html" Title="Troubleshooting Keyframe Tracks" Abstract="Troubleshooting Keyframe Tracks Again, even with preset keyframes, some sequences are inevitably going to cause problems. There are a number of pre-tracking checks you can perform to assist Auto-Tracking:" /><Url Source="../content/comp_environment/tracking_stabilizing/applying_tracking_data.html" Title="Applying Tracking Data" Abstract="Applying Tracking Data You can apply your tracking data to the input image using either the Tracker node’s controls, linking expressions, or other Nuke nodes." /><Url Source="../content/comp_environment/tracking_stabilizing/applying_data_controls.html" Title="Applying Tracking Data Using Tracker’s Controls" Abstract="Applying Tracking Data Using Tracker’s Controls The simplest way to apply tracking data to the input image or other nodes is to use the controls of the Tracker node itself. Here, we look at using these controls to stabilize, match-move, and remove or apply jitter." /><Url Source="../content/comp_environment/tracking_stabilizing/applying_data_expressions.html" Title="Applying Tracking Data Using Linking Expressions" Abstract="Applying Tracking Data Using Linking Expressions Nuke’s CornerPin2D and Stabilize2D nodes are specifically designed to receive tracking data by linking expressions, but you can apply tracking data in this manner to virtually any Nuke node. For example, you might animate a Bezier or a B-spline shape with tracking data by entering linking expressions into the RotoPaint node’s transformation parameters. You can also apply tracking data to individual points." /><Url Source="../content/comp_environment/tracking_stabilizing/transforming_masks.html" Title="Transforming Masks with Tracking Data" Abstract="Transforming Masks with Tracking Data Creating animated masks using Roto and keyframes can be a very time-consuming process, but Nuke's Tracker node can do some of the initial work for you, especially with garbage mattes." /><Url Source="../content/comp_environment/tracking_stabilizing/using_cornerpin2d.html" Title="Using the CornerPin2D Node" Abstract="Using the CornerPin2D Node The CornerPin2D node is designed to map the four corners of an image sequence to positions derived from tracking data. In practice, this node lets you replace any four-cornered feature with another image sequence. For example, suppose you needed to replace the monitor image in the fast-panning shot shown below." /><Url Source="../content/comp_environment/transforming_elements/transforming_elements.html" Title="Transforming Elements" Abstract="Transforming Elements This chapter explains how to perform a range of 2D and 2.5D spatial transformations. You learn how to apply geometric transformations (including translations, rotations, scales, and skews) to elements, and how to add motion blur using the nodes in the Transform menu." /><Url Source="../content/comp_environment/transforming_elements/transforming_2d.html" Title="Transforming in 2D " Abstract="Transforming in 2D This section describes how to apply 2D transformations including translations, rotations, scales, and skews to elements using a number of Nuke nodes." /><Url Source="../content/comp_environment/transforming_elements/filtering_algorithm_2d.html" Title="Choosing a Filtering Algorithm" Abstract="Choosing a Filtering Algorithm Spatial transformations involve remapping pixels from their original positions to new positions. The question arises as to what values to assign remapped pixels. In the simplest case, they retain their original values, but this can create problems with image quality, particularly in high contrast areas of the frame. For example, the figure below shows a close up of a high-contrast feature that has been rotated clockwise by 45 degrees. The remapped pixels have retained their original values, but the result is a highly aliased, or jagged, edge:" /><Url Source="../content/comp_environment/transforming_elements/node_concatenation.html" Title="How Your Nodes Concatenate" Abstract="How Your Nodes Concatenate Concatenation is behavior that some Nuke nodes perform when you have several nodes transforming your image one after another. When nodes concatenate, they pass on these adjacent transformation operations to the last transforming node in the row, and the last node then performs all the transformations at once." /><Url Source="../content/comp_environment/transforming_elements/translate_trans_node.html" Title="Translating Elements" Abstract="Translating Elements To translate an element is to slide it on x or y. You can use the Transform, TransformMasked, or Position nodes to translate elements." /><Url Source="../content/comp_environment/transforming_elements/rotating_elements_2d.html" Title="Rotating Elements" Abstract="Rotating Elements To rotate an element is to spin it around the pivot point. To rotate an element using the Transform node" /><Url Source="../content/comp_environment/transforming_elements/scaling_elements_2d.html" Title="Scaling Elements" Abstract="Scaling Elements To scale an element is to resize it by adding (upsampling) or removing (downsampling) pixels." /><Url Source="../content/comp_environment/transforming_elements/skewing_elements_2d.html" Title="Skewing Elements" Abstract="Skewing Elements To skew an element is to rotate its pixel columns around the pivot point. To skew an element using the Transform node" /><Url Source="../content/comp_environment/transforming_elements/core_transforms_3d.html" Title="Applying Core Transformations in 2.5D" Abstract="Applying Core Transformations in 2.5D Nuke’s Card3D node lets you apply the same geometric transformations possible with the Transform node, but gives you an additional axis of operation, z." /><Url Source="../content/comp_environment/transforming_elements/adding_card3d_node.html" Title="Adding a Card3D Node" Abstract="Adding a Card3D Node To add a Card3D node: Click Transform &gt; Card3D to insert a Card3D node at the appropriate place in your script." /><Url Source="../content/comp_environment/transforming_elements/specifying_ops_order.html" Title="Specifying the Order of Operations" Abstract="Specifying the Order of Operations The order by which Nuke executes operations can affect the outcome. The Card3D node lets you select the order by which Nuke executes scales, rotations, and translations, as well as the order by which it executes rotation on individual axes." /><Url Source="../content/comp_environment/transforming_elements/filtering_algorithm_3d.html" Title="Choosing a Filtering Algorithm" Abstract="Choosing a Filtering Algorithm Filtering algorithms let you specify the degree of smoothing and sharpening that remapped pixels receive during transformation. The Card3D node offers the same filter algorithms as the Transform node. See Choosing a Filtering Algorithm on page 1 for more information." /><Url Source="../content/comp_environment/transforming_elements/using_3d_trans_handles.html" Title="Using the 3D Transformation Handles" Abstract="Using the 3D Transformation Handles You’ll note when viewing the output of a Card3D node that it displays an overlay for executing spatial transformations. This overlay is often a faster alternative to the properties panel. The figure below shows you how to use it." /><Url Source="../content/comp_environment/transforming_elements/translate_card3d.html" Title="Translating Elements" Abstract="Translating Elements When using the Card3D node, you can translate elements on z in addition to the other axes." /><Url Source="../content/comp_environment/transforming_elements/rotating_elements_3d.html" Title="Rotating Elements" Abstract="Rotating Elements When using the Card3D node, you can rotate elements around the x and y axes, in addition to the z. This is useful for cheating the perspective." /><Url Source="../content/comp_environment/transforming_elements/scaling_elements_3d.html" Title="Scaling Elements" Abstract="Scaling Elements To scale an element using the Card3D node: Position the pivot point as necessary by incrementing or decrementing the pivot x, y, and z fields to move the axis in any direction." /><Url Source="../content/comp_environment/transforming_elements/skewing_elements_3d.html" Title="Skewing Elements" Abstract="Skewing Elements Whereas the Transform node lets you rotate pixel columns only around the z axis, Card3D permits you to so around all three axes." /><Url Source="../content/comp_environment/transforming_elements/adding_motion_blur.html" Title="Adding Motion Blur" Abstract="Adding Motion Blur The following nodes under the Transform menu have their own controls for adding motion blur to transformations:" /><Url Source="../content/comp_environment/transforming_elements/replicating_input_images.html" Title="Replicating the Input Image Across the Output" Abstract="Replicating the Input Image Across the Output The Tile node produces an output image that contains scaled-down, tiled copies of the input image. The output image is the same format as the input." /><Url Source="../content/comp_environment/warping/warping_morphing.html" Title="Warping Images" Abstract="Warping Images Nuke’s GridWarp and SplineWarp nodes allow you to distort elements in an image and morph one image into another. There are other types of warp available in Nuke, but in this chapter, we focus on the GridWarp and SplineWarp nodes." /><Url Source="../content/comp_environment/warping/warping.html" Title="Warping" Abstract="Warping Warping refers to manipulating an image so that elements in the image are distorted. Unlike many of the transformations described under Transforming Elements, warps are transformations that only affect some of the pixels in an image rather than all of them. For example, you might make an animal’s eyes bigger or a person’s smile wider without affecting the rest of their features." /><Url Source="../content/comp_environment/warping/warping_using_gridwarp.html" Title="Warping Images Using the GridWarp Node" Abstract="Warping Images Using the GridWarp Node The GridWarp node allows you to warp images by transferring image information from one Bezier grid onto another. When using this node, you first position the source grid, which defines where to warp from. Next, you position the destination grid, which defines where to warp the image to. This grid can be a duplicate of the source grid, or you can define it separately. When you manipulate the destination grid, the corresponding warp is applied to the source image." /><Url Source="../content/comp_environment/warping/warping_using_splinewarp.html" Title="Warping an Image Using the SplineWarp Node" Abstract="Warping an Image Using the SplineWarp Node The SplineWarp node deforms an image based on multiple Bezier or B-spline curves that you create. Source curves define where to warp from, while destination curves define where to warp the source image to. Unlike the GridWarp node, you can draw these curves anywhere on the image, rather than only adding points on the existing grid lines, then join them to create the source and destination. The controls for adding and modifying points are similar to the RotoPaint node controls." /><Url Source="../content/comp_environment/warping/morphing.html" Title="Morphing" Abstract="Morphing Morphing refers to dissolving two images together so that the subject of one image seems to change shape and turn into the subject of the other through a seamless transition. A morph can be easily noticeable or very subtle. An example of a noticeable morph would be a man turning into a woman or one animal turning into another, whereas a transition from an actor to his stunt man would result in a much more subtle morph." /><Url Source="../content/comp_environment/warping/morphing_using_gridwarp_.html" Title="Morphing One Image into Another Using the GridWarp Node" Abstract="Morphing One Image into Another Using the GridWarp Node To morph one image into another using the GridWarp node:" /><Url Source="../content/comp_environment/warping/morphing_using_splinewarp.html" Title="Morphing One Image into Another Using the SplineWarp Node" Abstract="Morphing One Image into Another Using the SplineWarp Node To morph one image into another using the SplineWarp node:" /><Url Source="../content/comp_environment/warping/transforming_animating_warps.html" Title="Transforming and Animating Warps and Morphs" Abstract="Transforming and Animating Warps and Morphs Unless you are warping or morphing a still image, you’ll probably need to transform or animate warp operations. The Tracker and PlanarTracker nodes can help automate transformations, and you can use Expressions and the GridWarp and SplineWarp Properties panel controls as well. See Transforming Warps and Animating Warps." /><Url Source="../content/comp_environment/warping/transforming_warps.html" Title="Transforming Warps" Abstract="Transforming Warps You can transform grids and splines in the same way as any other element in Nuke (see Temporal Operations), but you can also link control points to the Tracker and PlanarTracker nodes to automate any transforms you require. Once you have a suitable track, you can use the animation data to control points on grids and curves." /><Url Source="../content/comp_environment/warping/animating_warps.html" Title="Animating Warps" Abstract="Animating Warps In the GridWarp and SplineWarp node’s properties panels, there are controls for animating both the source and the destination grids or shapes. Here, we first look at the GridWarp node and then the SplineWarp node. The instructions assume you know how to warp a still image using these nodes (if not, refer to Warping Images Using the GridWarp Node on page 1 and Warping an Image Using the SplineWarp Node on page 1)." /><Url Source="../content/comp_environment/temporal_operations/temporal_operations.html" Title="Temporal Operations" Abstract="Temporal Operations This chapter explains the temporal or time-based operations in Nuke. Learn how to distort time (that is, slow down, speed up, or reverse clips), apply motion blur, and perform editorial operations like slips, cuts, splices, and freeze frames." /><Url Source="../content/comp_environment/temporal_operations/distorting_time_.html" Title="Distorting Time " Abstract="Distorting Time Time distortion changes the length of time required to playback a clip in your composite. These operations generally fall under one of two categories: retiming and warping." /><Url Source="../content/comp_environment/temporal_operations/simple_retiming.html" Title="Simple Retiming" Abstract="Simple Retiming Nuke’s Retime node lets you change the playback time for all the frames in a clip or for range of frames within the clip. You can also use it to reverse the clip playback. It does this by dropping or duplicating frames. For higher quality retiming see OFlow Retiming." /><Url Source="../content/comp_environment/temporal_operations/interpolation.html" Title="Interpolation" Abstract="Interpolation Time distortions that slow down a clip require the creation of additional, or interpolated, frames. For example, suppose you want to slow down the collision, shown in the clip below, by a factor of two. This requires the creation of one interpolated frame for every existing frame in the clip." /><Url Source="../content/comp_environment/temporal_operations/oflow_retiming.html" Title="OFlow Retiming" Abstract="OFlow Retiming The OFlow node generates high-quality retiming operations analyzing the movement of all pixels in the frames and then rendering new “in-between” images based on that analysis. This node can also add motion blur or enhance the existing motion blur in the image." /><Url Source="../content/comp_environment/temporal_operations/warping_clips.html" Title="Warping Clips" Abstract="Warping Clips Warping refers to slowing down, speeding up, or even reversing select frames in a clip without necessarily altering its overall length. Otherwise stated, warps add, subtract, or reverse the temporal detail in a range of frames within a clip. For example, the figure below depicts a snowmobile clip (down-sampled to just ten frames for easy representation) that we might want to warp." /><Url Source="../content/comp_environment/temporal_operations/global_frame_range_speed.html" Title="Global Frame Range and Speed " Abstract="Global Frame Range and Speed Nuke automatically adjusts the timeline of every Viewer window you open to show the &quot;in&quot; and &quot;out&quot; frames for the clip you’re viewing." /><Url Source="../content/comp_environment/temporal_operations/applying_timeblur_filter.html" Title="Applying the TimeBlur Filter" Abstract="Applying the TimeBlur Filter When a fast-moving subject is recorded on film or video, its edges appear to smear as a result of the object's movement while the shutter is open. The longer the shutter remains open at each frame interval, the more obvious this effect. TimeBlur simulates this phenomenon by sampling its input at &quot;divisions&quot; times over &quot;shutter&quot; frames starting at the current frame plus &quot;offset&quot;." /><Url Source="../content/comp_environment/temporal_operations/editing_clips.html" Title="Editing Clips" Abstract="Editing Clips As a node-based system, Nuke doesn’t have a timeline. Nevertheless, you can still perform editorial operations that you might associate with a timeline. You can slip clips (move them forward or backward in time), cut them, or splice them to other clips." /><Url Source="../content/comp_environment/temporal_operations/offsetting_slipping_clips.html" Title="Offsetting and Slipping Clips" Abstract="Offsetting and Slipping Clips Offsetting Clips Offsetting a clip refers to moving the clip backwards or forwards in time.  In Nuke, you can offset clips using the TimeOffset and TimeClip nodes." /><Url Source="../content/comp_environment/temporal_operations/cutting_clips.html" Title="Cutting Clips" Abstract="Cutting Clips The FrameRange node allows you to set a frame range for a clip. This    controls which frames a downstream AppendClip node uses from the input, which frames are displayed in the Viewer when the timeline range dropdown menu is set to Input, and which frames are sent to the flipbook." /><Url Source="../content/comp_environment/temporal_operations/splicing_clips.html" Title="Splicing Clips" Abstract="Splicing Clips Splicing refers to joining clips head-to-tail, thus allowing action to flow from one shot to the next. When you splice clips, you have options for:" /><Url Source="../content/comp_environment/temporal_operations/freeze_framing_clips.html" Title="Freeze Framing Clips" Abstract="Freeze Framing Clips Using the FrameHold node, you can set the output of a clip to a particular frame or frame interval, rather than the entire clip." /><Url Source="../content/comp_environment/color_correction/colour_correction.html" Title="Working with Color" Abstract="Working with Color This chapter explains how to use Nuke’s color correction nodes to adjust the appearance of the images in your composites." /><Url Source="../content/comp_environment/color_correction/using_scopes.html" Title="Using Scopes" Abstract="Using Scopes Nuke provides scopes to help you evaluate your footage.  Scopes are accessed from the contents menu, Windows sub-menu." /><Url Source="../content/comp_environment/color_correction/histogram.html" Title="Histogram" Abstract="Histogram The content menu Windows &gt;&#160;Histogram provides three color channel and luma channel information that describes the distribution of red, green, blue, and luma pixels throughout the current frame." /><Url Source="../content/comp_environment/color_correction/waveform.html" Title="Waveform" Abstract="Waveform The content menu Windows &gt; Waveform scope provides information on luminance, or brightness, which you can use to decide whether the footage is over or under exposed. The information represents luminance values from 0 - 100% (black through the spectrum to white). The higher the waveform, the brighter the image in the Viewer." /><Url Source="../content/comp_environment/color_correction/vectorscopes.html" Title="Vectorscopes" Abstract="Vectorscopes The content menu Windows &gt; Vectorscope display color, saturation, and hue information for the current frame. Similar to color wheels, vectorscopes display information radially, from the center outward. The farther from the center the data spans, the more saturation is represented." /><Url Source="../content/comp_environment/color_correction/using_pixelanalyzer.html" Title="Using the Pixel Analyzer" Abstract="Using the Pixel Analyzer Nuke’s Pixel Analyzer enables you to analyze single and multiple pixels, or the entire image, and compare color values between Viewers. The analyzer stores current, minimum and maximum, average, and median values which can then be copied by value to controls on other nodes. For example, you might use the minimum and maximum values from an analysis to set the black and white points on another image. The analyzer is accessed from the contents menu Windows sub-menu." /><Url Source="../content/comp_environment/color_correction/analyzing_pixel_selections.html" Title="Analyzing Pixel Selections" Abstract="Analyzing Pixel Selections The analyzer’s pixel selection mode allows you to select pixels in the Viewer, individually or as a group, and display the color information in  swatches. To make selections in the Viewer:" /><Url Source="../content/comp_environment/color_correction/analyzing_full_frames.html" Title="Analyzing Full Frames" Abstract="Analyzing Full Frames The analyzer’s full frame mode samples the visible region of the Viewer by default. As a result, actions that change the visible area, such as zooming in and out, alter the available color values." /><Url Source="../content/comp_environment/color_correction/applying_analysis_data.html" Title="Applying Analysis Data" Abstract="Applying Analysis Data You can use color information stored in the Pixel Analyzer swatches in any other control that includes a swatch. For example, min/max color swatches analyzed in another shot can be applied to the current shot by dragging the swatch to the Grade nodes’s blackpoint and whitepoint controls." /><Url Source="../content/comp_environment/color_correction/making_tonal_adjustments.html" Title="Making Tonal Adjustments" Abstract="Making Tonal Adjustments Defining tonal range (the black point, white point, and neutral value) is typically the first step in color correcting a clip. Tonal range adjustments often improve contrast, but more importantly, they set the stage for subsequent color corrections by properly dividing the colorspace into shadow, midtone, and highlight regions." /><Url Source="../content/comp_environment/color_correction/sampling_white_and_black.html" Title="Sampling White and Black Points" Abstract="Sampling White and Black Points The Grade node lets you define white and black points by sampling pixels from a Viewer frame." /><Url Source="../content/comp_environment/color_correction/making_basic_corrections.html" Title="Making Basic Corrections" Abstract="Making Basic Corrections Adjustments to contrast, gamma, gain, and offset often comprise the bulk of the work in color correction. Some artists prefer to makes these adjustments via sliders; others prefer curves (which represent the range of color values in an image.) Nuke’s ColorCorrect and ColorLookup nodes offer tools to suit either preference." /><Url Source="../content/comp_environment/color_correction/using_sliders.html" Title="Using ColorCorrect Sliders" Abstract="Using ColorCorrect Sliders The ColorCorrect node is particularly convenient for making quick adjustments to contrast, gamma, gain, and offset. A single window houses sliders for all these basic corrections and allows you to apply these to a clip’s master (entire tonal range), shadows, midtones, or highlights." /><Url Source="../content/comp_environment/color_correction/using_color_curves.html" Title="Using ColorLookup Curves" Abstract="Using ColorLookup Curves If you prefer to work with color curves, you can use the ColorLookup node to make contrast, gamma, gain, and offset adjustments (and, in fact, many others). Color curves refer to line graphs of a given color channel’s brightness. The horizontal axis represents the channel’s original, or input, values, and the vertical axis represents the channel’s new, or output values." /><Url Source="../content/comp_environment/color_correction/making_hsv_corrections.html" Title="Making Hue, Saturation, and Value Adjustments" Abstract="Making Hue, Saturation, and Value Adjustments For certain color correction tasks like spill suppression, you ideally want to influence only a very narrow range of color values. For such tasks, it’s often helpful to use effects that employ the Hue, Saturation, and Value (HSV) color model. As its name indicates, the HSV color model breaks color into three components:" /><Url Source="../content/comp_environment/color_correction/correcting_hsv.html" Title="Correcting HSV" Abstract="Correcting HSV Nuke’s HSVTool node lets you simultaneously adjust hue, saturation, and value components from a single properties panel. It also features a color replacement tool. The main strength of this node is the precision it offers in limiting corrections to a narrow swath of colors." /><Url Source="../content/comp_environment/color_correction/correcting_hue.html" Title="Correcting Hue Only" Abstract="Correcting Hue Only Nuke’s HueCorrect node lets you make precision adjustments to the levels of saturation in a range of hues. You do so via edits to a series of suppression curves." /><Url Source="../content/comp_environment/color_correction/correcting_saturation.html" Title="Correcting Saturation Only" Abstract="Correcting Saturation Only For the times when you just want to correct the saturation component and don’t require limiting the correction to any particular channel, you can use Nuke’s Saturation node. Its controls are bare bones - basically, just a saturation slider." /><Url Source="../content/comp_environment/color_correction/masking_color_correction.html" Title="Masking Color Corrections" Abstract="Masking Color Corrections Virtually all the color-correction effects in Nuke include mask parameters that lets you limit the correction to the non-black pixel values of a matte image. For example, suppose you want to add a blue cast to the following scene without affecting the buildings." /><Url Source="../content/comp_environment/color_correction/applying_grain.html" Title="Applying Grain " Abstract="Applying Grain Grain matching - ensuring that all of the elements in a composite, including those which were digitally generated, look like they were shot on the same film stock - is often one of the final steps in achieving a convincing integration of all of a composite’s elements. Nuke offers effects for synthetically creating grain and for reading in practically-created grain (grain derived from actual film stock)." /><Url Source="../content/comp_environment/color_correction/using_synthetic_grain.html" Title="Using Synthetic Grain" Abstract="Using Synthetic Grain Nuke offers several nodes for creating synthetic grain: Dither, Grain, ScannedGrain, and if you have a NukeX license, F_ReGrain. Of these, Dither is the crudest - it basically lets you specify the amount of noise per channel." /><Url Source="../content/comp_environment/color_correction/using_practical_grain.html" Title="Using Practical Grain" Abstract="Using Practical Grain Although Nuke’s ScannedGrain node offers controls for creating synthetic grain (ones comparable to those just discussed), it’s main use is for reading in and applying scanned grain - that is, grain derived from actual film stock. If your facility has such sequences available, you can read them in and apply them using the ScannedGrain node. Creating  grain files is described below, as well as using the resulting grain files with the ScannedGrain node." /><Url Source="../content/comp_environment/color_correction/applying_math_ops.html" Title="Mathematical Operations" Abstract="Mathematical Operations Nuke’s Color icon in the Toolbar houses a number of nodes which are designed to apply common mathematical operations to channels. These operations include clamps, offsets, inversions, multiplications, and expressions." /><Url Source="../content/comp_environment/color_correction/clamping_channel_values.html" Title="Clamping Channel Values" Abstract="Clamping Channel Values To clamp a channel’s values is to ensure that its blackest blacks and whitest whites are visible on an intended display device. Nuke’s Clamp node lets you assign “legal” values to colors that are either too light or dark for the intended display device." /><Url Source="../content/comp_environment/color_correction/offsetting_channel_value.html" Title="Offsetting Channel Values" Abstract="Offsetting Channel Values To offset a channel’s values is to add a fixed value to them, which, in effect lightens the whole channel. You can also add a negative value to a channel, in which case the channel gets darker." /><Url Source="../content/comp_environment/color_correction/inverting_channel_values.html" Title="Inverting Channel Values" Abstract="Inverting Channel Values To invert a channel is to subtract its values from one, which causes its blacks to become white and its whites to become black. In the course of building a script, you’ll have frequent need to invert mattes in particular." /><Url Source="../content/comp_environment/color_correction/multiplying_channel_values.html" Title="Multiplying Channel Values" Abstract="Multiplying Channel Values To multiply a channel’s values is to times them by a given factor, which has the effect of lightening the channel while preserving the black point. (This operation is also knows as gain.)" /><Url Source="../content/comp_environment/color_correction/applying_expressions.html" Title="Applying Expressions to Channel Values" Abstract="Applying Expressions to Channel Values Up till now, the discussion has focused on how to apply simple mathematical formulae - additions, subtractions, multiplications, etc. - to a channel’s values. Nuke’s Expression node, however allows you to apply complex formulae to a channel’s values. The actual syntax for expressions is rather complex, and thus must be deferred to Expressions. For now, you can read about the basics of how to operate the Expression node." /><Url Source="../content/comp_environment/color_correction/transforming_colorspace.html" Title="Transforming the Color Space" Abstract="Transforming the Color Space Whenever you read a clip into a script, it is automatically converted to Nuke’s native color space, which is 32-bit per channel RGB, a linear format. This conversion takes place even if the clip you read in is in the Kodak Cineon format, which is a logarithmic format." /><Url Source="../content/comp_environment/color_correction/overriding_default_cineon.html" Title="Overriding the Default Cineon Conversion" Abstract="Overriding the Default Cineon Conversion Nuke uses the Kodak-recommended settings when making Cineon conversions in either direction. It’s rare that you would want to override these settings, but if it becomes necessary you can use Nuke’s Log2Lin or PLogLin nodes." /><Url Source="../content/comp_environment/color_correction/making_cspace_conversions.html" Title="Making Other Colorspace Conversions" Abstract="Making Other Colorspace Conversions You can also convert elements from Nuke’s native color space to other color spaces more appropriate to a given process or intended display device. For conversions such as this, use Nuke’s Colorspace node, which supports RGB, HSV, YUV, CIE, and CMS formats (and various sub-formats)." /><Url Source="../content/comp_environment/color_correction/changing_viewer_colorspace.html" Title="Changing the Viewer Color Space" Abstract="Changing the Viewer Color Space By default, a script’s Viewers display images in Nuke’s native color space. You can, however, set a script’s Viewers to display images in non-native color spaces. Changing the display color space in no way affects your rendered output. You are applying a display-only lookup table." /><Url Source="../content/comp_environment/filters/filters.html" Title="Filtering and Spatial Effects" Abstract="Filtering and Spatial Effects This chapter explains how to create custom filter effects using the Convolve node (see Applying Convolves) and how to simulate depth-of-field (DOF) blurring using the ZDefocus node (see Simulating Depth-of-Field Blurring)." /><Url Source="../content/comp_environment/filters/applying_convolves.html" Title="Applying Convolves" Abstract="Applying Convolves The Convolve node lets you create custom filter effects by supplying your own filter image. This image is used as the convolution matrix. In other words, the new value of a pixel is calculated by centering the filter image on the pixel, examining its neighbors, multiplying each pixel value by the corresponding pixel values in the filter image, and then adding the results together. This allows you to defocus a clip and create lens blur effects (bokeh) in the shape of the filter image (also see Simulating Depth-of-Field Blurring)." /><Url Source="../content/comp_environment/filters/applying_blurs.html" Title="Simulating Depth-of-Field Blurring" Abstract="Simulating Depth-of-Field Blurring The ZDefocus node blurs the image according to a depth map channel. This allows you to simulate depth-of-field (DOF) blurring." /><Url Source="../content/comp_environment/effects/creating_effects.html" Title="Creating Effects" Abstract="Creating Effects Several nodes in Nuke let you create various effects on your input images. In this chapter, we describe three of these nodes: LightWrap, Glint, and Text." /><Url Source="../content/comp_environment/effects/bg_reflections_fg_elements.html" Title="Background Reflections on Foreground Elements" Abstract="Background Reflections on Foreground Elements You can use the LightWrap node to create background reflections on foreground elements. The node creates a reflection of light around the edges of your foreground element by blending in whatever is in the background." /><Url Source="../content/comp_environment/effects/creating_star_filter_effects.html" Title="Creating Star Filter Effects on Image Highlights" Abstract="Creating Star Filter Effects on Image Highlights With the Glint node, you can create star-shaped rays around all the bright points in an image." /><Url Source="../content/comp_environment/effects/creating_text_overlays.html" Title="Creating Text Overlays" Abstract="Creating Text Overlays Using Nuke’s Text node, you can add text overlays on your images. You can simply type in the text you want to have displayed, or use Tcl expressions (such as [metadata values]) or Tcl variables to create a text overlay." /><Url Source="../content/comp_environment/effects/preparing_text_overlay.html" Title="Preparing a Text Overlay" Abstract="Preparing a Text Overlay Creating text overlays involves some preparation, particularly which channels hold the text and the positioning of the initial text box." /><Url Source="../content/comp_environment/effects/entering_text.html" Title="Entering Text" Abstract="Entering Text The message field in the properties panel is used to enter the text, Tcl expressions, Tcl variables, or a combination of these that you want to display in your output. For some examples of these formats, see the table below." /><Url Source="../content/comp_environment/effects/fonts_properties.html" Title="Fonts and Font Properties" Abstract="Fonts and Font Properties The FreeType library used by the Text node supports a large number of fonts, including TrueType, OpenType, and PostScript fonts. In order to display the available fonts faster in the font dropdown menu, these fonts are cached as an XML file when you open a Text node's properties panel. The font cache XML file is called fontmapping.fcache and its location is specified by the environment variable NUKE_TEMP_DIR. See Updating  the Font Cache for more information." /><Url Source="../content/comp_environment/effects/updating_fonts.html" Title="Updating  the Font Cache" Abstract="Updating  the Font Cache Once the font cache has been generated, Nuke accepts the content of the cache and no longer generates it from scratch every time it is requested by the font controls. If you add or remove fonts, the cache is not automatically updated and you need to update it manually. There are several ways to do so:" /><Url Source="../content/comp_environment/effects/transforming_text.html" Title="Transforming Text" Abstract="Transforming Text The Text node allows you to transform selections in the Viewer or create groups of selections in the animation layers table and transform them together. Both methods support animation using keyframes." /><Url Source="../content/comp_environment/effects/animating_transforms.html" Title="Animating Transforms" Abstract="Animating Transforms The Text node supports animation in a similar way to most other Nuke nodes, in that you can animate individual controls in the properties panel, but the Group tab animation layer table enables you to visualize your animations more easily." /><Url Source="../content/comp_environment/effects/changing_text_color.html" Title="Changing the Text Color" Abstract="Changing the Text Color To change the text color: In the Text node properties, click the Color tab. Adjust the color parameter or click on the color picker button   to select a color for the text." /><Url Source="../content/comp_environment/effects/masking_regions.html" Title="Masking Regions of the Viewer" Abstract="Masking Regions of the Viewer If you want to mask the effect of the Text operation, the easiest way is to use a Roto node connected to the mask input:" /><Url Source="../content/comp_environment/effects/adding_shadows.html" Title="Adding Shadows" Abstract="Adding Shadows You can add shadows to your text using the Shadows tab in the Text node's properties. To add a shadow to your text, simply select the Shadows tab and check enable drop shadows." /><Url Source="../content/comp_environment/effects/adding_drop_shadow.html" Title="Adding a Drop Shadow" Abstract="Adding a Drop Shadow The DropShadow gizmo allows you to create a drop shadow for any input image that has an alpha channel with values greater than 0. To add a drop shadow an image:" /><Url Source="../content/comp_environment/curvetool/analyzing_frame_sequences.html" Title="Analyzing and&#160;Matching Clips" Abstract="Analyzing and&#160;Matching Clips This chapter concentrates on the CurveTool node. The node analyzes an aspect of a frame sequence and creates an animation curve based on the analysis. You can then use the curve data to drive effects elsewhere. For instance, you can add matching flicker to a CG render." /><Url Source="../content/comp_environment/curvetool/cropping_black_edges.html" Title="Cropping Black Edges " Abstract="Cropping Black Edges You can crop black edges (or any color you choose) from your footage to eliminate unnecessary computation:" /><Url Source="../content/comp_environment/curvetool/analyzing_intensity.html" Title="Analyzing the Intensity of a Frame Sequence" Abstract="Analyzing the Intensity of a Frame Sequence You can analyze your footage to find out the average intensity values in it:" /><Url Source="../content/comp_environment/curvetool/removing_flicker.html" Title="Removing Flicker " Abstract="Removing Flicker You can also use the CurveTool to stabilize flickering in your footage. To do this: Connect a CurveTool node to your footage." /><Url Source="../content/comp_environment/curvetool/analyzing_exposure_differences.html" Title="Analyzing Exposure Differences" Abstract="Analyzing Exposure Differences You can analyze the differences in exposure in your frame sequence: Select Image &gt; CurveTool to add a CurveTool node after the image sequence you want to analyze." /><Url Source="../content/comp_environment/curvetool/tracking_brightest_darkest_pixels.html" Title="Tracking the Brightest and Darkest Pixels " Abstract="Tracking the Brightest and Darkest Pixels You can track the brightest and the darkest pixels in your frame sequence:" /><Url Source="../content/comp_environment/3d_compositing/3d_compositing.html" Title="3D Compositing" Abstract="3D Compositing Nuke’s 3D workspace allows you to set up a 3D composite for camera moves, set replacement, and other applications where you need to simulate a &quot;real&quot; dimensional environment." /><Url Source="../content/comp_environment/3d_compositing/overview.html" Title="Overview" Abstract="Overview This chapter explains how to set up a 3D scene in Nuke, and how to add objects and cameras in the 3D workspace. You’ll also see how to texture objects, transform objects and cameras, and render out scenes for use in other areas of your script." /><Url Source="../content/comp_environment/3d_compositing/setting_up_scene.html" Title="Setting Up a Scene" Abstract="Setting Up a Scene Each 3D scene includes the following objects: a Scene node, a Camera node, one or more geometry nodes (i.e., card, sphere, obj), and a ScanlineRender node. Examples of 3D scenes are shown in Script with 2D and 3D operators. on page 1 and the figure below. In the example shown in Script with 2D and 3D operators. on page 1, the Scene node receives the output from two geometry nodes (Card1 and Card2) and sends the composite of those objects to the ScanlineRender node, where the output is converted back to 2D." /><Url Source="../content/comp_environment/3d_compositing/using_3d_viewer.html" Title="Using the 3D Viewer" Abstract="Using the 3D Viewer When you have a 3D setup in your script, any Viewer window can toggle between the 2D and 3D display modes. The 2D mode shows the result of a rendered scene, the 3D mode shows the perspective from one camera in the scene." /><Url Source="../content/comp_environment/3d_compositing/3d_scene_geometry.html" Title="3D Scene Geometry" Abstract="3D Scene Geometry There are several options for inserting 3D geometry into your scenes. You can: create primitive shapes: cards, cubes, cylinders, and spheres. See Using Built-in Primitive Geometry" /><Url Source="../content/comp_environment/3d_compositing/built_in_geometry.html" Title="Using Built-in Primitive Geometry" Abstract="Using Built-in Primitive Geometry This section describes the primitive shapes built in with Nuke: cards, cubes, cylinders, and spheres. You can use them as the building blocks for other, more complex shapes, or place them in the background of your 3D scene where extra detail isn't visible.  If you modify them with transforms, they can also be useful as foreground objects." /><Url Source="../content/comp_environment/3d_compositing/working_with_cards.html" Title="Working with Cards" Abstract="Working with Cards A card is the simplest type of object you can add to a scene (and probably the type you will use most often). It’s merely a plane onto which you can map a texture - typically a clip you are using as part of a pan-and-tile setup." /><Url Source="../content/comp_environment/3d_compositing/working_with_cubes.html" Title="Working with Cubes " Abstract="Working with Cubes A cube is the familiar six-sided polyhedron. You can transform any of its sides (and, of course, texture it with clips)." /><Url Source="../content/comp_environment/3d_compositing/working_with_cylinders.html" Title="Working with Cylinders" Abstract="Working with Cylinders A cylinder is an object with two identical flat ends that are circular or elliptical and one curved side. You can control its geometric resolution, or face count (and, of course, texture it with images)." /><Url Source="../content/comp_environment/3d_compositing/working_with_spheres.html" Title="Working with Spheres" Abstract="Working with Spheres A sphere is the familiar globe-shaped polyhedron. You can control its geometric resolution, or face count (and, of course, texture it with images)." /><Url Source="../content/comp_environment/3d_compositing/importing_geometry.html" Title="Importing Geometry and Point Clouds from Other Applications" Abstract="Importing Geometry and Point Clouds from Other Applications Sometimes, you may need to import files or objects created in 3D applications, such as Maya or Boujou. Depending on what you want to import and from where, there are different ways of doing the import:" /><Url Source="../content/comp_environment/3d_compositing/importing_obj_geometry.html" Title="Importing Geometry from OBJ Files" Abstract="Importing Geometry from OBJ Files You can import into a Nuke scene 3D objects from other software programs that have been saved out in the OBJ (Wavefront) format. You cannot manipulate OBJ objects at the vertex level from inside Nuke, but you can texture and transform them." /><Url Source="../content/comp_environment/3d_compositing/importing_fbx_geometry.html" Title="Importing Geometry and Point Clouds from FBX Files" Abstract="Importing Geometry and Point Clouds from FBX Files FBX is a standard 3D file format that gives you access to 3D scenes created in other applications supporting the same format. What you generally have in an .fbx file is an entire 3D scene containing cameras, lights, meshes, non-uniform rational B-spline (NURBS) curves, transformation, materials, and so on. From this scene, you can extract cameras, lights, transforms, and meshes into Nuke. This way, you can, for example, create a mesh in Maya, export it in a .fbx file, and use the same mesh again in Nuke." /><Url Source="../content/comp_environment/3d_compositing/importing_alembic_geometry.html" Title="Importing Geometry and Point Clouds from Alembic Files" Abstract="Importing Geometry and Point Clouds from Alembic Files You can import meshes (or NURBS curves/patch surfaces converted to meshes) and point clouds from Alembic files (.abc file format) into a Nuke scene. During the import, Nuke allows you to control which nodes in the Alembic scene get loaded by using an import dialog. If there is only one item in the Alembic file, it loads automatically. Below is an example of an imported octopus Alembic file, courtesy of Sony Pictures Imageworks." /><Url Source="../content/comp_environment/3d_compositing/creating_geometry.html" Title="Creating Point Clouds and Geometry from Scratch" Abstract="Creating Point Clouds and Geometry from Scratch In addition to using the built-in primitives and imported geometry, Nuke also allows you to create dense point clouds and geometry from scratch." /><Url Source="../content/comp_environment/3d_compositing/using_depthtoposition.html" Title="Creating a Position Pass Using the DepthToPosition Node" Abstract="Creating a Position Pass Using the DepthToPosition Node DepthToPosition takes depth data contained in an image file and the camera data to create a 2D position (xyz) pass. This pass is created by projecting the depth through the camera and recording the xyz positions of each projected point. The DepthToPosition node can be used together with the PositionToPoints node to create a point cloud, similar to the effect achieved with the DepthToPoints node." /><Url Source="../content/comp_environment/3d_compositing/using_positiontopoints.html" Title="Creating a Dense Point Cloud Using the PositionToPoints Node" Abstract="Creating a Dense Point Cloud Using the PositionToPoints Node PositionToPoints takes position data contained in an image file (rendered from a 3D application) and recreates the image as a dense 3D point cloud in Nuke. The x, y, and z vertices in the position channel are used to define point positions in 3D space, the size and number of which can be adjusted using the point size and point detail controls." /><Url Source="../content/comp_environment/3d_compositing/using_depthtopoints.html" Title="Creating a Point Cloud Using the DepthToPoints Node" Abstract="Creating a Point Cloud Using the DepthToPoints Node DepthToPoints is a gizmo containing the DepthToPosition and PositionToPoints nodes. It can be used to generate a 3D point cloud from a depth pass and 3D camera. DepthToPoints takes the depth data and color information contained in an image file and recreates the image as a 3D point cloud." /><Url Source="../content/comp_environment/3d_compositing/object_display_properties.html" Title="Object Display Properties" Abstract="Object Display Properties You can adjust the display characteristics of all geometric objects in a scene. These settings don’t affect the render output of the scene; these are for display purposes only in the 3D Viewer." /><Url Source="../content/comp_environment/3d_compositing/3d_selection_tools.html" Title="3D Selection Tools" Abstract="3D Selection Tools Using the 3D selection tools in the top right corner of the Viewer, you can select nodes, vertices and faces on a 3D object. Additionally, you can select individual 3D objects in the 3D view, which is handy when you have more than one object in a node." /><Url Source="../content/comp_environment/3d_compositing/merging_objects.html" Title="Merging Objects" Abstract="Merging Objects With the MergeGeo node, you can merge your 3D objects together to process all of them at the same time. For example, after merging your objects, you can use a Transform node to move the objects together, or add an ApplyMaterial node to apply a global material to them (note that this overrides any individual materials applied to the geometry before it was merged)." /><Url Source="../content/comp_environment/3d_compositing/modifying_object_shapes.html" Title="Modifying Object Shapes" Abstract="Modifying Object Shapes Many nodes under the Modify menu let you modify the shape of an object as a whole. Modifying only selected portions of an object is also supported using the EditGeo node." /><Url Source="../content/comp_environment/3d_compositing/modifying_objects_editgeo.html" Title="Modifying Objects Using the EditGeo Node" Abstract="Modifying Objects Using the EditGeo Node EditGeo allows you to directly modify an object’s vertices or faces, depending on the Viewer selection mode currently active. You can also modify multiple objects simultaneously if the EditGeo is downstream of a MergeGeo node with multiple geometry inputs." /><Url Source="../content/comp_environment/3d_compositing/modifying_objects_lookup_curves.html" Title="Modifying Objects Using Lookup Curves" Abstract="Modifying Objects Using Lookup Curves The CrosstalkGeo and LookupGeo nodes offer you direct global control over each of the vertex x, y, and z values respectively. You can, for example, only modify all the y values without touching the x and z values." /><Url Source="../content/comp_environment/3d_compositing/modifying_objects_power_function.html" Title="Modifying Objects Using a Power Function" Abstract="Modifying Objects Using a Power Function The LogGeo node lets you modify the shape of your 3D objects using a power function. Using this node, you can raise each of the vertex x, y, and z values to a power (Xx, Yy, Zz). This can have a different effect depending on whether you are dealing with negative or positive values." /><Url Source="../content/comp_environment/3d_compositing/modifying_objects_image1.html" Title="Modifying Objects Using an Image - Method 1" Abstract="Modifying Objects Using an Image - Method 1 With the DisplaceGeo node, you can modify geometry based on an image. When using the node, each vertex is displaced along its normal with a value corresponding to the image pixel the vertex’s uv attribute points to. The higher the pixel value, the greater the displacement." /><Url Source="../content/comp_environment/3d_compositing/modifying_objects_image2.html" Title="Modifying Objects Using an Image - Method 2" Abstract="Modifying Objects Using an Image - Method 2 Like the DisplaceGeo node, the Displacement shader node also performs displacement mapping and at first glance the nodes seem very similar. However, the approach they have on performing displacement mapping is different." /><Url Source="../content/comp_environment/3d_compositing/modifying_objects_perlin_noise.html" Title="Modifying Objects Using a Perlin Noise Function" Abstract="Modifying Objects Using a Perlin Noise Function The ProcGeo, or ProceduralNoise, node lets you modify your 3D objects using a Perlin noise function that creates seemingly random noise. For example, you could use the ProcGeo node to generate animated noise for rippling waves or clouds, or to create a terrain from a flat card, like in the following image:" /><Url Source="../content/comp_environment/3d_compositing/modifying_objects_distortion.html" Title="Modifying Objects Using a Distortion Function" Abstract="Modifying Objects Using a Distortion Function The RadialDistort node is a non-linear transformation of the vertices along directions from the object center, giving either a barrel or pin-cushion distortion. In the following image, two cylinders have been distorted using the RadialDistort node." /><Url Source="../content/comp_environment/3d_compositing/modifying_objects_trilinear.html" Title="Modifying Objects Using a Trilinear Interpolation" Abstract="Modifying Objects Using a Trilinear Interpolation With the Trilinear node, you can warp the object as a whole by using a trilinear interpolation to warp the object’s bounding box. For example, you can use this node to create animated object deformations, such as the squish/squash of a bouncing ball." /><Url Source="../content/comp_environment/3d_compositing/materials_textures.html" Title="Materials and Textures" Abstract="Materials and Textures This section teaches you how to: use the nodes in the 3D &gt; Shader menu to control what material your objects seem to be made of. See Object Material Properties." /><Url Source="../content/comp_environment/3d_compositing/object_material_properties.html" Title="Object Material Properties" Abstract="Object Material Properties The nodes under the Shader menu let you define the material attributes of geometric objects in a scene, including the quality of light reflected back to the camera from an object’s surface. Using these nodes, you can control what material your objects seem to be made of." /><Url Source="../content/comp_environment/3d_compositing/merging_shaders.html" Title="Merging Two Shader Nodes" Abstract="Merging Two Shader Nodes With the Shader menu’s MergeMat node, you can combine two shader nodes together, using compositing algorithms like none, replace, over, and stencil. The MergeMat node is particularly useful for combining multiple Project3D nodes, allowing you to composite 2D images projected onto the 3D geometry atop each other." /><Url Source="../content/comp_environment/3d_compositing/merging_material_objects_behind.html" Title="Merging a Material with the Objects Behind" Abstract="Merging a Material with the Objects Behind The Shader menu’s BlendMat node sets how the pixels colored by the material is applied to combine with the pixels from objects behind. It is like the MergeMat node, but instead of blending with another material, it blends with whatever is rendered behind in the 3D scene." /><Url Source="../content/comp_environment/3d_compositing/replacing_material_channels_constant.html" Title="Replacing Material Channels with a Constant Color" Abstract="Replacing Material Channels with a Constant Color The FillMat node lets you replace selected material channels with a constant color. Typically, you would use this node to make one object hold out the others. When you set the FillMat color to 0, it acts as a “3D cookie cutter” and makes a black hole where the material would otherwise be." /><Url Source="../content/comp_environment/3d_compositing/projecting_textures_objects.html" Title="Projecting Textures onto Objects" Abstract="Projecting Textures onto Objects You can use the UVProject and the Project3D nodes to project texture images onto your 3D objects. This way, you can add detail, surface texture, or color to your geometry, making the geometry more realistic and interesting." /><Url Source="../content/comp_environment/3d_compositing/projecting_textures_uvproject.html" Title="Projecting Textures with the UVProject Node" Abstract="Projecting Textures with the UVProject Node The UVProject node sets the uv coordinates for the object, allowing you to project a texture image onto the object. If the object already has uv coordinates, this node replaces them." /><Url Source="../content/comp_environment/3d_compositing/projecting_textures_project3d.html" Title="Projecting Textures with the Project3D Node" Abstract="Projecting Textures with the Project3D Node The Project3D node projects an input image through a camera onto the 3D object." /><Url Source="../content/comp_environment/3d_compositing/importing_udim_patches.html" Title="Importing UDIM Patches" Abstract="Importing UDIM Patches When applying textures to models that use regions of UV space outside the standard (0,0) - (1,1) range, it’s common to use one texture for each 1x1 square. These textures can be numbered in a variety of ways. UDIM is a numbering scheme that identifies the first texture that’s applied to the (0,0) - (1,1) region as 1001, with numbers increasing by one for each texture in the U direction, and by ten for each texture in the V direction." /><Url Source="../content/comp_environment/3d_compositing/lighting.html" Title="Lighting" Abstract="Lighting The nodes under the Lights menu let you control the lighting in your scene. Using these nodes, you can bring objects out or push them back, create an illusion of depth, simulate the conditions in the real world, or simply alter the feeling of the scene." /><Url Source="../content/comp_environment/3d_compositing/inserting_lights.html" Title="Inserting Lights" Abstract="Inserting Lights There are several types of lights that you can add to your 3D&#160;scene: direct lights (see Inserting Direct Lights and Inserting Direct Lights, Point Lights, or Spot Lights)" /><Url Source="../content/comp_environment/3d_compositing/inserting_direct_lights.html" Title="Inserting Direct Lights" Abstract="Inserting Direct Lights A direct light is a light that emits parallel light in one direction. It appears to illuminate all objects with equal intensity, as if it was coming from a far away source. Being at an infinite distance from the objects, direct light has orientation, but no position. A real world example of a direct light is the sun. You can use direct light to simulate sunlight and moonlight, for example." /><Url Source="../content/comp_environment/3d_compositing/inserting_point_lights.html" Title="Inserting Point Lights" Abstract="Inserting Point Lights A point light is a point in 3D space that emits light in every direction. A real world example of a point light is a light bulb. You can use point light to simulate light bulbs, lamps, and candles, for example." /><Url Source="../content/comp_environment/3d_compositing/inserting_spot_lights.html" Title="Inserting Spot Lights" Abstract="Inserting Spot Lights A spot light is a point in 3D space that emits a cone-shaped light in a given direction. A real world example of a spot light is a desk lamp." /><Url Source="../content/comp_environment/3d_compositing/inserting_environment_lights.html" Title="Inserting Environment Lights" Abstract="Inserting Environment Lights An environment light is a light that illuminates the objects using an image of light from a real-world environment. This image-based lighting is generated using High Dynamic Range Images (HDRI). When HDR images are created, several differently exposed images are combined to produce a single image of the surrounding environment. As a result, HDR images have a wide range of values between light and dark areas, and represent the lighting conditions of the real world more accurately." /><Url Source="../content/comp_environment/3d_compositing/the_light_node.html" Title="Inserting Direct Lights, Point Lights, or Spot Lights" Abstract="Inserting Direct Lights, Point Lights, or Spot Lights The Light node includes the DirectLight, Point, and Spotlight nodes, so you can set it to act as any of these three nodes. The advantage of using a Light node in this way is that if you want to change the light type later, you can do so without setting up a new node. For example, you might insert a direct light, but then realize that what you actually need is a spot light. If you inserted the direct light using a DirectLight node, you need to delete this node and insert a SpotLight node instead. However, if you inserted the direct light using a Light node, you can simply change the light type from directional to spot in the Light controls." /><Url Source="../content/comp_environment/3d_compositing/importing_fbx_lights.html" Title="Importing Lights from FBX Files" Abstract="Importing Lights from FBX Files FBX is a standard 3D file format that gives you access to 3D scenes created in other applications supporting the same format. What you generally have in an .fbx file is an entire 3D scene containing cameras, lights, meshes, non-uniform rational B-spline (NURBS) curves, transformation, materials, and so on. From this scene, you can extract cameras, lights, transforms, and meshes into Nuke. This way, you can, for example, create a light in Maya, export it in a .fbx file, and use the same light again in Nuke." /><Url Source="../content/comp_environment/3d_compositing/casting_shadows.html" Title="Casting Shadows" Abstract="Casting Shadows The Light, Point, DirectLight, and Spotlight nodes all have controls that you can use to adjust how the lights cast shadows in your 3D scene. The following geometry nodes also have controls that allow you to select whether they receive shadows cast by the lights and whether they themselves cast shadows on other objects:" /><Url Source="../content/comp_environment/3d_compositing/manipulating_object_normals.html" Title="Manipulating Object Normals" Abstract="Manipulating Object Normals Object normals are vectors that are perpendicular to the surface. They are used in lighting calculations to determine how the light should bounce off a surface at any particular point. By manipulating them, you can control the diffuse and specular light contributions." /><Url Source="../content/comp_environment/3d_compositing/relighting_2d_images.html" Title="Relighting a 2D Image Using 3D Lights" Abstract="Relighting a 2D Image Using 3D Lights The Relight node takes a 2D image containing normal and point position passes and lets you relight it using 3D lights. Essentially bypassing the need to return to a 3D application and re-render the lighting, Relight provides a quick and interactive way to relight a 3D scene in a 2D environment." /><Url Source="../content/comp_environment/3d_compositing/cameras.html" Title="Cameras" Abstract="Cameras Nuke supports multiple cameras in a scene, with each providing a unique perspective. For details on how to add a camera, look through it, and edit its lens characteristics, see  Working with Cameras." /><Url Source="../content/comp_environment/3d_compositing/working_with_cameras.html" Title="Working with Cameras" Abstract="Working with Cameras This section explains how to add a camera to your script, look through it, lock it, and edit its lens characteristics." /><Url Source="../content/comp_environment/3d_compositing/projection_cameras.html" Title="Projection Cameras" Abstract="Projection Cameras In addition to viewing and rendering a 3D scene, cameras can also project a 2D still image or image sequence onto geometry in the scene. This is similar to the front-projection systems used in practical photography, where a background image or other element is projected onto the stage and photographed with other elements." /><Url Source="../content/comp_environment/3d_compositing/importing_fbx_cameras.html" Title="Importing Cameras from FBX Files" Abstract="Importing Cameras from FBX Files You can import cameras from FBX&#160;files. About FBX Files FBX is a standard 3D file format that gives you access to 3D scenes created in other applications supporting the same format. What you generally have in an .fbx file is an entire 3D scene containing cameras, lights, meshes, non-uniform rational B-spline (NURBS) curves, transformation, materials, and so on. From this scene, you can extract cameras, lights, transforms, and meshes into Nuke. This way, you can, for example, create a camera in Maya, export it in a .fbx file, and use the same camera again in Nuke." /><Url Source="../content/comp_environment/3d_compositing/importing_alembic_cameras.html" Title="Importing Cameras from Alembic Files" Abstract="Importing Cameras from Alembic Files You can import cameras  from Alembic files (.abc file format) into a Nuke scene. During the import, Nuke allows you to control which nodes in the Alembic scene get loaded by using an import dialog. If there is only one item in the Alembic file, it loads automatically." /><Url Source="../content/comp_environment/3d_compositing/importing_cameras_boujou.html" Title="Importing Cameras from Boujou" Abstract="Importing Cameras from Boujou Nuke is shipped with a script called import_boujou.tcl, which lets you load in cameras created with Boujou." /><Url Source="../content/comp_environment/3d_compositing/transforming_objects.html" Title="Transforming Geometry, Cameras, and Lights" Abstract="Transforming Geometry, Cameras, and Lights Transform operations include moving, scaling, rotating the objects in your 3D scene. When an object node is active, you can enter specific transform settings in the node parameters (see Transforming from the Node Properties Panel), or directly manipulate the object with the transform handles displayed in the 3D Viewer (see Using the Transform Handles). Transformations occur from the location of the object’s pivot point (see Transformations and the Pivot Point)." /><Url Source="../content/comp_environment/3d_compositing/using_transform_handles.html" Title="Using the Transform Handles" Abstract="Using the Transform Handles Transform handles appear when a 3D object with transform capabilities is loaded into the Properties Bin. The colors of the handles correspond to the axes available in 3D space: red transforms the x-axis, green transforms the y-axis, and blue transforms the z-axis." /><Url Source="../content/comp_environment/3d_compositing/transforming_properties_panel.html" Title="Transforming from the Node Properties Panel" Abstract="Transforming from the Node Properties Panel The transform handles (see Using the Transform Handles) are a convenient way to move objects around in the 3D workspace, but when you want more precision, you should enter values directly into the object’s node panel. The panel also includes transform and rotation order options, which are not available within the 3D Viewer." /><Url Source="../content/comp_environment/3d_compositing/transformations_pivot_point.html" Title="Transformations and the Pivot Point" Abstract="Transformations and the Pivot Point When you make changes to an object’s position, scaling and rotation, these occur from the location of the object’s origin point or pivot. By default, the pivot point is located at the intersection of the object’s local axes." /><Url Source="../content/comp_environment/3d_compositing/parenting_axis_objects.html" Title="Parenting to Axis Objects" Abstract="Parenting to Axis Objects An axis object works as a null object by adding a new transformational axis to which other objects may be parented. Even when objects already have their own internal axes, it’s sometimes useful to parent in a separate axis." /><Url Source="../content/comp_environment/3d_compositing/using_transformgeo_node.html" Title="Using the TransformGeo Node" Abstract="Using the TransformGeo Node The TransformGeo node allows you to move, rotate, scale, and perform other transformations on several objects merged together with a MergeGeo node. It also lets you connect geometry objects to an Axis node. By doing so, you can move all the connected objects together by using the Axis transformation controls. All you need to do is insert a TransformGeo after each geometry object, connect the Axis node to the TransformGeo nodes’ axis input, and adjust the transform controls of the Axis node. For more information, see Parenting to Axis Objects on page 1." /><Url Source="../content/comp_environment/3d_compositing/applying_tracks_object.html" Title="Applying Tracks to an Object" Abstract="Applying Tracks to an Object Nuke can import channel files and apply the motion data to the transformation parameters of any camera or object. The most common purpose for this is to simulate a practical camera move or move objects along a defined path." /><Url Source="../content/comp_environment/3d_compositing/importing_fbx_transforms.html" Title="Importing Transforms from FBX Files" Abstract="Importing Transforms from FBX Files FBX is a standard 3D file format that gives you access to 3D scenes created in other applications supporting the same format. What you generally have in an .fbx file is an entire 3D scene containing cameras, lights, meshes, non-uniform rational B-spline (NURBS) curves, transformation, materials, and so on. From this scene, you can extract cameras, lights, transforms, and meshes into Nuke. This way, you can, for example, create a transform in Maya, export it in a .fbx file, and use the same transform again in Nuke." /><Url Source="../content/comp_environment/3d_compositing/importing_alembic_transforms.html" Title="Importing Transforms from Alembic Files" Abstract="Importing Transforms from Alembic Files You can import transforms from Alembic files (.abc file format) into a Nuke scene. During the import, Nuke allows you to control which nodes in the Alembic scene get loaded by using an import dialog. If there is only one item in the Alembic file, it loads automatically." /><Url Source="../content/comp_environment/3d_compositing/adding_motion_blur_3d_scene.html" Title="Adding Motion Blur to the 3D Scene" Abstract="Adding Motion Blur to the 3D Scene To create more realism for a 3D scene, you’ll want to add motion blur to it based on the movement of your 3D camera. This can be done in two ways:" /><Url Source="../content/comp_environment/3d_compositing/adding_motion_blur_scanlinerender.html" Title="Adding Motion Blur Using ScanlineRender" Abstract="Adding Motion Blur Using ScanlineRender To add motion blur using ScanlineRender: In the ScanlineRender node’s controls, go to the MultiSample tab." /><Url Source="../content/comp_environment/3d_compositing/adding_motion_blur_vectorblur.html" Title="Adding Motion Blur Using VectorBlur" Abstract="Adding Motion Blur Using VectorBlur Nuke’s VectorBlur node generates motion blur by blurring each pixel into a straight line, using the values from the motion vector channels (u and v channels) to determine the direction of the blur. Compared to generating motion blur using the ScanlineRender node’s MultiSample controls, this is less accurate but faster to render." /><Url Source="../content/comp_environment/3d_compositing/exporting_objects.html" Title="Exporting Geometry, Cameras, Lights, Axes, or Point Clouds " Abstract="Exporting Geometry, Cameras, Lights, Axes, or Point Clouds You can export geometry, cameras, light, axes and point clouds into an FBX (.fbx) or Alembic (.abc) file using the WriteGeo node." /><Url Source="../content/comp_environment/3d_compositing/rendering_3d_scene.html" Title="Rendering a 3D Scene" Abstract="Rendering a 3D Scene The 3D Viewer displays the scene using an OpenGL hardware render. When you build a scene, Nuke renders high-quality output from the perspective of the camera connected to the ScanlineRender node. The rendered 2D image is then passed along to the next node in the compositing tree, and you can use the result as an input to other nodes in the script." /><Url Source="../content/comp_environment/stereoscopic_films/stereo_projects.html" Title="Stereoscopic Scripts" Abstract="Stereoscopic Scripts The title of this chapter is slightly misleading, as Nuke isn’t actually limited to stereoscopic views, but rather provides multi-view support for as many views as you need. The views do not have to be stereo pairs, but since that is the most obvious application, this chapter mainly deals with stereoscopic projects." /><Url Source="../content/comp_environment/stereoscopic_films/setting_up_stereo_views.html" Title="Setting Up Views for the Script" Abstract="Setting Up Views for the Script Before you start working on stereoscopic images, you need to set different views for the right and the left eye in the project settings. This allows you to process the individual views separately or both views together, and see the effect of your changes on each view." /><Url Source="../content/comp_environment/stereoscopic_films/loading_multi_view_images.html" Title="Loading Multi-View Images" Abstract="Loading Multi-View Images Once you have set up the views, you are ready to read your images into Nuke. To make things easier, the images you read in should have the view name or the first letter of the view name in the filename, for example filename.left.0001.exr, filename.l.exr, or lefteyefilename.0001.cin." /><Url Source="../content/comp_environment/stereoscopic_films/displaying_views.html" Title="Displaying Views in the Viewer" Abstract="Displaying Views in the Viewer You can only display the views that exist in your project settings. To see a list of these views, or to add or delete views, select Edit &gt; Project Settings and go to the Views tab. For more information, see Setting Up Views for the Script on page 1." /><Url Source="../content/comp_environment/stereoscopic_films/selecting_views_to_change.html" Title="Selecting Which Views to Apply Changes To" Abstract="Selecting Which Views to Apply Changes To By default, Nuke applies any changes you make to all views of the processed node. To apply changes to a particular view only (for example, the left view but not the right), you must first do one of the following:" /><Url Source="../content/comp_environment/stereoscopic_films/performing_different_actions.html" Title="Performing Different Actions on Different Views" Abstract="Performing Different Actions on Different Views In case you need to perform totally different actions on the two views, you can add a OneView node to separate one view for processing." /><Url Source="../content/comp_environment/stereoscopic_films/reproducing_changes.html" Title="Reproducing Changes Made to One View" Abstract="Reproducing Changes Made to One View When rotoscoping, creating paint effects, or doing other operations dependent on image locality, you can have changes made to one view automatically reproduced in the other. This applies to the RotoPaint node, Roto node and any nodes, groups, or gizmos that have controls for x and y coordinates." /><Url Source="../content/comp_environment/stereoscopic_films/swapping_views.html" Title="Swapping Views" Abstract="Swapping Views You can rearrange the views in your script using the ShuffleViews node. For example, you can swap the left and right views around in the pipeline, so that Nuke uses the left input for the right eye and vice versa." /><Url Source="../content/comp_environment/stereoscopic_films/converting_images_anaglyph.html" Title="Converting Images into Anaglyph" Abstract="Converting Images into Anaglyph You can use the Anaglyph node to convert your inputs into anaglyph images, which produce a 3D effect when viewed with 2-color anaglyph glasses." /><Url Source="../content/comp_environment/stereoscopic_films/changing_convergence.html" Title="Changing Convergence" Abstract="Changing Convergence The ReConverge node lets you shift convergence (the inward rotation of the eyes or cameras) so that any selected point in the image appears at screen depth when viewed with 3D glasses. This point is called the convergence point. It is the point where the lines of sight from the two cameras meet." /><Url Source="../content/comp_environment/stereoscopic_films/previewing_stereo_images.html" Title="Previewing Stereoscopic Images" Abstract="Previewing Stereoscopic Images On Windows, Linux, and Mac OS X 10.5 (Leopard) or higher, you can preview stereo images by flipbooking them." /><Url Source="../content/comp_environment/stereoscopic_films/rendering_stereo_images.html" Title="Rendering Stereoscopic Images" Abstract="Rendering Stereoscopic Images You can render several views using a single Write node. When using the stereo extensions for the .exr file format, Nuke writes the output of both views into a single file. With any other file types, the views are written into their respective files." /><Url Source="../content/comp_environment/deep/deep_compositing.html" Title="Deep Compositing" Abstract="Deep Compositing Deep compositing is a way of compositing digital images using data in a different format to standard &quot;flat&quot; compositing. As the name suggests, deep compositing uses additional depth data. This reduces need for re-rendering, produces high image quality, and helps you solve problems with artifacts around the edges of objects." /><Url Source="../content/comp_environment/deep/reading_deep_footage.html" Title="Reading in Deep Footage" Abstract="Reading in Deep Footage You read in deep images to Nuke with a DeepRead node, which is rather like reading in any other images with the Read node. Nuke allows you to import deep images in two formats:" /><Url Source="../content/comp_environment/deep/creating_deep_data.html" Title="Creating Deep Data" Abstract="Creating Deep Data You can create deep data in Nuke by: sampling a regular 2D image sequence at multiple frames to create several samples for each pixel in a single deep frame. See Converting a 2D Image Sequence to a Deep Frame Using Input Frames." /><Url Source="../content/comp_environment/deep/merging_deep_images.html" Title="Merging Deep Images" Abstract="Merging Deep Images Use the DeepMerge node to merge the samples from multiple deep images, so that each output pixel contains all the samples from the same pixel of each input." /><Url Source="../content/comp_environment/deep/creating_holdouts.html" Title="Creating Holdouts" Abstract="Creating Holdouts There are two ways to create holdouts, using either the DeepHoldout or the DeepMerge nodes. The primary difference is whether you want the node to produce a flattened output image or a deep output image after the holdout." /><Url Source="../content/comp_environment/deep/creating_2d_3d_elements.html" Title="Creating 2D and 3D Elements from Deep Images" Abstract="Creating 2D and 3D Elements from Deep Images You can create a 2D image or a 3D point cloud from a deep image." /><Url Source="../content/comp_environment/deep/modifying_deep_data.html" Title="Modifying Deep Data" Abstract="Modifying Deep Data Nuke allows you to color correct deep images as well as modify them using expressions." /><Url Source="../content/comp_environment/deep/cropping_reformatting_deep.html" Title="Cropping, Reformatting, and Transforming Deep Images" Abstract="Cropping, Reformatting, and Transforming Deep Images You can crop, reformat and transform deep images much in the same way as you would a regular image, using the corresponding deep nodes." /><Url Source="../content/comp_environment/deep/sampling_deep_images.html" Title="Sampling Deep Images" Abstract="Sampling Deep Images You can use the DeepSample node to sample any given pixel in a deep image. The Deep Sample node gives you the depth data as figures, but you can view the same data in the Deep Graph in a graphical form." /><Url Source="../content/comp_environment/deep/writing_deep_data.html" Title="Writing Deep Data" Abstract="Writing Deep Data You can write out deep images in the scanline OpenEXR 2.0 format using the DeepWrite node, which shares a lot of controls with the standard Write node. Do the following:" /><Url Source="../content/comp_environment/metadata/working_file_metadata.html" Title="Working with File Metadata" Abstract="Working with File Metadata The Read node's Metadata tab and the nodes in the Metadata menu of the Toolbar let you work with information embedded in your images. This section gives instructions on their usage, teaching you to view, compare, edit, and render metadata." /><Url Source="../content/comp_environment/metadata/metadata_nuke.html" Title="Metadata in Nuke" Abstract="Metadata in Nuke Metadata is a set of information about an image embedded in the image file. This information may include the image’s original bit depth, width, and height, for example. It can be attached to the file by the camera used to shoot the images, and/or edited later." /><Url Source="../content/comp_environment/metadata/viewing_metadata.html" Title="Viewing Metadata" Abstract="Viewing Metadata The simplest way to view file metadata is by clicking the Metadata tab in the Properties panel  of a standard Read node. All the available metadata is displayed, along with a simple search function." /><Url Source="../content/comp_environment/metadata/comparing_metadata.html" Title="Comparing Metadata Between Inputs" Abstract="Comparing Metadata Between Inputs To compare metadata between two inputs: From the Toolbar, select MetaData &gt; CompareMetaData to add a CompareMetaData node after the two nodes whose metadata you want to compare." /><Url Source="../content/comp_environment/metadata/modifying_metadata.html" Title="Modifying Metadata" Abstract="Modifying Metadata There are several ways to modify metadata in Nuke. To Add Metadata Select MetaData &gt; ModifyMetaData to insert a ModifyMetaData node after the node whose metadata you want to add a new key to." /><Url Source="../content/comp_environment/metadata/copying_filtering_metadata.html" Title="Copying Metadata from One Input to Another and Filtering Metadata" Abstract="Copying Metadata from One Input to Another and Filtering Metadata To copy metadata from one input to another and/or filter metadata:" /><Url Source="../content/comp_environment/metadata/adding_timecode_metadata.html" Title="Adding a Time Code to Metadata" Abstract="Adding a Time Code to Metadata To add a time code to metadata: Select MetaData &gt; AddTimeCode to insert an AddTimeCode node into your node tree." /><Url Source="../content/comp_environment/metadata/rendering_metadata.html" Title="Rendering Metadata" Abstract="Rendering Metadata When rendering with the Write node, Nuke lets you write out metadata into the following file formats: .exr, .cin, .dpx, and .jpg. You cannot write out metadata into any other formats." /><Url Source="../content/comp_environment/metadata/accessing_metadata_tcl.html" Title="Accessing Metadata Using Tcl Expressions" Abstract="Accessing Metadata Using Tcl Expressions You can access metadata via Tcl expressions in the following ways:" /><Url Source="../content/comp_environment/metadata/accessing_metadata_python.html" Title="Accessing Metadata Using Python" Abstract="Accessing Metadata Using Python You can also access metadata using the Python programming language. For more information, see the Nuke Python documentation (Help &gt; Documentation)." /><Url Source="../content/comp_environment/audio_in_nuke/audio_nuke.html" Title="Audio in Nuke" Abstract="Audio in Nuke In many compositing projects it’s vital to be able to key visual changes to cues on the audio track that goes with the picture. You can use Nuke’s AudioRead node to read in an audio file, view it in the Curve Editor and Dope Sheet in order to line up keyframes of your composition with the waveform of the sound. You can then flipbook the audio with your footage to preview your comp with sound." /><Url Source="../content/comp_environment/audio_in_nuke/reading_audio_files.html" Title="Reading Audio Files into the Node Graph" Abstract="Reading Audio Files into the Node Graph You can drag and drop audio clips from the Project tab to the Node Graph, if the clip is already in Nuke." /><Url Source="../content/comp_environment/audio_in_nuke/creating_audio_curves.html" Title="Creating and Editing Audio Curves" Abstract="Creating and Editing Audio Curves Once you have read in an audio file (see Reading In Audio Files), you can display an audio waveform for your audio clip and access its animation curve in the Curve Editor or the Dope Sheet." /><Url Source="../content/comp_environment/audio_in_nuke/flipbooking_audio_track.html" Title="Flipbooking the Audio Track" Abstract="Flipbooking the Audio Track When you’re done, you can proceed to flipbooking your results: Click the flipbook this Viewer button  in the Comp Viewer." /><Url Source="../content/comp_environment/rendering/previews_rendering.html" Title="Previews and Rendering" Abstract="Previews and Rendering Nuke supports a fast, high-quality internal renderer, with superior color resolution and dynamic range without a slowdown in the workflow." /><Url Source="../content/comp_environment/rendering/previewing_output.html" Title="Previewing Output" Abstract="Previewing Output This section explains how to preview individual frames in a Nuke Viewer window (see Previewing in a Nuke Viewer), how to render a flipbook for a sequence of frames (see Flipbooking Sequences), and how to preview output on an external broadcast video monitor (see Previewing on an External Broadcast Video Monitor)." /><Url Source="../content/comp_environment/rendering/previewing_nuke_viewer.html" Title="Previewing in a Nuke Viewer" Abstract="Previewing in a Nuke Viewer When you connect a Viewer to a given node’s output (by selecting the node and pressing a number key), Nuke immediately starts rendering the output in the Viewer using all available local processors." /><Url Source="../content/comp_environment/rendering/flipbooking_sequences.html" Title="Flipbooking Sequences" Abstract="Flipbooking Sequences Flipbooking a sequence refers to rendering a range of images (typically at proxy resolution), then playing them back in order to accurately access the motion characteristics of added effects." /><Url Source="../content/comp_environment/rendering/previewing_external_monitor.html" Title="Previewing on an External Broadcast Video Monitor" Abstract="Previewing on an External Broadcast Video Monitor To check the final result in correct video colorspace and pixel aspect ratio, you can preview the current Viewer image on an external broadcast video monitor. This option requires additional hardware, such as a monitor output card or a FireWire port." /><Url Source="../content/comp_environment/rendering/rendering_output.html" Title="Rendering Output" Abstract="Rendering Output Nuke can render images locally on your workstation (see Output (Write) Nodes) or it can be setup to render images on a network render farm (see Using Nuke Studio's Frame Server). Before rendering, make sure that you are using the appropriate file name syntax (see File Name Conventions for Rendered Images) and verify that your project settings have the correct output format and proxy format selected (see Render Resolution and Format)." /><Url Source="../content/comp_environment/rendering/render_resolution_format.html" Title="Render Resolution and Format" Abstract="Render Resolution and Format Before rendering a script, it’s important to check what is the currently active mode: the full-size or the proxy mode. Nuke executes all renders at the currently active scale. Thus, when a script is rendered in proxy mode, processing is done at the proxy scale and image output goes to the file name in the Write node’s proxy field. If you do not specify a proxy file name, the render fails with an error. It never resizes the proxy image, and it does not write the proxy image over the full-size one." /><Url Source="../content/comp_environment/rendering/output_write_nodes.html" Title="Output (Write) Nodes" Abstract="Output (Write) Nodes With the correct resolution and format selected, you then insert Write nodes to indicate where you want to render images from the script." /><Url Source="../content/comp_environment/rendering/file_name_conventions.html" Title="File Name Conventions for Rendered Images" Abstract="File Name Conventions for Rendered Images There is no parameter in the Write node to specify output format. Instead, format is indicated by a prefix or an extension when you type the file name. Here is the appropriate syntax:" /><Url Source="../content/comp_environment/rendering/changing_frame_numbering.html" Title="Changing the Numbering of Rendered Frames" Abstract="Changing the Numbering of Rendered Frames By default, when you render an image sequence, Nuke assumes an exact relation between the currently processed frame and the numbering of the frame written out. Therefore, if you choose to render frame 15, the resulting file is numbered accordingly, for example image.0015.rgb. However, the frame parameter on the Write node lets you change this behavior. For instance, if you have a sequence that runs from image.0500.rgb to image.1000.rgb, you may want to render it so that the frame numbering in the resulting files runs from image.0001.rgb to image.0501.rgb. You can do so via expressions, specified start frames, and constant offsets. Each method is described below." /><Url Source="../content/comp_environment/rendering/reading_files_using_write.html" Title="Using a Write Node to Read in the Rendered Image" Abstract="Using a Write Node to Read in the Rendered Image You can use a Write node to both render an image and read the rendered image back in. Because reading the output of a Write node from a file is faster than calculating its output by processing the node tree upstream, this can be particularly useful on large comps. When you have finished working on a branch of the node tree, you can insert a Write node after it, render the output, and use the same Write node to read the rendered image in. If you later need to edit the nodes upstream, simply make your changes and render the Write node again to update the image being read in." /><Url Source="../content/comp_environment/rendering/render_farms.html" Title="Render Farms" Abstract="Render Farms Nuke is supported by virtually all third-party and proprietary render-queuing software. By integrating Nuke with such a system, the render load can be distributed across all the Nuke-licensed machines on your network, whether Windows, Mac, or Linux-based." /><Url Source="../content/comp_environment/organizing_scripts/organizing_scripts.html" Title="Organizing Scripts" Abstract="Organizing Scripts As scripts grow in complexity and are worked on by several people, it becomes increasingly important to organize them in a clear and meaningful way." /><Url Source="../content/comp_environment/organizing_scripts/displaying_script_info.html" Title="Displaying Script Information" Abstract="Displaying Script Information To display script information, such as the node count, channel count, cache usage, and whether the script is in full-resolution or proxy mode, do the following:" /><Url Source="../content/comp_environment/organizing_scripts/using_script_profiling.html" Title="Using Script Profiling" Abstract="Using Script Profiling Nuke can display accurate performance timing data onscreen or output it to XML file to help you troubleshoot bottlenecks in slow scripts. When performance timing is enabled, timing information is displayed in the Node Graph, and the nodes themselves are colored according to the proportion of the total processing time spent in each one, from green (fast nodes) through to red (slow nodes)." /><Url Source="../content/comp_environment/organizing_scripts/file_name_search_replace.html" Title="File Name Search and Replace" Abstract="File Name Search and Replace With the Search and Replace function, you can quickly replace all or part of file names or file paths in any node with file or proxy controls (for example in Read and Write nodes)." /><Url Source="../content/comp_environment/organizing_scripts/grouping_nodes.html" Title="Grouping Nodes in the Node Graph" Abstract="Grouping Nodes in the Node Graph You can group nodes in the Node Graph using the Backdrop node or the Group node. The Backdrop node adds a background box behind the nodes, separating the nodes visually from the rest of the node tree. A Group node, instead, combines a set of nodes into a single node, acting as a nesting container for those nodes." /><Url Source="../content/comp_environment/organizing_scripts/grouping_nodes_backdrop.html" Title="Grouping Nodes with the Backdrop Node" Abstract="Grouping Nodes with the Backdrop Node You can use the Backdrop node to visually group nodes in the Node Graph. Inserting a Backdrop node creates a box behind the nodes. When you move the box, all the nodes that overlap the box are moved, too. By inserting several backdrop nodes, you can group the nodes in your node tree onto boxes of different colors and titles. This makes it easier to find a particular node in a large node tree, for example." /><Url Source="../content/comp_environment/organizing_scripts/grouping_nodes_group.html" Title="Grouping Nodes with the Group Node" Abstract="Grouping Nodes with the Group Node You can use the Group node to nest multiple nodes inside a single node." /><Url Source="../content/comp_environment/organizing_scripts/adding_notes_node_graph.html" Title="Adding Notes to the Node Graph" Abstract="Adding Notes to the Node Graph Using the StickyNote node, you can add notes to the Node Graph. The notes can be any text or HTML mark-up. Usually, they are made as annotations to the elements in the node tree." /><Url Source="../content/comp_environment/organizing_scripts/using_precomp_node.html" Title="Using the Precomp Node" Abstract="Using the Precomp Node The Precomp node is like a Group node, but its content is stored in an independent .nk file. This allows you to save a subset of the node tree as a separate .nk script, render the output of this saved script, and read the rendered output back into the main comp as a single image input." /><Url Source="../content/comp_environment/organizing_scripts/creating_precomp_nodes.html" Title="Creating Precomp Nodes" Abstract="Creating Precomp Nodes Whether you want to use the Precomp node to speed up rendering or to enable a collaborative workflow, the process of creating the Precomp is the same." /><Url Source="../content/comp_environment/organizing_scripts/using_precomp_rendering.html" Title="Using a Precomp Node to Speed-up Rendering" Abstract="Using a Precomp Node to Speed-up Rendering If you want to use a Precomp node to speed up rendering, you need to have the Precomp node read in the output of the precomp script." /><Url Source="../content/comp_environment/organizing_scripts/precomp_revisions.html" Title="Precomp Revisions" Abstract="Precomp Revisions The following describes how to open, edit, and reload a precomp script. To View and Edit a Precomp Script" /><Url Source="../content/comp_environment/organizing_scripts/collaborative_work_flow.html" Title="Collaborative Workflow Example" Abstract="Collaborative Workflow Example In this example, a compositor is responsible for the main comp that is delivered to the client. A lighting TD is responsible for providing a multi-layered CG render for use in the main comp. The following describes how the compositor and lighting TD could use the Precomp node to enable a collaborative workflow." /><Url Source="../content/comp_environment/configuring_nuke/configuring_nuke.html" Title="Configuring Nuke" Abstract="Configuring Nuke This chapter shows visual effects supervisors how to configure Nuke for multiple artists, prior to the start of a project." /><Url Source="../content/comp_environment/configuring_nuke/what_is_terminal.html" Title="What Is a Terminal and How Do I Use One?" Abstract="What Is a Terminal and How Do I Use One? Many tasks in this chapter tell you to enter commands from a terminal or shell. This refers to a window where you can enter commands directly rather than making selections through a user interface." /><Url Source="../content/comp_environment/configuring_nuke/command_line_operations.html" Title="Command-Line Operations" Abstract="Command-Line Operations Command-line flags activate various options when you launch Nuke from a command line or Terminal, and provide additional functionality to Nuke. First let’s discuss how to launch Nuke from a shell." /><Url Source="../content/comp_environment/configuring_nuke/environment_variables.html" Title="Environment Variables" Abstract="Environment Variables Environment variables are named variables used to store a value, such as a specific file path. They can be used to influence Nuke’s behavior. For example, Nuke uses the information stored in them to define where to place certain files." /><Url Source="../content/comp_environment/configuring_nuke/setting_environment_variables.html" Title="Setting Environment Variables" Abstract="Setting Environment Variables This section teaches you how to set environment variables, check if a particular environment variable exists, and display a list of set environment variables." /><Url Source="../content/comp_environment/configuring_nuke/nuke_environment_variables.html" Title="Nuke Environment Variables" Abstract="Nuke Environment Variables The following table lists the environment variables Nuke recognizes. " /><Url Source="../content/comp_environment/configuring_nuke/loading_gizmos_plugins_scripts.html" Title="Loading Gizmos, NDK Plug-ins, and Python and Tcl Scripts" Abstract="Loading Gizmos, NDK Plug-ins, and Python and Tcl Scripts On start-up, Nuke scans various directories for files that customize the behavior of Nuke. It looks for information on favorite directories, menu options, image formats, gizmos, NDK plug-ins, Python scripts, generic Tcl scripts, and preferences." /><Url Source="../content/comp_environment/configuring_nuke/defining_nuke_plugin_path.html" Title="Defining the Nuke Plug-in Path" Abstract="Defining the Nuke Plug-in Path To define the plug-in path: On each artist’s machine, create an environment variable called NUKE_PATH." /><Url Source="../content/comp_environment/configuring_nuke/loading_ofx_plugins.html" Title="Loading OFX Plug-ins" Abstract="Loading OFX Plug-ins On start-up, Nuke scans various directories for OFX plug-ins that bring additional functionality to Nuke. Paths to these directories vary between operating systems, but here are examples of where you may find them:" /><Url Source="../content/comp_environment/configuring_nuke/common_favorite_directories.html" Title="Defining Common Favorite Directories" Abstract="Defining Common Favorite Directories Favorite directories can be accessed by artists with a single click from any Nuke file browser. Typically you would create these favorites for common directories on a project." /><Url Source="../content/comp_environment/configuring_nuke/file_paths_cross_platform.html" Title="Handling File Paths Cross Platform" Abstract="Handling File Paths Cross Platform If your facility uses Nuke on several operating systems, you may want to configure Nuke to replace the beginnings of file paths so that scripts created on one platform also work on another." /><Url Source="../content/comp_environment/configuring_nuke/setting_default_parameter_values.html" Title="Setting Default Values for Controls" Abstract="Setting Default Values for Controls You can set default values for node controls by adding a simple line of Python to your init.py file. Once a default value is set, all controls with matching names default to this value. For example, you can set default values for file format specific controls in the Read, Write or other file format-dependent nodes. To set a default value, use the following statement:" /><Url Source="../content/comp_environment/configuring_nuke/custom_menus_toolbars.html" Title="Defining Custom Menus and Toolbars" Abstract="Defining Custom Menus and Toolbars You can freely add custom menus and menu options as well as toolbars and toolbar options to the Nuke interface. Artists can then use these options to trigger gizmos and plug-ins stored in the plug-in path directory." /><Url Source="../content/comp_environment/configuring_nuke/common_image_formats.html" Title="Defining Common Image Formats" Abstract="Defining Common Image Formats You may wish to define image formats (image resolutions and corresponding pixel aspect ratios) for a given project. These appear as dropdown menus on Read and Reformat nodes." /><Url Source="../content/comp_environment/configuring_nuke/gizmos_custom_plugins_tcl.html" Title="Gizmos, Custom Plug-ins, and Generic Tcl Scripts" Abstract="Gizmos, Custom Plug-ins, and Generic Tcl Scripts Nuke allows artists and technical directors to create gizmos, which are simply groups of Nuke nodes that may be reused by other artists. These are equivalent to Shake’s macros. Studios commonly use gizmos to consistently apply certain color grading techniques, process incoming footage according to a particular conversion formula, and process outgoing footage in preparation for film printing." /><Url Source="../content/comp_environment/configuring_nuke/creating_sourcing_gizmos.html" Title="Creating and Sourcing Gizmos" Abstract="Creating and Sourcing Gizmos Using Nuke’s Export gizmo command, you can export a group of nodes and explicitly control which controls may be edited by the artists to ensure the processes within the gizmo are consistently applied." /><Url Source="../content/comp_environment/configuring_nuke/custom_plugins.html" Title="Custom Plug-ins" Abstract="Custom Plug-ins The Nuke developer’s kit (NDK) allows developers to create and compile their own binary plug-ins." /><Url Source="../content/comp_environment/configuring_nuke/sourcing_tcl_procedure.html" Title="Sourcing Tcl Procedure" Abstract="Sourcing Tcl Procedure A Nuke script or gizmo is in fact a Tcl procedure (script). Thus, Nuke also allows you to hand code generic Tcl procedures to automate Nuke in various ways." /><Url Source="../content/comp_environment/configuring_nuke/template_scripts.html" Title="Template Scripts" Abstract="Template Scripts You can create a template script that is loaded instead of an empty script every time you launch Nuke or select File &gt; New Comp or File &gt; Close Comp. This allows you to save lookup table (LUT) setups and favorite arrangements of nodes, for example." /><Url Source="../content/comp_environment/configuring_nuke/common_preferences.html" Title="Defining Common Preferences" Abstract="Defining Common Preferences The Nuke Preferences dialog (Edit &gt; Preferences) allows any user to make myriad behavior and display adjustments to the interface. However, you may wish to assign certain default preferences for artists." /><Url Source="../content/comp_environment/configuring_nuke/altering_script_luts.html" Title="Altering a Script’s Lookup Tables (LUTs)" Abstract="Altering a Script’s Lookup Tables (LUTs) A script’s lookup tables are curves that control the conversion between file or device color spaces and Nuke’s internal color space. In the Curve Editor, the x axis represents the input pixel values and the y axis the output pixel values (normalized to the 0-1 range). When applying LUTs, Nuke looks up the input value along the x axis to determine what the y value is to output." /><Url Source="../content/comp_environment/configuring_nuke/displaying_adding_editing_luts.html" Title="Displaying, Adding, Editing, and Deleting LUTs" Abstract="Displaying, Adding, Editing, and Deleting LUTs The LUT tab in the Nuke Project Settings allows you to view, add, edit, and delete LUTs." /><Url Source="../content/comp_environment/configuring_nuke/selecting_luts.html" Title="Selecting the LUT to Use" Abstract="Selecting the LUT to Use To select the LUT to use when reading or writing an image: Double-click to open the Read or Write node’s properties panel." /><Url Source="../content/comp_environment/configuring_nuke/default_lut_settings.html" Title="Default LUT Settings" Abstract="Default LUT Settings By default, Nuke uses the following LUTs in the following cases: To Change the Default LUT Settings" /><Url Source="../content/comp_environment/configuring_nuke/example_lut_cases.html" Title="Example Cases" Abstract="Example Cases Below are some examples of situations where you might need to alter the default LUTs. Working in Video Colorspace" /><Url Source="../content/comp_environment/configuring_nuke/using_ocio_config_files.html" Title="Using OCIO Config Files" Abstract="Using OCIO Config Files The Project Settings &gt; OCIO tab allows you specify an OCIO configuration file other than the one supplied with Nuke. This config file is applied across the application, but in Nuke, you can set project-wide OCIO config file using the Timeline environment Project Settings. See Timeline Environment Project Settings for more information." /><Url Source="../content/comp_environment/configuring_nuke/creating_viewer_processes.html" Title="Creating Custom Viewer Processes" Abstract="Creating Custom Viewer Processes Using look-up tables (LUTs) in Viewer Processes, you can adjust individual Viewer displays to simulate the way the image looks on output to film or some video display device. Nuke includes some predefined Viewer Process gizmos, but you can also add your own processes by registering a node or gizmo as a Viewer Process. You can register as many custom Viewer Processes as you like. If you want to use one of the 1D LUTs listed in the Project Settings in your Viewer Process, you can use the built-in gizmo called ViewerProcess_1DLUT." /><Url Source="../content/comp_environment/configuring_nuke/using_gizmo_viewer_process.html" Title="Using a Gizmo as a Custom Viewer Process" Abstract="Using a Gizmo as a Custom Viewer Process To create a custom Viewer Process, you would typically create a gizmo that includes some color correction like a look-up table (LUT) and register it as a Viewer Process using Python. (For more information on gizmos, see Gizmos, Custom Plug-ins, and Generic Tcl Scripts.)" /><Url Source="../content/comp_environment/configuring_nuke/applying_viewer_processes.html" Title="Applying Custom Viewer Processes to Images" Abstract="Applying Custom Viewer Processes to Images In the Viewer controls, you can apply a custom Viewer process to images displayed in the Viewer and open the controls for the currently active Viewer process." /><Url Source="../content/comp_environment/expressions/expressions.html" Title="Expressions" Abstract="Expressions This chapter is intended as a primer on how to apply expressions (programmatic commands) to Nuke parameters. It explains how to perform some common tasks with expressions (for example, how to link the values of one parameter to another), and concludes with a table all the functions that you may include as part of an expression." /><Url Source="../content/comp_environment/expressions/linking_expressions.html" Title="Linking Expressions" Abstract="Linking Expressions Through expressions, you can link the parameters from one node and control the values of the parameters in other nodes. When creating a linking expression, type the elements listed in the table below; remember to separate each element with a period." /><Url Source="../content/comp_environment/expressions/adding_math_functions.html" Title="Adding Mathematical Functions to Expressions" Abstract="Adding Mathematical Functions to Expressions You can incorporate mathematical functions into parameters. For example, you might negate an expression in order to invert a tracking curve which you wish to use to stabilize an element (such an expression might resemble the following: -(Transform1.translate.x))." /><Url Source="../content/comp_environment/expressions/converting_expressions.html" Title="Converting Expressions Between Scripting Languages" Abstract="Converting Expressions Between Scripting Languages Depending on where you need to use an expression, you might find that you want to, for example, convert Nuke expressions to Tcl expressions or embed Python functions in a Nuke expression. The different languages are used in different parts of Nuke:" /><Url Source="../content/comp_environment/script_editor/script_editor_python.html" Title="The Script Editor and Python " Abstract="The Script Editor and Python Nuke ships with a comprehensive Python application programming interface (API), enabling you to perform user interface actions using Python scripting. This chapter describes how you can use the Script Editor for executing Python scripts and directs you to sources of more information on Python." /><Url Source="../content/comp_environment/script_editor/using_script_editor.html" Title="Using the Script Editor" Abstract="Using the Script Editor If you're not using a third-party Python interpreter, you can type Python scripts into Nuke’s Script Editor." /><Url Source="../content/comp_environment/script_editor/automating_procedures.html" Title="Automating Procedures" Abstract="Automating Procedures Okay, so you know how to use the Script Editor to type in a sequence of Python statements that take care of a procedure. But so far, you’ve still sat by your computer typing the statements in. It’s time to automate the procedure. All you need to do is save your statements, and when you want to use them again later, import them into the Script Editor." /><Url Source="../content/comp_environment/script_editor/nuke_python_module.html" Title="Nuke as a Python Module" Abstract="Nuke as a Python Module You can import Nuke as a module into a third-party Python 2.7.3 interpreter, granting full access to the Nuke Python-API, but from within a native Python interpreter instead of Nuke." /><Url Source="../content/comp_environment/script_editor/python_getting_help.html" Title="Getting Help" Abstract="Getting Help In the scope of this user guide, it’s not possible to go into detail with Python and all the scripts available. However, there are several sources of more information that you may find useful if you need help using Python." /><Url Source="../content/timeline_environment/preface/nukestudio_timeline.html" Title="Timeline Editing in Nuke Studio" Abstract="Timeline Editing in Nuke Studio Nuke Studio's timeline is designed to provide shot management, conform, and playback capabilities for people creating visual effects and delivers visual effects sequences without resorting to other third party applications." /><Url Source="../content/timeline_environment/usingtags/using_tags.html" Title="Using Tags" Abstract="Using Tags Tags are used by Nuke Studio to quickly sort or filter clips and track items  for better visibility, organization, and export." /><Url Source="../content/timeline_environment/usingtags/using_quick_tags.html" Title="Using Quick Tags" Abstract="Using Quick Tags Quick tags allow you to add tags, depending on context, by right-clicking a selection and then choosing the type of tag to apply. If you’re tagging a large amount of media, you might find it more convenient to use the drag-and-drop methods described later on." /><Url Source="../content/timeline_environment/usingtags/tagging_using_viewer.html" Title="Tagging Using the Viewer" Abstract="Tagging Using the Viewer To apply a tag using the Viewer: Click the Tags tab, or navigate to Window &gt; Tags." /><Url Source="../content/timeline_environment/usingtags/tagging_track_items.html" Title="Tagging Track Items" Abstract="Tagging Track Items To apply a tag to a track item on the timeline: Click the Tags tab, or navigate to Window &gt; Tags." /><Url Source="../content/timeline_environment/usingtags/adding_notes_to_tags.html" Title="Adding Notes to Tags" Abstract="Adding Notes to Tags In some cases, a simple tag on a frame or clip may not contain all the information that you wish to pass on to the next stage of production. Adding notes to a tag can provide that extra detail." /><Url Source="../content/timeline_environment/usingtags/removing_tags.html" Title="Removing Tags" Abstract="Removing Tags To remove a tag from a frame or clip, click the tag and then click . You can remove all tags from a clip or selection of clips by right-clicking your selections in the bin and choosing Tags &gt; Clear Tags." /><Url Source="../content/timeline_environment/usingtags/creating_custom_tags.html" Title="Creating Custom Tags" Abstract="Creating Custom Tags You may find that you require a specific tag or suite of tags that are not provided by default. Creating custom tags allows you to really control the organization of your media, and you can even create your own tag icons." /><Url Source="../content/timeline_environment/usingtags/sharing_tags.html" Title="Sharing Custom Tags" Abstract="Sharing Custom Tags Custom tags can be shared between artists by saving them in a project in a shared network location. Shared tags are loaded at startup and appear in the Tags tab, below the standard tags that ship with Nuke Studio." /><Url Source="../content/timeline_environment/usingtags/filter_flag_tags.html" Title="Filtering and Flagging Media Using Tags" Abstract="Filtering and Flagging Media Using Tags You can search for clips containing certain tags, for example, if you wanted to find all clips that you tagged as Approved." /><Url Source="../content/timeline_environment/metadata/view_metadata.html" Title="Viewing Metadata" Abstract="Viewing Metadata Metadata is information that describes media content, separate from the clip itself, in the form of a table on the Metadata tab. Types of metadata include Duration, File Size, and the Path to the location of the source media." /><Url Source="../content/timeline_environment/metadata/filter_flag_metadata.html" Title="Filtering and Flagging Media Using Metadata" Abstract="Filtering and Flagging Media Using Metadata If searching your project using tags has not filtered your media effectively, you can search for clips containing certain metadata. For example, if you wanted to find all clips that had a particular resolution or frame rate." /><Url Source="../content/timeline_environment/conforming/conforming.html" Title="Conforming Using Nuke Studio" Abstract="Conforming Using Nuke Studio Conforming describes the process of matching up the footage from a shoot with the required edit decisions to create a meaningful timeline." /><Url Source="../content/timeline_environment/conforming/project_settings.html" Title="Timeline Environment Project Settings" Abstract="Timeline Environment Project Settings A good place to start work is by defining default Project Settings before importing sequences, particularly in the case of EDLs as they may not contain frame rate information. Project Settings only apply to the current project and override Preferences settings." /><Url Source="../content/timeline_environment/conforming/importing_sequences.html" Title="Importing Sequences" Abstract="Importing Sequences Nuke Studio allows you to import your EDL, AAF, and XML sequences in one of two ways, depending on your preferences. Either:" /><Url Source="../content/timeline_environment/conforming/conforming_sequences.html" Title="Conforming Sequences" Abstract="Conforming Sequences Once your EDL, AAF, or XML sequences are imported, it’s time to begin the conform process to match the offline track items in your spreadsheet with the source clips on disk. You can conform sequences by searching on disk or by pre-ingesting the required clips into Nuke Studio." /><Url Source="../content/timeline_environment/conforming/conforming_browser.html" Title="Conforming Using a Browser" Abstract="Conforming Using a Browser To conform a sequence using a browser: After importing a sequence, click Match Media on the spreadsheet and use the browser to locate the source folder containing the correct media." /><Url Source="../content/timeline_environment/conforming/conforming_pre_ingest.html" Title="Conforming with Pre-ingested Media" Abstract="Conforming with Pre-ingested Media To conform with pre-ingested media: If your source media has been ingested, you can drag-and-drop media from the bin view onto the Match Media button." /><Url Source="../content/timeline_environment/conforming/about_spreadsheet.html" Title="About the Media Spreadsheet" Abstract="About the Media Spreadsheet All events in a sequence are displayed in an easy to read format in the spreadsheet including status, the track it resides on, length, and the source file location." /><Url Source="../content/timeline_environment/conforming/adjusting_timecodes.html" Title="Adjusting Timecodes" Abstract="Adjusting Timecodes You can easily adjust single or multiple event timecodes: Select the invalid entry or entries in the spreadsheet." /><Url Source="../content/timeline_environment/conforming/renaming_track_items.html" Title="Renaming Shots on the Timeline" Abstract="Renaming Shots on the Timeline Once you’ve conformed your edit, you may want to rename track items on the timeline sequentially for clarity." /><Url Source="../content/timeline_environment/conforming/saving_loading.html" Title="Saving and Loading Projects" Abstract="Saving and Loading Projects You can save your work in a project using the .hrox file extension. Projects can contain .nk scripts in the form of track items added by using Create Comp. SeeCreate Comp  for more information." /><Url Source="../content/timeline_environment/conforming/autosaved_projects.html" Title="Autosaved Projects" Abstract="Autosaved Projects The autosave function creates a temporary project save file at 5 minute intervals, but you can adjust force project autosave after in the Preferences &gt; General dialog. See Appendix A: Preferences for more information." /><Url Source="../content/timeline_environment/stereoscopic_films/stereo_projects.html" Title="Stereoscopic Projects" Abstract="Stereoscopic Projects The title of this chapter is slightly misleading, as Nuke Studio isn’t actually limited to stereoscopic views, but rather provides multi-view support for as many views as you need. The views do not have to be stereo pairs, but since that is the most obvious application, this chapter mainly deals with stereoscopic projects." /><Url Source="../content/timeline_environment/stereoscopic_films/setting_up_stereo_views.html" Title="Setting Up Views for the Project" Abstract="Setting Up Views for the Project Before you start viewing stereoscopic images, you need to set different views for the right and the left eye in the project settings. This allows you to process the individual views separately or both views together, and see the effect of your changes on each view." /><Url Source="../content/timeline_environment/stereoscopic_films/displaying_views.html" Title="Displaying Views in the Viewer" Abstract="Displaying Views in the Viewer You can only display the views that exist in your project settings. To see a list of these views, or to add or delete views, select Project &gt; Edit Settings and go to the Views tab. For more information, see Setting Up Views for the Project." /><Url Source="../content/timeline_environment/managetimelines/managing_timelines.html" Title="Managing Timelines" Abstract="Managing Timelines Timelines contain video and audio track items that reference the source clips in your project. Once the conform process is complete, the timeline displays your clips in context and enables you make finer edits." /><Url Source="../content/timeline_environment/managetimelines/adding_tracks_timeline.html" Title="Adding Tracks to the Timeline" Abstract="Adding Tracks to the Timeline You can add empty tracks to existing timelines or import other EDL, AAF, or XML edits - effectively another sequence within the timeline." /><Url Source="../content/timeline_environment/managetimelines/adding_clips_timeline.html" Title="Adding Clips to the Timeline" Abstract="Adding Clips to the Timeline The timeline allows you to add clips by simple drag-and-drop from either the Viewer or bins. Using the Viewer restricts you to a single clip, the current clip, but you can drag as many clips as you like from bins." /><Url Source="../content/timeline_environment/managetimelines/audio_timeline.html" Title="Audio and the Timeline" Abstract="Audio and the Timeline Audio tracks on the timeline are handled in much the same way as video tracks. By default, linked audio and video tracks are edited at the same time, but you can lock either track and move them independently or hold Alt to select a single track, if required." /><Url Source="../content/timeline_environment/managetimelines/wav_track_items.html" Title="WAV Track Items" Abstract="WAV Track Items Audio can be recorded at the same time as shooting the video or it can be unrelated to the shoot, for example sound effects or music. You can add .wav clips to the timeline in two ways:" /><Url Source="../content/timeline_environment/managetimelines/audio_waveforms.html" Title="Displaying Audio Waveforms" Abstract="Displaying Audio Waveforms Visualizing an audio waveform helps synchronization with video events, and Nuke Studio displays waveforms in the timeline by default." /><Url Source="../content/timeline_environment/managetimelines/synchronising_audio.html" Title="Synchronizing Audio and Video" Abstract="Synchronizing Audio and Video Nuke Studio allows you to massage the synchronization between audio and video tracks using audio latency adjustment during playback in the Viewer, or by a default amount in the Preferences &gt; Panels &gt; Viewer (Sequence) sub-menu." /><Url Source="../content/timeline_environment/managetimelines/using_reference_media.html" Title="Using Reference Media" Abstract="Using Reference Media Importing a reference version of your timeline enables you to compare your current timeline against the reference media to avoid issues with continuity, missed frames, and so on." /><Url Source="../content/timeline_environment/managetimelines/comparing_media.html" Title="Comparing Media" Abstract="Comparing Media The Viewer A/B tools allow you to quickly compare media using the two Viewer input buffers. Select a clip, sequence, track item or track and press 1 or 2 to place your selection in the Viewer input buffers. You can also drag-and-drop items into the input buffers using the Viewer hotspots." /><Url Source="../content/timeline_environment/managetimelines/multi_format_timelines.html" Title="Viewing Multi-Format Timelines" Abstract="Viewing Multi-Format Timelines Initially, sequences have an Output Resolution applied across all video tracks on a timeline. You can apply this resolution project-wide through Project &gt; Edit Settings &gt; Sequence or to individual sequences using the timeline Sequence &gt; Output Resolution control." /><Url Source="../content/timeline_environment/managetimelines/refreshing_replacing.html" Title="Refreshing and Replacing Track Items" Abstract="Refreshing and Replacing Track Items During the post process, media inevitably changes location or form. Nuke Studio can reload or replace your media using the refresh, rescan, reconnect, and replace functions." /><Url Source="../content/timeline_environment/managetimelines/setting_soft_trims.html" Title="Setting Soft Trims" Abstract="Setting Soft Trims Soft Trims limit the handles on track items to a pre-defined amount, simulating In and Out points on the source clips, allowing you to use other timeline tools on the track items such as Slip Clip and Slide Clip." /><Url Source="../content/timeline_environment/managetimelines/enabling_track_items.html" Title="Enabling and Disabling Track Items" Abstract="Enabling and Disabling Track Items You can temporarily enable or disable tracks and track items on the timeline to selectively view your media without removing track item(s), for example if you wanted to view to lower level video tracks within a timeline." /><Url Source="../content/timeline_environment/managetimelines/adding_transitions.html" Title="Adding Transitions" Abstract="Adding Transitions Nuke Studio supports basic video and audio fade transitions as well as dissolves between track items on the same track. Transitions come in three flavors:" /><Url Source="../content/timeline_environment/managetimelines/invalid_transitions.html" Title="Invalid Transitions" Abstract="Invalid Transitions Transitions are controlled in a similar way to track items, in that you can drag-and-drop them, but with the following restrictions:" /><Url Source="../content/timeline_environment/managetimelines/retiming_clips.html" Title="Retiming Clips" Abstract="Retiming Clips In addition to transitions, Nuke Studio supports constant retimes on track items. Decreasing the speed of a track item causes frames to play more than once, whereas increasing the speed skips frames." /><Url Source="../content/timeline_environment/managetimelines/using_freeze_frames.html" Title="Using Freeze Frames" Abstract="Using Freeze Frames The freeze frame feature enables you to create track items of any length using a single frame. To achieve this, the application takes the first frame of the track item and applies a 0% retime, which is reversible by applying a 100% retime." /><Url Source="../content/timeline_environment/managetimelines/track_blending.html" Title="Blending Tracks on the Timeline" Abstract="Blending Tracks on the Timeline Nuke Studio allows you to perform simple merges between tracks in the timeline, for example overlaying a logo on a track item, without heading into the Compositing environment. Tracks that are designated as blend tracks are colored blue in the timeline for convenience, and are blended using a simple over operation, identical to Nuke's Merge node over operation." /><Url Source="../content/timeline_environment/soft_effects/soft_effects.html" Title="Soft Effects" Abstract="Soft Effects You can add soft effects to your  timeline in any of the workspaces. A soft effect is a real-time effect, processed on GPU instead of CPU." /><Url Source="../content/timeline_environment/create_comp/create_comp.html" Title="Create Comp" Abstract="Create Comp In the Timeline environment, you can choose to create a Nuke Comp of a track item to be able to open it in the Compositing environment. You can then add any necessary compositing work and render out the script." /><Url Source="../content/timeline_environment/annotations/annotations.html" Title="Annotations" Abstract="Annotations Annotations can be used as quick instructions for a compositor to implement in Nuke Studio's Compositing environment. You can add annotations to a clip, a section marked with in and out points, or a whole sequence." /><Url Source="../content/timeline_environment/editingtools/timeline_editing_tools.html" Title="Timeline Editing Tools" Abstract="Timeline Editing Tools The timeline editing tools allow you to manipulate your track items directly in the timeline using a series of modal editorial tools that complement the Multi Tool. Select the tool you need for the job and then select a new tool and continue editing." /><Url Source="../content/timeline_environment/editingtools/using_multi_tool.html" Title="Using the Multi Tool" Abstract="Using the Multi Tool Unlike the other editing tools available, the Multi Tool changes function depending on the position of your pointer in relation to the track item(s) selected." /><Url Source="../content/timeline_environment/editingtools/using_move_trim_tool.html" Title="Using the Move/Trim Tool" Abstract="Using the Move/Trim Tool The Move/Trim tool allows you to manipulate the position of a track item or its output by adding or removing handles. Activate the Move/Trim tool by clicking the tool or pressing Q twice." /><Url Source="../content/timeline_environment/editingtools/moving_track_items.html" Title="Moving Track Items" Abstract="Moving Track Items Click and drag the selected track item(s) to the required position on the timeline. A time count popup, in conjunction with the snap to edit function, helps you to reposition the track item(s) accurately." /><Url Source="../content/timeline_environment/editingtools/trimming_track_items.html" Title="Trimming Track Items" Abstract="Trimming Track Items Click-and-drag the edit point to the new position and release the mouse to complete the trim." /><Url Source="../content/timeline_environment/editingtools/using_selection_tool.html" Title="Using the Selection Tools" Abstract="Using the Selection Tools The timeline editing tools include a marquee selection tool and several context dependent track selection tools." /><Url Source="../content/timeline_environment/editingtools/using_slip_clip_tool.html" Title="Using the Slip Clip Tool" Abstract="Using the Slip Clip Tool The Slip Clip tool allows you to shift a track item’s In and Out points by the same amount and in the same direction, retaining the original duration but altering the timeline output. Activate the Slip Clip tool by clicking the tool or pressing E." /><Url Source="../content/timeline_environment/editingtools/slipping_spreadsheet.html" Title="Slipping Using the Spreadsheet View" Abstract="Slipping Using the Spreadsheet View You can slip track items using the Src In and Src Out columns of the spreadsheet:" /><Url Source="../content/timeline_environment/editingtools/using_slide_clip_tool.html" Title="Using the Slide Clip Tool" Abstract="Using the Slide Clip Tool The Slide Clip tool allows you to move a track item in relation to the item before and/or after the target item, without changing its length or timeline output. Activate the Slide Clip tool by clicking the tool or pressing E twice." /><Url Source="../content/timeline_environment/editingtools/using_roll_edit_tool.html" Title="Using the Roll Edit Tool" Abstract="Using the Roll Edit Tool The Roll Edit tool enables you to roll a single edit within the available handles, shortening one track item while lengthening the other, but keeping the overall duration the same. Activate the Roll Edit tool by clicking the tool or pressing R." /><Url Source="../content/timeline_environment/editingtools/using_retime_clip.html" Title="Using the Retime Clip Tool" Abstract="Using the Retime Clip Tool The Retime Clip tool allows you to trim a track item’s In or Out point and automatically retime the clip to fill the new track item duration. Activate the Retime Clip tool by clicking the tool or pressing R three times." /><Url Source="../content/timeline_environment/editingtools/using_razor_and_join.html" Title="Using the Razor and Join Tools" Abstract="Using the Razor and Join Tools The Razor tools allow you to cut track items in to separate parts so you can remove sections or rearrange items on the timeline. Activate Razor and Razor All by clicking the tool or pressing R." /><Url Source="../content/timeline_environment/editingtools/copying_cuts.html" Title="Copying Cuts Between Tracks" Abstract="Copying Cuts Between Tracks The Copy Cuts function allows you to quickly apply cuts from one track to other tracks on the timeline. For example, in the timeline shown, you could copy the cuts from the second video track to the Reference audio tracks." /><Url Source="../content/timeline_environment/editingtools/insert_overwrite_3point.html" Title="Insert, Overwrite, and 3-Point Editing" Abstract="Insert, Overwrite, and 3-Point Editing Insert and Overwrite edits are applied at the current playhead position by default, but the use of In and Out points in the clip Viewer and/or sequence Viewer can give you greater control over the result. 3-point editing, makes use of In and Out points in the clip Viewer and an In or Out in the sequence Viewer to control where the clip is placed on the timeline." /><Url Source="../content/timeline_environment/editingtools/inserting_clips.html" Title="Inserting Clips" Abstract="Inserting Clips By default, Insert places the entire contents of the clip Viewer into the timeline at the current playhead position, on the lowest available track. All track items downstream of the playhead are rippled to make room for the clip. No items are overwritten or removed." /><Url Source="../content/timeline_environment/editingtools/overwrite_edits.html" Title="Overwrite Edits" Abstract="Overwrite Edits Unlike inserting, Overwrite does not incorporate downstream ripple and doesn’t alter the length of your sequence. Any track items you overwrite are destroyed, though they can easily be recovered from the source clips in the bin view." /><Url Source="../content/timeline_environment/editingtools/3_point_editing.html" Title="3-Point Editing" Abstract="3-Point Editing Setting the output of a source clip and then editing the clip into a timeline at a specific point is sometimes referred to as 3-point editing. Using this method, you can insert and overwrite edits in an existing timeline or quickly construct scratch timelines from your bin clips." /><Url Source="../content/timeline_environment/versioning/versions_and_snapshots.html" Title="Versions and Snapshots" Abstract="Versions and Snapshots In addition to the regular project save and restore options, Nuke Studio can record the different states of your workflow as you progress using versions and snapshots." /><Url Source="../content/timeline_environment/versioning/using_versions.html" Title="Using Versions" Abstract="Using Versions Versions can be added to clips and track items to allow greater flexibility in your workflow. You can have as many versions as required and cycle through them quickly using keyboard shortcuts." /><Url Source="../content/timeline_environment/versioning/versions_in_bins.html" Title="Versions in Bins" Abstract="Versions in Bins Versions behave similarly in both bins and sequences, and in both cases, you first have to ingest an existing version." /><Url Source="../content/timeline_environment/versioning/versions_in_sequences.html" Title="Versions in Sequences" Abstract="Versions in Sequences As mentioned previously, versions behave similarly in both bins and sequences, but swapping versions in sequences allows you to compare results more easily." /><Url Source="../content/timeline_environment/versioning/using_snapshots.html" Title="Using Snapshots" Abstract="Using Snapshots Within a project you can save the current state of a sequence as a snapshot, including a comment or tag to describe that snapshot. You can see what snapshots exist for a sequence in the bin view and flip it back to any previously saved state." /><Url Source="../content/timeline_environment/versioning/creating_snapshots.html" Title="Creating Snapshots" Abstract="Creating Snapshots To create a snapshot for a sequence: Locate the sequence in the bin view. Right-click the sequence and select Snapshot &gt; Add Snapshot." /><Url Source="../content/timeline_environment/versioning/restoring_snapshots.html" Title="Restoring Snapshots" Abstract="Restoring Snapshots To restore a snapshot: Locate the sequence in the bin view. Right-click the sequence and select Snapshot &gt; Restore Snapshot." /><Url Source="../content/timeline_environment/exporting/round_tripping_exports.html" Title="Exporting from Nuke Studio" Abstract="Exporting from Nuke Studio This chapter deals primarily with  shot management and export functionality when you're farming out shots or sequences to other artists. It also deals with the presets, which dictate how Create Comp passes data between the Timeline environment and Compositing environments." /><Url Source="../content/timeline_environment/exporting/introduction_exports.html" Title="Introduction to the Export Dialog" Abstract="Introduction to the Export Dialog Nuke Studio uses presets and shot templates  to perform export operations, including round-tripping and EDL/XML creation. The Export dialog controls what is exported and where, and whether or not to expect versioned clips as part of a round-trip from Nuke." /><Url Source="../content/timeline_environment/exporting/using_presets.html" Title="Using Local and Project Presets" Abstract="Using Local and Project Presets Presets are containers for export preferences, such as file structure and format, and filters for tracks, tags, and frame range. Two types of Presets are available to construct commonly used export tasks:" /><Url Source="../content/timeline_environment/exporting/adding_burn_in.html" Title="Adding Burn-in Text to Exports" Abstract="Adding Burn-in Text to Exports Nuke Studio can burn-in text during the export process using a simple Nuke gizmo. The gizmo contains controls for the font style and fields denoting the position of the text. You can also add burn-in directly on  timeline using the Burn-In soft effect. See Soft Effects for more information." /><Url Source="../content/timeline_environment/exporting/adding_nuke_nodes.html" Title="Adding Additional Nodes During Export" Abstract="Adding Additional Nodes During Export Nuke Studio can include additional nodes, in any Nuke Project File or Transcode export in the Shot Template, by simply copying and pasting scripts from the Node Graph." /><Url Source="../content/comp_environment/rendering/render_farms_studio.html" Title="Using Nuke Studio's Frame Server" Abstract="Using Nuke Studio's Frame Server Although Nuke Studio is capable of rendering frames internally, running the Frame Server on an external machine can accelerate the process considerably by sharing work across a network of machines." /><Url Source="../content/timeline_environment/exporting/exporting_from_projects.html" Title="Exporting Sequences and Track Items" Abstract="Exporting Sequences and Track Items Select an entire sequence in the bin view, or track items in the timeline, and navigate to File &gt; Export..." /><Url Source="../content/timeline_environment/exporting/project_file_settings.html" Title="Nuke Project File Settings" Abstract="Nuke Project File Settings Custom shot presets can only be selected from the Project Settings if they contain a Nuke Project File and Nuke Write Node Content preset." /><Url Source="../content/timeline_environment/exporting/write_node_settings.html" Title="Nuke Write Node Settings" Abstract="Nuke Write Node Settings Custom shot presets can only be selected from the Project Settings if they contain a Nuke Project File and Nuke Write Node Content preset." /><Url Source="../content/timeline_environment/exporting/track_range_settings.html" Title="Tracks, Range, and Handles Settings" Abstract="Tracks, Range, and Handles Settings The Tracks and Range or Tracks and Handles tabs (depending on export type) in the Export dialog allow you to select the frame range or track items to export." /><Url Source="../content/timeline_environment/exporting/building_vfx_tracks.html" Title="Building VFX Tracks" Abstract="Building VFX Tracks When the compositing work is complete, the clips are ready to re-ingest. The shot template defines where the Nuke files reside, so all you need to do is instruct Nuke Studio to build Tracks From Export Structure." /><Url Source="../content/timeline_environment/exporting/transcoding.html" Title="Transcoding" Abstract="Transcoding Transcoding in Nuke Studio uses a background render process to convert one file format to another. You can transcode sequences, timeline selections, and clips from the bin view." /><Url Source="../content/timeline_environment/exporting/transcoding_shots.html" Title="Transcoding a Sequence as Shots" Abstract="Transcoding a Sequence as Shots Select the required sequence in the bin view and navigate to File &gt; Export..." /><Url Source="../content/timeline_environment/exporting/transcoding_timeline.html" Title="Transcoding Timeline Selections" Abstract="Transcoding Timeline Selections Transcoding an entire timeline can be time consuming, or even unnecessary, if all you’re looking for is a new version of a selection of track items." /><Url Source="../content/timeline_environment/exporting/transcoding_bin.html" Title="Transcoding from the Bin View" Abstract="Transcoding from the Bin View To transcode directly from the bin view: Select the bin(s) to export from the bin view." /><Url Source="../content/timeline_environment/exporting/ad_hoc_exports.html" Title="Ad Hoc Exports" Abstract="Ad Hoc Exports This section covers exports that you might not perform on a per project basis, such the EDL or XML Exporters and Copy Exporter. Exporters are available for sequences, track items, and clips as described in the following table." /><Url Source="../content/timeline_environment/exporting/exporting_edls_and_xmls.html" Title="Exporting EDLs and XMLs" Abstract="Exporting EDLs and XMLs Nuke Studio supports export to EDL and XML using very similar methods, the main difference being that EDL doesn’t support multiple video tracks in a single file whereas XML does." /><Url Source="../content/timeline_environment/exporting/using_audio_exporter.html" Title="Using the Audio Exporter" Abstract="Using the Audio Exporter The Audio Exporter allows you write audio to separate .wav files. You can extract audio from whole sequences, track items, and clips." /><Url Source="../content/timeline_environment/exporting/using_copy_exporter.html" Title="Using the Copy Exporter" Abstract="Using the Copy Exporter Copying media from various locations is very time consuming and can waste disk space. The Copy Exporter allows you to consolidate sequences containing only your project media in a named file structure using the shot template." /><Url Source="../content/timeline_environment/exporting/using_symlink_exporter.html" Title="Using the SymLink Exporter" Abstract="Using the SymLink Exporter The SymLink Exporter allows you to create symbolic links to your project media in a named file structure using the shot template." /><Url Source="../content/comp_environment/nukex/nukex_intro.html" Title="Advanced Compositing with NukeX and Nuke Studio" Abstract="Advanced Compositing with NukeX and Nuke Studio Each chapter in this section explains in detail a key feature of NukeX and Nuke Studio. For more information on the differences between the various applications, see Nuke Products." /><Url Source="../content/comp_environment/kronos_motionblur/motion_vectors_retiming_blur.html" Title="Retiming and Motion Blur" Abstract="Retiming and Motion Blur This chapter looks at creating motion vectors using VectorGenerator, retiming sequences using Kronos, and adding motion blur using MotionBlur." /><Url Source="../content/comp_environment/kronos_motionblur/vectorgenerator.html" Title="VectorGenerator" Abstract="VectorGenerator VectorGenerator allows you to produce images containing motion vector fields. A vector field for an image in a sequence has the same dimensions as the image, but contains an (x,y) offset per pixel. These offsets show how to warp a neighboring image onto the current image. Clearly, as most of the images in a sequence have two neighbors, each can have two vector fields:" /><Url Source="../content/comp_environment/kronos_motionblur/quick_start_vectorgenerator.html" Title="Quick Start" Abstract="Quick Start Here's a quick overview of the workflow: Add VectorGenerator to your node tree. See Connecting VectorGenerator below." /><Url Source="../content/comp_environment/kronos_motionblur/connecting_vectorgenerator.html" Title="Connecting VectorGenerator" Abstract="Connecting VectorGenerator To connect VectorGenerator: Select Time &gt; VectorGenerator to insert a VectorGenerator node after the sequence from which you want to generate motion vectors." /><Url Source="../content/comp_environment/kronos_motionblur/viewing_refining_results.html" Title="Viewing and Refining the Results" Abstract="Viewing and Refining the Results To view and refine the results: Select the required vector calculation type from the Method dropdown:" /><Url Source="../content/comp_environment/kronos_motionblur/kronos.html" Title="Kronos" Abstract="Kronos Kronos is NukeX’s retimer, designed to slow down or speed up footage. It works by calculating the motion in the sequence in order to generate motion vectors. These motion vectors describe how each pixel moves from frame to frame. With accurate motion vectors, it is possible to generate an output image at any point in time throughout the sequence by interpolating along the direction of the motion." /><Url Source="../content/comp_environment/kronos_motionblur/quick_start_kronos.html" Title="Quick Start" Abstract="Quick Start Here's a quick overview of the workflow: Create a node tree with Kronos. See Connecting Kronos." /><Url Source="../content/comp_environment/kronos_motionblur/connecting_kronos.html" Title="Connecting Kronos" Abstract="Connecting Kronos To connect Kronos: Select Time &gt; Kronos to insert a Kronos node after the sequence you want to retime." /><Url Source="../content/comp_environment/kronos_motionblur/retiming_sequence.html" Title="Retiming a Sequence" Abstract="Retiming a Sequence Kronos allows you to retime a sequence by speed or by frame. Speed retimes describe the retime by a percentage of full speed, either against the output or input frames. For example, the default setting Output Speed = 0.5 is equal to a 50% retime on the output frames. Frame retimes  describe the retiming in terms of ‘at frame 100 in the output clip, I want to see frame 50 of the source clip‘." /><Url Source="../content/comp_environment/kronos_motionblur/refining_results.html" Title="Refining the Results" Abstract="Refining the Results To refine the results: To have the motion vectors displayed in the Viewer, expand the Advanced control and enable Overlay Vectors. Forward motion vectors are drawn in red, and backward motion vectors in blue." /><Url Source="../content/comp_environment/kronos_motionblur/adding_motion_blur.html" Title="Adding Motion Blur" Abstract="Adding Motion Blur To add motion blur: In the Shutter controls, select a suitable Shutter Time, depending on the amount of blur you wish to add. This sets the equivalent shutter time of the retimed sequence. For example, a shutter time of 0.5 is equivalent to a 180 degree mechanical shutter, so at 24 frames per second the exposure time is 1/48th of a second." /><Url Source="../content/comp_environment/kronos_motionblur/motionblur.html" Title="MotionBlur" Abstract="MotionBlur MotionBlur adds realistic motion blur to a sequence. It uses the same techniques and technology as the motion blur found in Kronos, but presents the controls in a less complex, more user friendly way. However, if you need precise control over the motion vectors used for adding blur, or a large temporal range (that is, a very high shutter time), you should use Kronos." /><Url Source="../content/comp_environment/kronos_motionblur/quick_start_motionblur.html" Title="Quick Start" Abstract="Quick Start Here's a quick overview of the workflow: Create a node tree with MotionBlur. See Connecting MotionBlur." /><Url Source="../content/comp_environment/kronos_motionblur/connecting_motionblur.html" Title="Connecting MotionBlur" Abstract="Connecting MotionBlur To connect MotionBlur: Select Filter &gt; MotionBlur to insert a MotionBlur node after the clip you want to add motion blur to." /><Url Source="../content/comp_environment/kronos_motionblur/adjusting_motionblur_controls.html" Title="Adjusting MotionBlur Controls" Abstract="Adjusting MotionBlur Controls To adjust MotionBlur controls: Select a suitable Shutter Time, depending on the amount of blur you wish to add. This sets the equivalent shutter time of the retimed sequence. For example, a shutter time of 0.5 is equivalent to a 180 degree mechanical shutter, so at 24 frames per second the exposure time is 1/48th of a second." /><Url Source="../content/comp_environment/lens_distortion/adding_removing_lens_distortion.html" Title="Working with Lens Distortion" Abstract="Working with Lens Distortion Nuke's LensDistortion node allows you to distort or undistort an image according to a radial distortion model." /><Url Source="../content/comp_environment/lens_distortion/analyzing_distortion_image.html" Title="Calculating Lens Distortion Automatically" Abstract="Calculating Lens Distortion Automatically Image analysis estimates the lens distortion in a sequence (and sequence only, you can’t perform this analysis on a still image) automatically. It tracks features through the sequence and ﬁnds the distortion model that best describes the way the same 3D structure is projected onto different parts of the image. To analyze lens distortion automatically, do the following:" /><Url Source="../content/comp_environment/lens_distortion/analyzing_distortion_grid.html" Title="Analyzing Distortion Using a Grid" Abstract="Analyzing Distortion Using a Grid Grid analysis estimates the distortion from a checkerboard or thin line grid, for greater accuracy. As a general rule, if you have a grid you can use to calculate your lens distortion, you should use grid analysis to do this. To analyze a grid, do the following:" /><Url Source="../content/comp_environment/lens_distortion/analyzing_distortion_lines.html" Title="Analyzing Distortion Using Lines" Abstract="Analyzing Distortion Using Lines Line analysis estimates the distortion from lines drawn manually along features in the input that are known to be straight. This can be useful if you have a single image to undistort and no grid available, and can’t therefore use grid analysis or image analysis. Another case for using line analysis might be if you have a grid for your sequence but the grid analysis failed, for instance due to bad lighting. To analyze lens distortion using lines, do the following:" /><Url Source="../content/comp_environment/lens_distortion/adjusting_lensdistortion.html" Title="Adjusting LensDistortion Parameters" Abstract="Adjusting LensDistortion Parameters After you’ve estimated your lens distortion, you can view the values on the LensDistortion tab. You can also change these to apply distortion to the input directly." /><Url Source="../content/comp_environment/lens_distortion/applying_distortion_another_image.html" Title="Calculating the Distortion on One Image and Applying it to Another" Abstract="Calculating the Distortion on One Image and Applying it to Another You can use the LensDistortion node to analyze the distortion on one image or grid, and then apply that distortion to another image. Do the following:" /><Url Source="../content/comp_environment/lens_distortion/applying_lens_distortion_card.html" Title="Applying Lens Distortion to a Card Node" Abstract="Applying Lens Distortion to a Card Node You can use the calculated lens distortion values to distort an image projected onto a card in 3D. Do the following:" /><Url Source="../content/comp_environment/planartracker/tracking_planar_surfaces.html" Title="Tracking with PlanarTracker" Abstract="Tracking with PlanarTracker PlanarTracker is a powerful tool for tracking surfaces that lie on a plane in your source footage." /><Url Source="../content/comp_environment/planartracker/tracking_plane.html" Title="Tracking a Plane" Abstract="Tracking a Plane Before you can track a plane, you need to draw one using the Roto node. Drawing a Plane to Track" /><Url Source="../content/comp_environment/planartracker/reusing_track_result.html" Title="Reusing a Track Result" Abstract="Reusing a Track Result You can reuse an entire tracked plane or a single track. Reusing a Tracked Plane" /><Url Source="../content/comp_environment/planartracker/placing_image_planar_surface.html" Title="Placing an Image on the Planar Surface" Abstract="Placing an Image on the Planar Surface When you’ve tracked a planar surface on your footage, you might want to place an image on it. To place an image on the tracked planar surface, do the following:" /><Url Source="../content/comp_environment/cameratracker/camera_tracking.html" Title="Camera Tracking" Abstract="Camera Tracking Nuke’s CameraTracker node is designed to provide an integrated camera tracking or match-moving tool, which allows you to create a virtual camera whose movement matches that of your original camera. Tracking camera movement in a 2D footage enables you to add virtual 3D objects to your 2D footage." /><Url Source="../content/comp_environment/cameratracker/connecting_ct.html" Title="Connecting the CameraTracker Node" Abstract="Connecting the CameraTracker Node To connect the CameraTracker node: Read in and select the clip you want to track." /><Url Source="../content/comp_environment/cameratracker/masking.html" Title="Masking Out Regions of the Image" Abstract="Masking Out Regions of the Image Tracking works best on fixed, rigid parts of the scene so that each track can create a single, fixed 3D point. The solver uses these 3D points to work out the camera path. Moving elements and burn-ins do not have a fixed 3D point in the world and should be masked out before tracking." /><Url Source="../content/comp_environment/cameratracker/multiview_scripts.html" Title="Working with Multi-View Scripts" Abstract="Working with Multi-View Scripts CameraTracker can track and solve stereoscopic or multi-view projects in much the same way  as single view projects." /><Url Source="../content/comp_environment/cameratracker/camera_settings.html" Title="Setting Camera Parameters" Abstract="Setting Camera Parameters Camera settings relate to the physical aspects of the camera used on set. Accurate physical camera data produces a better camera track and solution." /><Url Source="../content/comp_environment/cameratracker/tracking_sequences.html" Title="Tracking in Sequence Mode" Abstract="Tracking in Sequence Mode In Sequence mode, CameraTracker tracks the footage attached to the Source input and defines a set of 2D feature tracks that correspond to fixed points in the scene." /><Url Source="../content/comp_environment/cameratracker/viewing_sequence_tracks.html" Title="Viewing Track Data" Abstract="Viewing Track Data Once tracking is complete, scrub through the timeline to examine the tracked features. The points represent the features and the vectors the track length calculated for the associated feature. Hover over a point to display its length, in frames." /><Url Source="../content/comp_environment/cameratracker/troubleshooting_sequences.html" Title="Troubleshooting Sequence Tracks" Abstract="Troubleshooting Sequence Tracks Some sequences are inevitably going to cause problems. There are a number of pre-tracking checks and post-tracking refinement controls to assist CameraTracker." /><Url Source="../content/comp_environment/cameratracker/extending_tracks.html" Title="Extending Existing Camera Tracks" Abstract="Extending Existing Camera Tracks CameraTracker allows you to extend an existing set of tracking data by adding new frames, such as when more frames become available from a shoot." /><Url Source="../content/comp_environment/cameratracker/retracking_sequences.html" Title="Retracking Partial Frame Ranges" Abstract="Retracking Partial Frame Ranges After refining your feature points, you may not need to retrack the entire sequence. You can use Update Track to analyze a specific frame range." /><Url Source="../content/comp_environment/cameratracker/tracking_stills.html" Title="Tracking in Stills Mode" Abstract="Tracking in Stills Mode In Stills mode, CameraTracker tracks the reference frames in the Source input and analyzes the input in two stages. Tracking defines the set of 2D feature tracks that correspond to fixed rigid points in the scene, then the solver calculates the camera path and projection that creates a 3D point for each reference frame." /><Url Source="../content/comp_environment/cameratracker/stills_guidelines.html" Title="Still Photography Guidelines" Abstract="Still Photography Guidelines Still tracking relies on good input to produce good tracking output, so it's vital that you capture good still photographs that CameraTracker can interpret correctly." /><Url Source="../content/comp_environment/cameratracker/tracking_properties_stills.html" Title="Tracking Still Frames" Abstract="Tracking Still Frames Before you do anything else, you need to tell CameraTracker which still frames you want it to track and how it should distribute the tracking features on each frame. Then, you can track your still frames." /><Url Source="../content/comp_environment/cameratracker/viewing_still_tracks.html" Title="Viewing Reference Frames and Track Data" Abstract="Viewing Reference Frames and Track Data Once tracking is complete, you can review how CameraTracker connected the analyzed frames:" /><Url Source="../content/comp_environment/cameratracker/disconnected_frames.html" Title="Disconnected Frame Sets" Abstract="Disconnected Frame Sets Auto-tracking stills is not perfect and may throw out some disconnected frames, most likely due to a large change in viewpoint. After tracking, set the Thumbnails control above the Viewer to All and hover over images in the thumbnail strip. Thumbnails highlighted in red were not matched with the reference frames around them and  are flagged with an error message in the Viewer." /><Url Source="../content/comp_environment/cameratracker/troubleshooting_stills.html" Title="Troubleshooting Still Tracks" Abstract="Troubleshooting Still Tracks Some stills sequences are inevitably going to cause problems. There are a number of pre-tracking checks and post-tracking refinement controls to assist CameraTracker." /><Url Source="../content/comp_environment/cameratracker/tracking_usertracks.html" Title="Working with User Tracks" Abstract="Working with User Tracks User Tracks are placed manually, rather then being automatically seeded by CameraTracker, and can be used to improve or even replace auto tracking data. They can also be used to link unmatched reference frames together when tracking stills." /><Url Source="../content/comp_environment/cameratracker/adding_usertracks.html" Title="Adding and Positioning User Tracks" Abstract="Adding and Positioning User Tracks You can add as many User Tracks as required, depending on what you intend to accomplish. For example, auto-track assist may only require one or two User Tracks, whereas manual tracking would require at least eight User Tracks." /><Url Source="../content/comp_environment/cameratracker/usertrack_methods.html" Title="User Tracking Methods" Abstract="User Tracking Methods User Tracks can be  tracked automatically or manually, extracted from auto-tracking data, and imported from a Tracker node." /><Url Source="../content/comp_environment/cameratracker/tracking_assists.html" Title="Tracking Assists" Abstract="Tracking Assists Auto-tracking data can be improved by seeding User Tracks in a sequence, as CameraTracker assumes manually placed tracks are superior to auto-tracking. Retracking after adding User Tracks forces CameraTracker to recalculate auto-tracks using more accurate data." /><Url Source="../content/comp_environment/cameratracker/manual_tracking.html" Title="Tracking a Scene Manually" Abstract="Tracking a Scene Manually Sometimes, a scene can be difficult to track automatically. For example, you might be tracking a set of still photos of a scene with a very wide baseline between images. Alternatively, you might already have 2D track data from an earlier process that you want to get a solve from. In cases like this, it can be easier to only set up and work with User Tracks as your track data." /><Url Source="../content/comp_environment/cameratracker/linking_stills.html" Title="Linking Still Reference Frames" Abstract="Linking Still Reference Frames During stills tracking, the links between reference frames can fail. This can occur for a number of reasons, such as a lack of overlap between stills. You can help CameraTracker by adding  User Tracks on features common to the frames before auto-tracking." /><Url Source="../content/comp_environment/cameratracker/3d_survey_points.html" Title="Assigning 3D Survey Points" Abstract="Assigning 3D Survey Points If you create a User Track, you can assign it as a known 3D survey point. This tells CameraTracker which points in your 2D footage go with their counterparts on your 3D model, allowing it to solve the camera to match the known 3D points and achieve the best results." /><Url Source="../content/comp_environment/cameratracker/solving_camera_position.html" Title="Solving the Camera Position" Abstract="Solving the Camera Position When you’re happy with the features that you’ve tracked, you can solve the camera position. CameraTracker uses the tracking&#xA;information to calculate the camera position and add position information to the tracked feature points in the Viewer." /><Url Source="../content/comp_environment/cameratracker/viewing_solve_data.html" Title="Viewing Solve Data" Abstract="Viewing Solve Data Once the solve data is placed in the Viewer, you can zoom in to display the points more clearly. You can control what appears in the Viewer using the Display controls on the Settings tab:" /><Url Source="../content/comp_environment/cameratracker/troubleshooting_solves.html" Title="Troubleshooting Solves" Abstract="Troubleshooting Solves CameraTracker has several troubleshooting workflows available to improve solve accuracy, but ultimately, good solves rely on good tracking data." /><Url Source="../content/comp_environment/cameratracker/updating_solves.html" Title="Updating Solves with Extended Tracking Data" Abstract="Updating Solves with Extended Tracking Data CameraTracker allows you to add more frames to an existing camera solve using updated tracking data. It is usually not possible to extend the range very far (about 10-15% of the original range), because the existing solve locks the 3D points in place, so matching new 2D tracking data to 3D points can produce high tracking errors, which CameraTracker rejects." /><Url Source="../content/comp_environment/cameratracker/adjusting_scene.html" Title="Adjusting the Scene" Abstract="Adjusting the Scene When the tracking and solving processes are complete, you can use the  solve data to align and scale the scene before adding cameras, point clouds, objects, and so on." /><Url Source="../content/comp_environment/cameratracker/setting_groundplane.html" Title="Setting the Ground Plane and Axes" Abstract="Setting the Ground Plane and Axes A solved camera has no notion of where the ground plane is in the scene, which can produce an unexpected offset and angle relative to where you'd expect the ground to be in 3D space." /><Url Source="../content/comp_environment/cameratracker/transforming_scene.html" Title="Transforming the Scene Manually" Abstract="Transforming the Scene Manually In addition to defining the ground plane, axes, and origin automatically, you can manually adjust the scene using the Scene tab's Scene Transform controls. These controls operate in exactly the same way as other transform tools in Nuke." /><Url Source="../content/comp_environment/cameratracker/creating_contraints.html" Title="Using Scene Constraints" Abstract="Using Scene Constraints Scene constraints enable you to use known distances, measured on set, to scale a scene more accurately. They are applicable to both Auto Tracks and User Tracks." /><Url Source="../content/comp_environment/cameratracker/using_solve_data.html" Title="Using Solve Data" Abstract="Using Solve Data Once your camera solve is correctly aligned, you can create animated or baked cameras, multi-view rigs, 3D scenes and point cloud, lens distortion, or cards from the camera data. See:" /><Url Source="../content/comp_environment/cameratracker/creating_cameras.html" Title="Creating Camera Nodes" Abstract="Creating Camera Nodes Using the tracking and solve data, CameraTracker can create linked or baked cameras that emulate the original camera track on set. You can create a single camera or a camera rig for multi-view projects, depending on your script." /><Url Source="../content/comp_environment/cameratracker/creating_scenes.html" Title="Creating Scenes" Abstract="Creating Scenes CameraTracker can create a ready-to-use 3D scene containing a point cloud, camera, and Scene node from the track and solve data. The Scene+ option adds LensDistortion and ScanlineRender nodes in addition to the standard scene nodes." /><Url Source="../content/comp_environment/cameratracker/creating_pointclouds.html" Title="Creating Point Clouds" Abstract="Creating Point Clouds CameraTracker can create a baked point cloud, that is, points that don't update when you make changes to the CameraTracker properties panel controls." /><Url Source="../content/comp_environment/cameratracker/creating_cards.html" Title="Creating Cards" Abstract="Creating Cards CameraTracker can automatically create a 3D card for each solved frame using the camera to project the image at that frame onto the card." /><Url Source="../content/comp_environment/cameratracker/combining_solves.html" Title="Combining Solves" Abstract="Combining Solves Sometimes, you might have multiple footage sources of the same scene or content available. For example, you might have footage from  witness cameras, or someone has taken detailed still photos of the scene. CameraTracker provides a way to solve each of your sources and then register them all in the same world. This allows you to leverage a high-quality camera track from a secondary source that is good to solve from, and use it in another source that's difficult to solve. You can also use this technique to tie detailed close-up stills to wide-angle shots." /><Url Source="../content/comp_environment/cameratracker/placing_objects_scene.html" Title="Placing Objects in the Scene" Abstract="Placing Objects in the Scene You can use the camera and point cloud to add geometry to the scene. You can add objects manually,  but placing them inside the camera’s field of vision at the desired position can be time consuming. CameraTracker provides an automatic creation function to help you achieve the results you need." /><Url Source="../content/comp_environment/cameratracker/lens_distortion.html" Title="Accounting for Lens Distortion" Abstract="Accounting for Lens Distortion By default, any CG&#160;elements you add to your 3D scene do not have lens distortion applied to them. As a result, when you combine them with your 2D footage, they can look like they weren't shot with the same camera. To fix this, you can:" /><Url Source="../content/comp_environment/cameratracker/lens_type.html" Title="About the Lens Model" Abstract="About the Lens Model Normally, you do not need to set the Lens parameters on the Output tab, as CameraTracker does this for you, but it may be helpful to know a little about the equations CameraTracker uses to account for lens distortion. There are two modes, depending on the lens type detected:" /><Url Source="../content/comp_environment/matchgrade/using_matchgrade.html" Title="Using MatchGrade" Abstract="Using MatchGrade This chapter teaches you how to use MatchGrade to automatically calculate a grade to match the colors in the Source input to the colors in the Target input." /><Url Source="../content/comp_environment/matchgrade/extracting_baked_grade.html" Title="Extracting a Baked-In Grade" Abstract="Extracting a Baked-In Grade Select Color &gt; MatchGrade to insert a MatchGrade node into your script. Do the following:" /><Url Source="../content/comp_environment/matchgrade/matching_different_clips.html" Title="Matching a Grade Between Two Different Clips" Abstract="Matching a Grade Between Two Different Clips Select Color &gt; MatchGrade to insert a MatchGrade node into your script." /><Url Source="../content/comp_environment/depthgenerator/generating_depth_maps.html" Title="Generating Depth Maps" Abstract="Generating Depth Maps You can use the DepthGenerator node in NukeX to generate a depth map from your footage. The node uses information from a tracked camera to create a channel that displays variations in depth." /><Url Source="../content/comp_environment/depthgenerator/connecting_depthgenerator.html" Title="Connecting DepthGenerator" Abstract="Connecting DepthGenerator To connect DepthGenerator: To use the DepthGenerator node, you need a tracked camera that matches your footage. If you don’t already have one, you can create one with the CameraTracker node (see Camera Tracking)." /><Url Source="../content/comp_environment/depthgenerator/selecting_output.html" Title="Selecting What to Output" Abstract="Selecting What to Output To select what to output: In the DepthGenerator properties, use Depth Output to select the type of depth map you want to generate:" /><Url Source="../content/comp_environment/depthgenerator/analyzing_depth.html" Title="Analyzing the Depth" Abstract="Analyzing the Depth To analyze the depth: Do one of the following: Use the Frame Separation control to select the offset between the current frame and the frame against which to calculate depth for your footage. For example, if your current frame is 100, and your frame separation is 2, DepthGenerator uses frame 98 and frame 102 to generate the depth map." /><Url Source="../content/comp_environment/depthgenerator/refining_results.html" Title="Refining the Results" Abstract="Refining the Results To refine the results: Adjust Depth Detail to vary the resolution of the images used to calculate the depth map. The default value of 0.5 equals half the image resolution. Lower values speed up processing and deliver a smoother result. Higher values pick up finer details, but also increase processing time." /><Url Source="../content/comp_environment/depthgenerator/using_results.html" Title="Using the Results" Abstract="Using the Results Once you are happy with the results from DepthGenerator, there are several ways you can use them in Nuke and NukeX:" /><Url Source="../content/comp_environment/point_clouds_meshes/creating_point_clouds_meshes.html" Title="Creating Dense Point Clouds" Abstract="Creating Dense Point Clouds Dense point clouds are a useful starting point for 3D modeling and can be helpful in positioning 3D objects into a scene. Using the PointCloudGenerator node, you can create a dense point cloud based on the information generated by CameraTracker and use the points to create a 3D mesh of your 2D footage." /><Url Source="../content/comp_environment/point_clouds_meshes/connecting_pointcloudgenerator.html" Title="Connecting the PointCloudGenerator Node" Abstract="Connecting the PointCloudGenerator Node To create a dense point cloud, PointCloudGenerator needs a Camera node with a solved camera path, either from CameraTracker or from a third party 3D application, and the tracked 2D footage." /><Url Source="../content/comp_environment/point_clouds_meshes/masking_regions_image.html" Title="Masking Out Regions of the Image" Abstract="Masking Out Regions of the Image If you don’t want to track all regions of your image, for example, if there are moving objects or reflections in the image, you can attach a matte to the Mask input to define image regions that should not be tracked. You can also use the source input’s alpha channel as a matte." /><Url Source="../content/comp_environment/point_clouds_meshes/setting_keyframes_sequence.html" Title="Setting Keyframes in a Sequence" Abstract="Setting Keyframes in a Sequence Keyframes represent the best frames in a sequence to perform a particular function, in this case tracking. PointCloudGenerator can analyze the sequence for you, automatically picking frames with good parallax, or you can set keyframes manually by marking the frames yourself." /><Url Source="../content/comp_environment/point_clouds_meshes/tracking_dense_point_cloud.html" Title="Tracking a Dense Point Cloud" Abstract="Tracking a Dense Point Cloud The next step towards creating a dense point cloud is to track your footage for more 3D feature points using the information from keyframes in the sequence and the solved Camera." /><Url Source="../content/comp_environment/point_clouds_meshes/filtering_your_point_cloud.html" Title="Filtering Your Point Cloud" Abstract="Filtering Your Point Cloud You can filter your point cloud by adjusting the number and quality of points it includes. NukeX filters the tracked point cloud directly, without recalculating, streamlining your workflow." /><Url Source="../content/comp_environment/point_clouds_meshes/removing_rejected_points.html" Title="Removing Rejected Points" Abstract="Removing Rejected Points Once you’ve identified and highlighted the less accurate points: Click Delete Rejected Points to automatically remove all highlighted points." /><Url Source="../content/comp_environment/point_clouds_meshes/grouping_labeling_baking_points.html" Title="Grouping, Labeling, and Baking Points" Abstract="Grouping, Labeling, and Baking Points Point clouds can be awkward to interpret, especially if the Point Separation control is set to a relatively high value. Grouping points in the cloud can help to visualize the scene, particularly when sensibly labeled and colored in the Viewer." /><Url Source="../content/comp_environment/point_clouds_meshes/creating_mesh_point_cloud.html" Title="Creating a Mesh from a Point Cloud" Abstract="Creating a Mesh from a Point Cloud PointCloudGenerator can create meshes from grouped points in the point cloud that you can use as stand-alone 3D objects, for example, in 3D modeling. You can also use these meshes to quickly project the 2D sequence onto the mesh using the Project3D node." /><Url Source="../content/comp_environment/point_clouds_meshes/adding_texture_mesh.html" Title="Adding Texture to a Mesh" Abstract="Adding Texture to a Mesh You can quickly add texture to your point cloud mesh using the Project3D node. Do the following:" /><Url Source="../content/comp_environment/point_clouds_meshes/using_poissonmesh.html" Title="Using the PoissonMesh Node" Abstract="Using the PoissonMesh Node The PoissonMesh node uses information from a dense point cloud to generate a mesh that you can further use as a 3D object, in 3D modeling for instance. The PoissonMesh node is based on the Poisson Surface Reconstruction calculation method. The original source code and paper were created by Michael Kazhdan, Matthew Bolitho and Hugues Hoppe (see http://www.cs.jhu.edu/~misha/Code/PoissonRecon/ for more information)." /><Url Source="../content/comp_environment/point_clouds_meshes/adding_texture_poissonmesh.html" Title="Adding Texture to the PoissonMesh" Abstract="Adding Texture to the PoissonMesh You can add texture to your point cloud mesh using the Project3D and ApplyMaterial nodes. Do the following:" /><Url Source="../content/comp_environment/modelbuilder/creating_3d_models.html" Title="Using ModelBuilder" Abstract="Using ModelBuilder The ModelBuilder node provides an easy way to create 3D models for 2D shots. You can build a model by creating shapes and then editing them, and align models over your 2D footage by dragging vertices to their corresponding 2D location." /><Url Source="../content/comp_environment/modelbuilder/connecting_modelbuilder.html" Title="Connecting the ModelBuilder Node" Abstract="Connecting the ModelBuilder Node To connect the ModelBuilder node: If you don’t already have a tracked camera that matches your footage, create one using the CameraTracker node (see Camera Tracking)." /><Url Source="../content/comp_environment/modelbuilder/creating_shapes.html" Title="Creating Shapes" Abstract="Creating Shapes To create shapes: Double-click on the ModelBuilder node to open its properties. Use the shape creation menu  in the ModelBuilder toolbar on the left hand side of the Viewer to select the basic 3D shape that best matches the object you are trying to model. You can select between Point, Card, Cube, Sphere, Cone, Cylinder, and Polygon (when creating a polygon, click on the Viewer to create vertices where you need them, and when you’re done, press Return)." /><Url Source="../content/comp_environment/modelbuilder/shapes_display_characteristics.html" Title="Editing Shapes’ Display Characteristics" Abstract="Editing Shapes’ Display Characteristics To edit shapes' display characteristics: If you created a lot of shapes, you may want to organize them into groups. Click the + button in the ModelBuilder properties to create a Group item and drag shapes inside it to move them into the group." /><Url Source="../content/comp_environment/modelbuilder/positioning_shapes.html" Title="Positioning Shapes" Abstract="Positioning Shapes To position shapes: If the Align Mode isn’t already active, click   in the ModelBuilder toolbar to activate it." /><Url Source="../content/comp_environment/modelbuilder/editing_shapes.html" Title="Editing Shapes" Abstract="Editing Shapes When editing ModelBuilder shapes, there are two types of editing actions: Single-step actions that happen instantly, such as extruding and merging faces." /><Url Source="../content/comp_environment/modelbuilder/editing_vertices.html" Title="Editing Vertices" Abstract="Editing Vertices To edit vertices: Activate Edit Mode by selecting  from the ModelBuilder toolbar. Set the selection mode menu to Select vertices  in the ModelBuilder toolbar and select one or more vertices on the object." /><Url Source="../content/comp_environment/modelbuilder/editing_edges.html" Title="Editing Edges and Edge Loops" Abstract="Editing Edges and Edge Loops To edit edges and edge loops: Activate Edit Mode by selecting  from the ModelBuilder toolbar." /><Url Source="../content/comp_environment/modelbuilder/editing_faces.html" Title="Editing Faces" Abstract="Editing Faces To edit faces: Activate Edit Mode by selecting  from the ModelBuilder toolbar. Set the selection mode menu to Select faces   in the ModelBuilder toolbar and select one or more faces on the object." /><Url Source="../content/comp_environment/modelbuilder/editing_objects.html" Title="Editing Objects" Abstract="Editing Objects To edit objects: Activate Edit Mode by selecting  from the ModelBuilder toolbar. Click the Select object button  in the ModelBuilder toolbar and select an object." /><Url Source="../content/comp_environment/modelbuilder/setting_initial_action_center.html" Title="Setting the Initial Action Center for Translate, Rotate, and Scale" Abstract="Setting the Initial Action Center for Translate, Rotate, and Scale When you translate, rotate, or scale vertices, edges, faces, or objects, you can change the initial position from where the action originates (that is, where the transform handles appear whenever you change the selection). To do so:" /><Url Source="../content/comp_environment/modelbuilder/applying_textures.html" Title="Applying Textures" Abstract="Applying Textures There are a couple of ways to texture your ModelBuilder models in Nuke: If your 3D model closely matches the original 2D footage, you can project the 2D footage onto the geometry. See Projecting Textures on the Shapes." /><Url Source="../content/comp_environment/modelbuilder/projecting_textures.html" Title="Projecting Textures onto Your Shapes" Abstract="Projecting Textures onto Your Shapes If your ModelBuilder model closely matches the original 2D footage, you can simply project the 2D footage onto the geometry. To do so:" /><Url Source="../content/comp_environment/modelbuilder/uv_unwrapping.html" Title="UV Unwrapping" Abstract="UV Unwrapping If you've used ModelBuilder to add  new objects over the top of your 2D footage (for example, added a new window to a building or extra bins alongside a street), you can't project your 2D footage over those objects because they were never in the original footage. Instead, you need to supply a texture from somewhere else and map it over the surface of your 3D object." /><Url Source="../content/comp_environment/modelbuilder/exporting_separate_geo_nodes.html" Title="Exporting Shapes to Separate Geometry Nodes" Abstract="Exporting Shapes to Separate Geometry Nodes If necessary, you can export shapes on your ModelBuilder model to separate geometry nodes. This allows you to operate on one part of the scene separately from the rest. You can use the geometry nodes in the same way as any other geometry nodes in Nuke." /><Url Source="../content/comp_environment/particles/creating_3d_particles.html" Title="Creating 3D Particles" Abstract="Creating 3D Particles Nuke's Particle node set is a solution for creating particles in a 3D environment. You can create things like smoke, fog, falling snow, explosions, and bubbles - the possibilities are endless. You can use the various Particle nodes for emitting, manipulating, and displaying limitless types of particles in your 3D scene." /><Url Source="../content/comp_environment/particles/connecting_particle_nodes.html" Title="Connecting Particle Nodes" Abstract="Connecting Particle Nodes In order to create particles, the minimum setup you need is the ParticleEmitter node. To connect your Particle nodes:" /><Url Source="../content/comp_environment/particles/emitting_particles.html" Title="Emitting Particles" Abstract="Emitting Particles The ParticleEmitter node is the first and only required node in a minimum particle setup. Once you’ve created a ParticleEmitter, connected it to a Viewer and clicked play on the timeline, you’ll see the default set of particles emitting (from a 3D geometry or point cloud, if you’ve connected one). You can then adjust the ParticleEmitter controls to change the way the particles appear:" /><Url Source="../content/comp_environment/particles/spawning_particles.html" Title="Spawning Particles with ParticleSpawn" Abstract="Spawning Particles with ParticleSpawn If you’re looking to have your existing particles emit even more particles, you should turn to ParticleSpawn." /><Url Source="../content/comp_environment/particles/adjusting_speed_direction.html" Title="Adjusting the Speed and Direction of the Particles" Abstract="Adjusting the Speed and Direction of the Particles Applying Gravity to Particles When applying gravity to particles, as opposed to our familiar gravity, Nuke doesn’t restrict you to a certain direction but works in any or all of the x, y and z directions. You can add gravity either by:" /><Url Source="../content/comp_environment/particles/modifying_particle_movement.html" Title="Modifying the Particles’ Movement" Abstract="Modifying the Particles’ Movement Bouncing Particles off Objects With the ParticleBounce node, you can make your particles bounce off the shape of a 3D object  instead of traveling through it. Connect this node to your other particle nodes, and adjust the ParticleBounce controls:" /><Url Source="../content/comp_environment/particles/adjusting_common_controls.html" Title="Adjusting Controls Common to Several Particle Nodes" Abstract="Adjusting Controls Common to Several Particle Nodes Many of the particle nodes share a number of controls, such as rendering and transform controls. The following covers the use of these." /><Url Source="../content/comp_environment/particles/adjusting_particles_using_curves.html" Title="Adjusting Particle Properties Using Curves" Abstract="Adjusting Particle Properties Using Curves With the ParticleCurve, you can apply a curve to particle properties (such as size or mass) to change them over time." /><Url Source="../content/comp_environment/particles/adjusting_particles_using_expressions.html" Title="Adjusting Particles Using Expressions" Abstract="Adjusting Particles Using Expressions With the ParticleExpression node, you can adjust your particles by setting expressions on their attributes. Using expressions gives you a vast variety of ways of adjusting how your particles behave. You can use a similar expression syntax as you would elsewhere in Nuke, with the exception that some functions that work in normal Nuke expressions aren't available in particle expressions and vice versa." /><Url Source="../content/comp_environment/particles/adjusting_particle_settings.html" Title="Adjusting Particle Simulation Settings" Abstract="Adjusting Particle Simulation Settings If you want to adjust how many steps of particle simulation take place per animation frame, you can use the steps per frame control in the ParticleSettings properties panel. Sometimes simulations cannot generate enough accuracy only calculating once per frame, and the resulting particle movement can appear jagged. Steps per frame forces the simulation to assess the movement of the particles multiple times per frame to enable a more analogue movement. You should enter the lowest value you can, as having an unnecessarily high value can slow down your particle calculations." /><Url Source="../content/comp_environment/particles/merging_particle_streams.html" Title="Merging Particle Streams" Abstract="Merging Particle Streams If you have more than one set of particle nodes, and you want to combine them into one stream, ParticleMerge is your node. You can merge as many particle streams as you need into a single ParticleMerge." /><Url Source="../content/comp_environment/particles/turning_particles_3d_geometry.html" Title="Turning Particles into 3D Geometry" Abstract="Turning Particles into 3D Geometry With the ParticleToGeo node, you can create 3D geometry for your particles. If you have a 3D geometry object connected anywhere in your particle stream, ParticleToGeo takes the particles and turn them into 3D objects for example for use in the Viewer or Scene node. ParticleToGeo make copies of the geometry used in the particle input to emitters, one for each instance of the particle. Use the ParticleToGeo controls:" /><Url Source="../content/comp_environment/particles/caching_particles.html" Title="Caching Particles" Abstract="Caching Particles The ParticleCache node allows you to store the geometry simulation for a particle system to file. It can then be read back in different sessions of Nuke or on different machines without the need for recalculation." /><Url Source="../content/comp_environment/prmanrender/rendering_prmanrender.html" Title="Using PrmanRender " Abstract="Using PrmanRender PrmanRender is a render node that works together with Pixar’s PhotoRealistic RenderMan® Pro Server 15.2, 16.4, or 17.0 software to give you an even better quality render result. PrmanRender is an alternative to Nuke’s ScanlineRender with additional features for rendering 3D scenes." /><Url Source="../content/comp_environment/prmanrender/setting_up_renderman.html" Title="Setting Up RenderMan Pro Server and PrmanRender" Abstract="Setting Up RenderMan Pro Server and PrmanRender In order to use the PrmanRender node, you need to have Pixar’s PhotoRealistic RenderMan Pro Server 15.2, 16.4, or 17.0 software installed and licensed on your machine (for brevity, we call it RenderMan from now on). To do this:" /><Url Source="../content/comp_environment/prmanrender/using_prmanrender.html" Title="Using The PrmanRender Node" Abstract="Using The PrmanRender Node The PrmanRender node can render nearly everything that you previously used ScanlineRender for, but with PrmanRender, you have control over aspects like shadows and reflections in your render result." /><Url Source="../content/comp_environment/prmanrender/adjusting_render_quality.html" Title="Adjusting Render Quality" Abstract="Adjusting Render Quality On the Sampling tab, you can adjust controls that affect your render quality. Adjust:" /><Url Source="../content/comp_environment/prmanrender/adjusting_shadows_dof.html" Title="Adjusting Shadows, Reflections, Refractions and Depth of Field" Abstract="Adjusting Shadows, Reflections, Refractions and Depth of Field On the PrmanRender tab, you can select if you want to render shadows, reflections, refractions and depth of field, or all of them into your result. All these effects are calculated using a retracing method that is based on drawing rays from the camera to the object. Check the box for:" /><Url Source="../content/comp_environment/prmanrender/adjusting_motion_blur.html" Title="Adjusting Motion Blur Parameters" Abstract="Adjusting Motion Blur Parameters On the Sampling tab, you can adjust controls that affect motion blur. Adjust:" /><Url Source="../content/comp_environment/prmanrender/shader_parameters.html" Title="Shader Parameters" Abstract="Shader Parameters On the Shader tab you can select which channels are affected by motion vectors and output vectors." /><Url Source="../content/comp_environment/prmanrender/rib_parameters.html" Title="RIB Parameters" Abstract="RIB Parameters With the RIB (RenderMan Interface Bytestream) parameters, you can choose to filter the information Nuke generates for RenderMan, set your arguments to it, and output your own RIB file. On the RIB tab:" /><Url Source="../content/comp_environment/prmanrender/using_modifyrib.html" Title="Using the ModifyRIB Node" Abstract="Using the ModifyRIB Node You can use the ModifyRIB node to insert RIB (RenderMan Interface Bytestream) statements into your script to modify a RIB stream before it’s passed to the PrmanRender node. This can be useful in situations where you might want to adjust the shading on the surface of an object, replace it, or perform a variety of transformations and adjustments to multiple objects in a scene. For example, to replace an object in your script with basic geometry from RenderMan:" /><Url Source="../content/comp_environment/prmanrender/using_reflection.html" Title="Using the Reflection Node" Abstract="Using the Reflection Node Reflection is the familiar physical phenomenon where an image of an object is cast back from a particular kind of surface, such as glass or water. Using PrmanRender node, you can replicate this effect in your render result of 3D objects, and using the Reflection node, you can adjust the controls for creating the reflection effect. PrmanRender uses raytracing to create this effect and you can use the Reflection node to adjust the result. Without the PrmanRender node and RenderMan software though, the Reflection node has no effect." /><Url Source="../content/comp_environment/prmanrender/using_refraction.html" Title="Using the Refraction Node" Abstract="Using the Refraction Node Refraction is the familiar physical phenomenon of light traveling differently through different materials and thus reflecting differently off objects behind that material. For example, if you have a glass of water with a straw in it, the part of the straw that’s not in water appears to be in a different angle to the part which is in the water. This is due to water bending the light waves. PrmanRender uses raytracing to create this effect and you can use the Refraction node to adjust the result. Without the PrmanRender node and RenderMan software though, the Refraction node has no effect." /><Url Source="../content/furnacecore/deflicker2.html" Title="Using F_DeFlicker2" Abstract="Using F_DeFlicker2 When working in film, you sometimes have to deal with shots that have a luminance flicker. This chapter concentrates on removing flicker using F_DeFlicker2." /><Url Source="../content/furnacecore/deflicker2_quick_start.html" Title="Quick Start" Abstract="Quick Start To remove flicker from a sequence: Select Image &gt; Read to load the sequence you want to remove flicker from." /><Url Source="../content/furnacecore/deflicker2_parameters.html" Title="Parameters" Abstract="Parameters The parameters for F_DeFlicker2 are described below. DeFlicker Amount - Use this to reduce flicker without removing it entirely; smaller values mean more will be left behind." /><Url Source="../content/furnacecore/regrain.html" Title="Using F_ReGrain" Abstract="Using F_ReGrain This chapter looks at adding grain to sequences using F_ReGrain. Introduction F_ReGrain is used to add grain to a sequence. It has been designed to sample an area of grain from one image and then to generate unlimited amounts of this grain with exactly the same statistics as the original. This new grain can then be applied to another image." /><Url Source="../content/furnacecore/regrain_quick_start.html" Title="Quick Start" Abstract="Quick Start You can sample grain from an image and apply it to another (see Adding Sampled Grain) or select from a variety of pre-sampled, standard grain types (see Using Pre-Sampled, Standard Grain Types)." /><Url Source="../content/furnacecore/adding_sampled_grain.html" Title="Adding Sampled Grain" Abstract="Adding Sampled Grain To add grain to a sequence, do the following: Select Image &gt; Read to load the sequence you want to add grain to. Then, load the image you want to sample grain from." /><Url Source="../content/furnacecore/using_standard_grain_types.html" Title="Using Pre-Sampled, Standard Grain Types" Abstract="Using Pre-Sampled, Standard Grain Types If you don’t have an image to sample grain from, you can also select from a variety of pre-sampled, standard grain types. Do the following:" /><Url Source="../content/furnacecore/response.html" Title="Response" Abstract="Response In its default setting, F_ReGrain adds the same amount of grain over the whole image. However, the amount of grain on an image is normally a function of luminance. Various parameters in the Grain Response group allow you to adjust how the amount of grain added varies with luminance:" /><Url Source="../content/furnacecore/checking_result.html" Title="Checking the Result" Abstract="Checking the Result To test that the new grain is the same as the old grain, set Output to Grain Plate." /><Url Source="../content/furnacecore/proxy_resolutions.html" Title="Proxy Resolutions" Abstract="Proxy Resolutions Grain manipulation at proxy resolution should be avoided as the results are unreliable. The grain selection area may be too small at proxy resolution to give a good result, and making this area larger may drag in unwanted detail from the image. If you try to use F_ReGrain at proxy resolution, we simply pass the image through untouched and issue the following warning:" /><Url Source="../content/furnacecore/regrain_parameters.html" Title="Parameters" Abstract="Parameters The parameters for this plug-in are described below: Grain Type - Selects whether the grain is sampled from the Grain image (From Grain Clip) or from a set of standard stocks." /><Url Source="../content/furnacecore/regrain_color_space.html" Title="Color Space in FurnaceCore Plug-ins" Abstract="Color Space in FurnaceCore Plug-ins Some of the algorithms in the FurnaceCore tool set are sensitive to the color space of the source footage. If the footage is not in the expected color space, you may get poor results from some of the plug-ins." /><Url Source="../content/furnacecore/wireremoval.html" Title="Using F_WireRemoval " Abstract="Using F_WireRemoval This chapter looks at the removal of wires from images using F_WireRemoval. Introduction" /><Url Source="../content/furnacecore/background.html" Title="Background" Abstract="Background Clean Plates The use of clean plates in wire removal is very common and gives good results in certain situations." /><Url Source="../content/furnacecore/reconstruction_methods.html" Title="Reconstruction Methods" Abstract="Reconstruction Methods Our four reconstruction methods are: Spatial Temporal With Static Scene Temporal With Moving Scene" /><Url Source="../content/furnacecore/tracker.html" Title="Tracker" Abstract="Tracker F_WireRemoval incorporates a tracker which can automatically track a moving wire through a clip. This tracker has its own control panel, which will float inside the NukeX viewer if you have checked Show On Screen Controls in the WireRemoval controls. Below is a screenshot that illustrates this." /><Url Source="../content/furnacecore/wireremoval_quick_start.html" Title="Quick Start" Abstract="Quick Start To remove a wire from an image sequence, do the following: Select Image &gt; Read to load the clip that needs a wire removed." /><Url Source="../content/furnacecore/positioning_wire_tool.html" Title="Positioning the On-Screen Wire Tool" Abstract="Positioning the On-Screen Wire Tool To position the on-screen wire tool, do the following: In the F_WireRemoval controls, set Output to Source. This way, you will be able to see the wire you’re trying to remove but won’t have to wait for F_WireRemoval to repair the wire every time you change wire tool’s position." /><Url Source="../content/furnacecore/tracking.html" Title="Tracking" Abstract="Tracking F_WireRemoval incorporates a tracker that tracks the region to be repaired through the image sequence." /><Url Source="../content/furnacecore/user_and_track_keyframes.html" Title="User Keyframes and Track Keyframes" Abstract="User Keyframes and Track Keyframes User keyframes are keyframes you set manually. When a user keyframe has been set on the current frame, this is indicated by a red key that appears on the on-screen wire tool. Track keyframes are keyframes set by F_WireRemoval’s tracker." /><Url Source="../content/furnacecore/indicators_wire_tool.html" Title="Indicators on the On-Screen Wire Tool" Abstract="Indicators on the On-Screen Wire Tool You may see the following indicators appear on the on-screen wire tool:" /><Url Source="../content/furnacecore/tracker_controls.html" Title="Tracker Controls" Abstract="Tracker Controls The following controls appear in the on-screen tracker panel that you can display in the Viewer by checking Show On Screen Controls in the WireRemoval properties." /><Url Source="../content/furnacecore/wireremoval_parameters.html" Title="Parameters " Abstract="Parameters The parameters for this plug-in are described below. Tracker buttons - most of the on-screen tracker panel buttons also appear here. For more information, see Tracker Controls on page 1." /><Url Source="../content/furnacecore/global_motion_estimation.html" Title="Global Motion Estimation" Abstract="Global Motion Estimation FurnaceCore has three effects based on global motion estimation (GME). Introduction" /><Url Source="../content/furnacecore/what_is_gme.html" Title="What is Global Motion Estimation?" Abstract="What is Global Motion Estimation? Global motion estimation (GME) is a technique that attempts to map one image onto another with a simple four-corner pin. This differs from local motion estimation (LME), which attempts to find where each individual pixel in the image is in the other image. GME is much cheaper to compute than LME, but gives you less information about the image. Nevertheless, it is still very powerful for a variety of applications." /><Url Source="../content/furnacecore/analyzing_gme_effects.html" Title="The Analyzing Global Motion Estimation Effects" Abstract="The Analyzing Global Motion Estimation Effects F_Align and F_Steadiness work in a similar way, which is distinct from the way F_RigRemoval works. These two effects calculate a four-corner pin for each frame and save it into the corner pin parameters. These pins are then used during the render to move the source image." /><Url Source="../content/furnacecore/gme_controls.html" Title="Controls" Abstract="Controls The controls common to all GME plug-ins are described below. They are grouped into two sections:" /><Url Source="../content/furnacecore/parameters_analysis.html" Title="Parameters That Affect Analysis" Abstract="Parameters That Affect Analysis The following parameters affect the analysis of the four-corner pin. Analyse - This is a push button which triggers an analysis of the input clips and calculate a corner pin. Interrupting the analysis does not delete the corner pin keys that have already been calculated." /><Url Source="../content/furnacecore/parameters_rendering.html" Title="Parameters That Affect Rendering" Abstract="Parameters That Affect Rendering These following parameters control how a GME effect renders the four-corner pin. Some of them are set during the analysis pass." /><Url Source="../content/furnacecore/widgets.html" Title="Widgets" Abstract="Widgets All the Analyzing GME effects have two on-screen widgets: one to provide feedback and one to set up the analysis region." /><Url Source="../content/furnacecore/align.html" Title="Using F_Align" Abstract="Using F_Align This chapter looks at how to use F_Align to register (line up) two shots that are of the same scene, but have slightly different camera motion and foreground objects. This can be useful, for example, for doubling up the crowd size by lining up and comping together two shots of the same scene, or locking your freshly generated clean plate to the original." /><Url Source="../content/furnacecore/align_quick_start.html" Title="Quick Start " Abstract="Quick Start This section gives a very brief outline of how to use the plug-in. It covers both analyzing using the Analyse button (see Analyzing with the Analyse button) and analyzing on the fly (see Analyzing On The Fly)." /><Url Source="../content/furnacecore/analyzing_button.html" Title="Analyzing with the Analyse button" Abstract="Analyzing with the Analyse button To align two shots and store the results as keyframed parameters, do the following:" /><Url Source="../content/furnacecore/analyzing_on_the_fly.html" Title="Analyzing On The Fly" Abstract="Analyzing On The Fly To align two shots and calculate the alignment on the fly, do the following: Find two shots that are of the same scene, but have slightly different camera motion and foreground objects. Select Image &gt; Read to load both these shots." /><Url Source="../content/furnacecore/align_parameters.html" Title="Parameters" Abstract="Parameters The parameters for this plug-in are described below. Analyse - This is a push button which will trigger an analysis of the input clips and calculate a corner pin. Interrupting the analysis will not delete the corner pin keys that have already been calculated." /><Url Source="../content/furnacecore/rigremoval.html" Title="Using F_RigRemoval" Abstract="Using F_RigRemoval This chapter looks at the removal of unwanted objects (rigs) from image sequences without accurate rotoscoping or keying to produce a clean plate." /><Url Source="../content/furnacecore/rigremoval_quick_start.html" Title="Quick Start " Abstract="Quick Start To remove an unwanted object from an image sequence, do the following: Select Image &gt; Read to load the sequence with an unwanted object." /><Url Source="../content/furnacecore/occlusions.html" Title="Occlusions" Abstract="Occlusions The algorithm used in F_RigRemoval is unable to differentiate between multiple foreground objects. If there is another foreground object in the sequence that moves through the background region that is being used in the repair, this second foreground object will also be cut up and used, resulting in an incorrect repair. To try and assist in these situations, it is possible to mark regions of the image as not to be used for repair by setting their alpha value to mid gray. This will ensure that spurious bits of other foreground objects do not appear in the repair." /><Url Source="../content/furnacecore/rigremoval_parameters.html" Title="Parameters" Abstract="Parameters The parameters for this plug-in are described below. Rig&#160;Region - Defines the area to repair." /><Url Source="../content/furnacecore/steadiness.html" Title="Using F_Steadiness" Abstract="Using F_Steadiness This chapter looks at how to stabilize a shot using F_Steadiness. Introduction F_Steadiness uses Global Motion Estimation (GME) to calculate a four- corner pin, so that camera motion within a single shot can be smoothed out over a range of frames or removed by locking to a specific frame." /><Url Source="../content/furnacecore/steadiness_quick_start.html" Title="Quick Start " Abstract="Quick Start This section gives a very brief outline of how to use the plug-in. See: Smoothing Out Camera Motion, and" /><Url Source="../content/furnacecore/smoothing_camera_motion.html" Title="Smoothing Out Camera Motion " Abstract="Smoothing Out Camera Motion To keep the overall camera motion but to smooth out sharp bumps and kicks, do the following:" /><Url Source="../content/furnacecore/locking_frame.html" Title="Locking To A Frame " Abstract="Locking To A Frame To completely remove camera motion from a sequence, do the following: Find a shot that has camera shake but where all frames share scene information and select Image &gt; Read to load it." /><Url Source="../content/furnacecore/steadiness_parameters.html" Title="Parameters" Abstract="Parameters The parameters for this plug-in are described below. Analyse - This is a push button which will trigger an analysis of the input clip and calculate a corner pin. Interrupting the analysis will not delete the corner pin keys that have already been calculated." /><Url Source="../content/comp_environment/blinkscript/image_processing_blink.html" Title="Using the BlinkScript Node" Abstract="Using the BlinkScript Node The BlinkScript node runs the The Foundry's Blink framework enabling you to write your code once and run it on any supported device. This is achieved through code translation, in which  the Blink code is turned  into specific code for each target device.  Code is generated and compiled on-the-fly, allowing you to switch between devices at will." /><Url Source="../content/comp_environment/blinkscript/quickstart.html" Title="Quick Start" Abstract="Quick Start To get started with BlinkScript: Connect the BlinkScript node to your sequence or image. See Connecting the BlinkScript Node for more information." /><Url Source="../content/comp_environment/blinkscript/connecting_blink.html" Title="Connecting the BlinkScript Node" Abstract="Connecting the BlinkScript Node Select Other &gt; BlinkScript to create a BlinkScript node in the Node Graph." /><Url Source="../content/comp_environment/blinkscript/load_edit_save.html" Title="Loading, Editing, and Saving Kernels" Abstract="Loading, Editing, and Saving Kernels Kernel management is taken care of on the first tab of the BlinkScript properties panel. Double-click the BlinkScript node in the Node Graph to display its properties." /><Url Source="../content/comp_environment/blinkscript/loading_kernels.html" Title="Loading Kernels" Abstract="Loading Kernels Enter the file-path in the Kernel File field or click the folder icon to browse to the kernel's location." /><Url Source="../content/comp_environment/blinkscript/editing_kernels.html" Title="Editing Kernels" Abstract="Editing Kernels You can edit existing kernels or write your own from scratch by clicking Clear and entering code in the Kernel Source field. Bear in mind that you won't see any results in the Viewer until you click Recompile." /><Url Source="../content/comp_environment/blinkscript/saving_kernels.html" Title="Saving Kernels" Abstract="Saving Kernels Enter the file path in the Kernel File field or click the folder icon to browse to the intended location." /><Url Source="../content/comp_environment/blinkscript/setting_parameters.html" Title="Setting Kernel Parameters" Abstract="Setting Kernel Parameters Some BlinkScript controls are used by all kernels. Rather than write these individually in each instance, the BlinkScript properties panel includes Kernel Parameters and Settings tabs, providing easy access to the standard kernel controls." /><Url Source="../content/comp_environment/blinkscript/cpu_gpu.html" Title="GPU&#160;or CPU?" Abstract="GPU&#160;or CPU? The read-only Local GPU field displays the graphics card installed locally, if there is one available. You can toggle the GPU on and off using the Use GPU if available control. If you have multiple GPUs available, select the required device using the Preferences &gt; Performance &gt; Hardware &gt; default blink device dropdown." /><Url Source="../content/comp_environment/blinkscript/specify_output_format.html" Title="Specifying the Output Format" Abstract="Specifying the Output Format BlinkScript's output defaults to the union of all its inputs, but you can specify a different output format by enabling Specify output format and selecting the required ratio from the format dropdown." /><Url Source="../content/comp_environment/blinkscript/performance_settings.html" Title="Changing Performance Settings" Abstract="Changing Performance Settings The performance controls on the Settings tab are common to all Blink kernels and don't affect the output, but can improve the processing speed:" /><Url Source="../content/comp_environment/blinkscript/publishing.html" Title="Publishing and Protecting Your Kernels" Abstract="Publishing and Protecting Your Kernels When you're happy with your kernel, you can publish it for use elsewhere in the script or in an entirely separate Nuke script. Published kernels are wrapped in a Group node, so you can save them as gizmos if required." /><Url Source="../content/comp_environment/blinkscript/limitations_issues.html" Title="Limitations and Known Issues" Abstract="Limitations and Known Issues RGBA Only Processing is currently limited to the RGBA channels only. To work with other channels, use a Shuffle node to shuffle them into RGBA before connecting to the BlinkScript node." /><Url Source="../content/reference_guide/preface/reference_guide.html" Title="Reference Guide" Abstract="Reference Guide About This Reference Guide This manual is intended as a reference for all the parameters within each node in Nuke. It does not give you any instructions on using Nuke. For details on installing and using Nuke, refer to Installation and Licensing." /><Url Source="../content/reference_guide/image_nodes/image_nodes.html" Title="Image Nodes" Abstract="Image Nodes Image nodes deal with loading, viewing, and rendering image sequences as well as creating built-in Nuke elements, such as checkerboards and color wheels." /><Url Source="../content/reference_guide/image_nodes/checkerboard.html" Title="CheckerBoard" Abstract="CheckerBoard Generates a checkerboard image that you can use as a placeholder for a texture or background." /><Url Source="../content/reference_guide/image_nodes/colorbars.html" Title="ColorBars" Abstract="ColorBars Generates a Society of Motion Picture and Television Engineers (SMPTE) color bars test pattern, useful for color management." /><Url Source="../content/reference_guide/image_nodes/colorwheel.html" Title="ColorWheel" Abstract="ColorWheel Generates a color wheel image. " /><Url Source="../content/reference_guide/image_nodes/constant.html" Title="Constant" Abstract="Constant Generates an image where every pixel is the same color. This includes pixels outside the image area as well as inside it." /><Url Source="../content/reference_guide/image_nodes/curvetool.html" Title="CurveTool" Abstract="CurveTool You can use this node to analyze and track the following aspects of the input sequence: the size and position of black areas in the sequence" /><Url Source="../content/reference_guide/image_nodes/read.html" Title="Read" Abstract="Read This node loads images from disk, using the native resolution and the frame range for the sequence. It converts all imported sequences to Nuke’s native 32-bit linear RGB colorspace." /><Url Source="../content/reference_guide/image_nodes/udim_import.html" Title="UDIM Import" Abstract="UDIM Import UDIM Import lets you import a set of texture patches that follow the UDIM numbering scheme and quickly apply them to the surface of a 3D object. Clicking on UDIM Import opens the standard Read File(s) file browser. Browsing to, and selecting, a sequence containing valid UDIM patches opens the UDIM Import dialog. The UDIM Import dialog lists all the UDIM patches in a sequence and provides some options for managing them. If you select a file that doesn’t contain a valid UDIM number, a dialog displays explaining the problem." /><Url Source="../content/reference_guide/image_nodes/viewer.html" Title="Viewer" Abstract="Viewer The Viewer node displays the render output of any connected process nodes in the Viewer panel. It doesn’t alter data in any way, but simply allows you to view the effect of any changes you make upstream." /><Url Source="../content/reference_guide/image_nodes/write.html" Title="Write" Abstract="Write This node renders the result of all upstream nodes and saves the result to disk. You would usually place one Write node at the bottom of the compositing tree to render the final output. However, Write nodes have both input and output connectors, so you can embed them anywhere in the compositing tree." /><Url Source="../content/reference_guide/draw_nodes/draw_nodes.html" Title="Draw Nodes" Abstract="Draw Nodes Draw nodes contain Roto shapes, paint tools, film grain, fills, lens flares, sparkles, and other vector-based image tools." /><Url Source="../content/reference_guide/draw_nodes/dither.html" Title="Dither" Abstract="Dither Dither adds random noise to an image to hide color quantization effects. Color quantization is a reduction in the number of colors used in the image, and can occur, for example, if the image has been stored into an 8-bit file without error diffusion. In a dithered image, colors that are not available are approximated by a diffusion of colored pixels from within the available palette. The human eye perceives the diffusion as a mixture of the colors within it. This produces an impression of a larger number of colors and eliminates banding artifacts." /><Url Source="../content/reference_guide/draw_nodes/dustbust.html" Title="DustBust" Abstract="DustBust DustBust allows you to remove dirt and scratches from scanned images by painting over them with pixels from another frame or another part of the same frame. It clones multiple areas from a source to a destination based on dust points you create by Ctrl/Cmd+clicking in the Viewer. The source position can be different for each dust point." /><Url Source="../content/reference_guide/draw_nodes/flare.html" Title="Flare" Abstract="Flare This node simulates lens flares that are created by reflections between lenses inside a film or video camera when the camera is pointed towards a bright light source, such as the sun. Lens flares are typically added to compositions to create a sense of realism, implying that the image is an un-edited shot of a real life scene." /><Url Source="../content/reference_guide/draw_nodes/glint.html" Title="Glint" Abstract="Glint With the Glint node, you can create star-shaped rays around all the bright points in an image. " /><Url Source="../content/reference_guide/draw_nodes/grain.html" Title="Grain" Abstract="Grain The Grain node lets you add synthetic grain (rather than grain derived from actual film stock) to an image. This helps you ensure that all of the elements in your composite, including those which were digitally generated, look like they were shot on the same film stock." /><Url Source="../content/reference_guide/draw_nodes/grid.html" Title="Grid" Abstract="Grid This node creates a grid of horizontal and vertical lines on top of the input image. " /><Url Source="../content/reference_guide/draw_nodes/lightwrap.html" Title="LightWrap" Abstract="LightWrap LightWrap can help composite objects into a very bright background by ’wrapping’ or spilling light from the background onto the foreground object. The node creates a reflection of light around the edges of your foreground object by blending in whatever is in the background." /><Url Source="../content/reference_guide/draw_nodes/markerremoval.html" Title="MarkerRemoval" Abstract="MarkerRemoval MarkerRemoval uses roto shapes to mask an area of the footage that you don’t want to appear in the final result, typically small areas like tracking markers. Nuke automatically paints the masked area with suitable pixels sampled from the background plate." /><Url Source="../content/reference_guide/draw_nodes/noise.html" Title="Noise" Abstract="Noise Adds various types of seemingly random noise to the input image, all based on the Perlin noise function." /><Url Source="../content/reference_guide/draw_nodes/radial.html" Title="Radial" Abstract="Radial Generates a radial gradation ramp. " /><Url Source="../content/reference_guide/draw_nodes/ramp.html" Title="Ramp" Abstract="Ramp Generates a gradation between two defined edges. This node is included for backward compatibility - other Draw nodes, such as Rectangle, have their own Ramp controls." /><Url Source="../content/reference_guide/draw_nodes/rectangle.html" Title="Rectangle" Abstract="Rectangle Generates a rectangle in a solid color on top of the input image. " /><Url Source="../content/reference_guide/draw_nodes/roto.html" Title="Roto" Abstract="Roto The Roto node is an optimal choice if you’re doing rotoscoping only - it allows you to create and edit Bezier and B-spline shapes." /><Url Source="../content/reference_guide/draw_nodes/rotopaint.html" Title="RotoPaint" Abstract="RotoPaint RotoPaint is a vector-based node for help with tasks like rotoscoping, rig removal, garbage matting and dustbusting. You can draw Bezier and B-Spline shapes with individual and layer group attributes, including per-point and global feather, motion blur, blending modes and individual or hierarchical 2D transformations." /><Url Source="../content/reference_guide/draw_nodes/scannedgrain.html" Title="ScannedGrain" Abstract="ScannedGrain Applies actual scans of film grain to replicate the grain of the film stock. Frames are selected from a loop of scanned film grain and applied to the input image. This allows you to add grain to CG creations to match the original plate or ’age’ footage artificially." /><Url Source="../content/reference_guide/draw_nodes/sparkles.html" Title="Sparkles" Abstract="Sparkles Creates customizable rays or sparkles from a central position indicator in the Viewer. " /><Url Source="../content/reference_guide/draw_nodes/text.html" Title="Text" Abstract="Text This node lets you add text overlays on your images. You can simply type in the text you want to have displayed or use Tcl expressions or Tcl variables to create a text overlay. Text overlays can also be animated using animation layers in the Groups tab, so that their properties (such as position, size, and color) change over time. These features make the Text node useful, for example, for creating slates or scrolling credits." /><Url Source="../content/reference_guide/time_nodes/time_nodes.html" Title="Time Nodes" Abstract="Time Nodes Time nodes deal with distorting time (that is, slowing down, speeding up, or reversing clips), applying motion blur, and performing editorial operations like slips, cuts, splices, and freeze frames." /><Url Source="../content/reference_guide/time_nodes/add_32_pulldown.html" Title="Add 3:2 pulldown" Abstract="Add 3:2 pulldown Adds 3:2 pulldown to the input footage. 3:2 pulldown is a process of converting 24 frames per second (fps) film to 29.97 fps interlaced video. In this process, the film is first slowed down 0.1% to match the speed difference between 29.97 fps and 30 fps. Then, film frames are distributed across video fields in a repeating 3:2 pattern in order to make 24 film frames fill the space of 30 video frames per second:" /><Url Source="../content/reference_guide/time_nodes/appendclip.html" Title="AppendClip" Abstract="AppendClip AppendClip lets you splice clips. Splicing refers to joining clips head-to-tail, thus allowing action to flow from one shot to the next. When you splice clips, you have options for:" /><Url Source="../content/reference_guide/time_nodes/frameblend.html" Title="FrameBlend" Abstract="FrameBlend The FrameBlend node interpolates frames by generating an additive composite of the frames that precede and follow it, rather than creating mere copies between the existing frames. This method creates “ghosting” around all fast moving features. The results may look odd when viewed as part of a still frame, but will contribute to smoother motion during actual playback." /><Url Source="../content/reference_guide/time_nodes/framehold.html" Title="FrameHold" Abstract="FrameHold Lets you either: pick one frame and use that frame at every frame of the input clip, or use every certain number of frames of the input clip (for example, every fifth frame)." /><Url Source="../content/reference_guide/time_nodes/framerange.html" Title="FrameRange" Abstract="FrameRange Lets you set a frame range for a clip. This controls which frames are sent to the flipbook and displayed in the Viewer when the frame range source dropdown menu is set to Input." /><Url Source="../content/reference_guide/time_nodes/kronos.html" Title="Kronos" Abstract="Kronos Kronos (NukeX and  Nuke Studio only) is a retimer, designed to slow down or speed up footage. It works by calculating the motion in the sequence in order to generate motion vectors, which in turn, enables you to generate an output image at any point in time throughout the sequence by interpolating along the direction of the motion. Kronos also contains a number of controls to allow you to trade off render time versus accuracy of vectors." /><Url Source="../content/reference_guide/time_nodes/notimeblur.html" Title="NoTimeBlur" Abstract="NoTimeBlur NoTimeBlur prevents nodes downstream from asking for fractional or multiple frames. You can use this node to avoid unwanted computation. For example, you may find that using TimeBlur  on all the upstream nodes in your composition can be unnecessary and very time consuming. In these cases, you can use NoTimeBlur node to limit the number of nodes to which you’re applying TimeBlur. Just insert the NoTimeBlur node in your node tree above the TimeBlur and any nodes you want the TimeBlur node to process." /><Url Source="../content/reference_guide/time_nodes/oflow.html" Title="OFlow" Abstract="OFlow Lets you generate high-quality retiming operations, such as slowing down or speeding up the input footage. OFlow analyzes the movement of all pixels in the frames, generates motion vectors based on the analysis, and then renders new “in-between” images by interpolating along the direction of the motion. You can also use OFlow to add motion blur or enhance the existing motion blur in the image." /><Url Source="../content/reference_guide/time_nodes/remove_32_pulldown.html" Title="Remove 3:2 pulldown" Abstract="Remove 3:2 pulldown Removes 3:2 pulldown from the input footage. If you’re using footage that was originally film but was converted to video, you may want to use the Remove 3:2 pulldown node when importing the footage to Nuke. This allows you to convert the footage to its original state (24 fps non-interlaced film) before adding effects to it. If you later want to render the footage back to video again, you can use the Add 3:2 pulldown node to reintroduce 3:2 pulldown." /><Url Source="../content/reference_guide/time_nodes/retime.html" Title="Retime" Abstract="Retime Lets you slow down, speed up, or even reverse select frames in a clip without necessarily altering its overall length." /><Url Source="../content/reference_guide/time_nodes/temporalmedian.html" Title="TemporalMedian" Abstract="TemporalMedian This node applies a temporal median filter to the input clip. It outputs each pixel by calculating the median of the current frame, the frame before, and the frame after. This can be useful for removing grain, for example." /><Url Source="../content/reference_guide/time_nodes/timeblur.html" Title="TimeBlur" Abstract="TimeBlur When a fast moving subject is recorded on film or video, its edges appear to smear as a result of the object's movement while the shutter is open. The longer the shutter remains open at each frame interval, the more obvious this effect. TimeBlur simulates this phenomenon by sampling its input at divisions times over shutter frames starting at the current frame plus offset." /><Url Source="../content/reference_guide/time_nodes/timeclip.html" Title="TimeClip" Abstract="TimeClip Just like TimeOffset, the TimeClip node lets you move the clip forwards or backwards in time and reverse the order of frames in the clip. In addition to this basic functionality, you can slip a clip, set the frame range for the clip, set what happens to frames outside of this frame range, fade the clip to or from black, and set expressions to adjust the node’s behavior." /><Url Source="../content/reference_guide/time_nodes/timeecho.html" Title="TimeEcho" Abstract="TimeEcho Merges multiple frames from the input into a single frame to create an echo-like effect over time. This allows you to create streaking and smearing effects, for example." /><Url Source="../content/reference_guide/time_nodes/timeoffset.html" Title="TimeOffset" Abstract="TimeOffset Lets you offset  a clip. Offsetting a clip refers to moving it backward or forward in time. There are any number of reasons why you might want to do this (for example, to synchronize events in a background and foreground clip)." /><Url Source="../content/reference_guide/time_nodes/timewarp.html" Title="TimeWarp" Abstract="TimeWarp Lets you slow down, speed up, or even reverse selected frames in a clip without necessarily altering its overall length." /><Url Source="../content/reference_guide/time_nodes/vectorgenerator.html" Title="VectorGenerator" Abstract="VectorGenerator VectorGenerator (NukeX and Nuke Studio only) produces images containing motion vector fields. In general, once you have generated a sequence of motion vector fields that describe the motion in a particular clip well, they will be suitable for use in any nodes which can take vector inputs. These include Kronos and MotionBlur available in NukeX." /><Url Source="../content/reference_guide/channel_nodes/channel_nodes.html" Title="Channel Nodes" Abstract="Channel Nodes Channel nodes deal with the use of channels and layers within your composite.  Typical channels are red, green, blue, and alpha - however, there are many other pieces of useful data that can be stored in unique channels. A layer is simply a collection of channels, for example rgba." /><Url Source="../content/reference_guide/channel_nodes/addchannels.html" Title="AddChannels" Abstract="AddChannels Adds channels to the input image. Channels that do not already exist are created and filled with the color defined by the color knob." /><Url Source="../content/reference_guide/channel_nodes/channelmerge.html" Title="ChannelMerge" Abstract="ChannelMerge The ChannelMerge node lets you merge together one channel from each input and save the result in the selected output channel. All other channels are copied unchanged from the B input." /><Url Source="../content/reference_guide/channel_nodes/copy.html" Title="Copy" Abstract="Copy Replaces channels in the B input with channels from the A input. You can use a mask channel to indicate which input is used for each pixel or whether both inputs should be mixed for some pixels." /><Url Source="../content/reference_guide/channel_nodes/remove.html" Title="Remove" Abstract="Remove Removes channels from the input clip. When you are done using a layer or a channel within a set, you may wish, for the sake of clarity, to remove it so that it is no longer passed to downstream nodes. Note that leaving channels in the stream will not itself cause them to be computed; only channels required are computed." /><Url Source="../content/reference_guide/channel_nodes/shuffle.html" Title="Shuffle" Abstract="Shuffle Shuffle lets you: rearrange up to 8 channels from a single image (one input). For example, you can use it to swap rgba.red for rgba.green, and vice versa." /><Url Source="../content/reference_guide/channel_nodes/shufflecopy.html" Title="ShuffleCopy" Abstract="ShuffleCopy ShuffleCopy lets you: rearrange up to 8 channels from two images (two inputs). For example, you can use it to combine two separate passes (such as the beauty pass and the reflection pass) into the same data stream." /><Url Source="../content/reference_guide/color_nodes/color_nodes.html" Title="Color Nodes" Abstract="Color Nodes Color nodes deal with color corrections, color space, and color management. " /><Url Source="../content/reference_guide/color_nodes/add.html" Title="Add" Abstract="Add The Add node lets you offset a channel’s values. It adds a fixed value to the channel, which, in effect, lightens the whole channel. You can also add a negative value to a channel, in which case the channel gets darker." /><Url Source="../content/reference_guide/color_nodes/clamp.html" Title="Clamp" Abstract="Clamp This node constrains, or clamps, values in the selected channels to a specified range. By default, it clamps all channels to values between 0 and 1. This can be useful for ensuring that the input’s blackest blacks and whitest whites will be visible on an intended display device, or for restricting data fed to a subsequent node that does not support numbers outside this range." /><Url Source="../content/reference_guide/color_nodes/cliptest.html" Title="ClipTest" Abstract="ClipTest ClipTest applies zebra stripes to all pixels outside a specified range. This can help you ensure that the input’s blackest blacks and whitest whites will be visible on an intended display device. By default, ClipTest highlights any pixels that are outside the range from 0 to 1." /><Url Source="../content/reference_guide/color_nodes/cmstestpattern.html" Title="CMSTestPattern" Abstract="CMSTestPattern This node generates calibration patterns for color management. You should run the output of this node through a color management node and then render the result with a GenerateLUT node. This way, you can produce 1D and 3D lookup table (LUT) files for various programs:" /><Url Source="../content/reference_guide/color_nodes/colorcorrect.html" Title="ColorCorrect" Abstract="ColorCorrect The ColorCorrect node is used to make quick adjustments to contrast, gamma, gain, and offset. You can apply these to a clip’s master (entire tonal range), shadows, midtones, or highlights." /><Url Source="../content/reference_guide/color_nodes/colorlookup.html" Title="ColorLookup" Abstract="ColorLookup Allows you to make contrast, gamma, gain, and offset adjustments (and, in fact, many others) using lookup tables (LUTs). LUTs refer to line graphs of a given color channel’s brightness. The horizontal axis represents the channel’s original, or input, values, and the vertical axis represents the channel’s new, or output values." /><Url Source="../content/reference_guide/color_nodes/colormatrix.html" Title="ColorMatrix" Abstract="ColorMatrix ColorMatrix multiplies the rgb colors by an arbitrary 3x3 matrix. This is useful for transforming color spaces." /><Url Source="../content/reference_guide/color_nodes/colorspace.html" Title="Colorspace" Abstract="Colorspace The Colorspace node converts images from one colorspace to another, for example from Nuke’s native colorspace to other color spaces more appropriate to a given process or intended display device. This node supports RGB, HSV, YUV, CIE, and CMS formats (and various subformats). It can adjust for different primaries, white point, and different encodings." /><Url Source="../content/reference_guide/color_nodes/colortransfer.html" Title="ColorTransfer" Abstract="ColorTransfer ColorTransfer lets you match the colors of one clip with those of another. It changes the colors in input B to match input A." /><Url Source="../content/reference_guide/color_nodes/crosstalk.html" Title="Crosstalk" Abstract="Crosstalk Adds or removes crosstalk, or bleeding, from one color channel to another. Each output color channel is the sum of three lookup tables, each indexed by one of the input color channels. The horizontal axis represents the channel’s original, or input, values, and the vertical axis represents the channel’s new, or output values." /><Url Source="../content/reference_guide/color_nodes/exposure.html" Title="Exposure" Abstract="Exposure Allows you to adjust the exposure of the input sequence using f-stops, printer lights, film densities, or Cineon values." /><Url Source="../content/reference_guide/color_nodes/expression.html" Title="Expression" Abstract="Expression Allows you to apply complex mathematical formulas to a channel’s values using C-like syntax expressions. If necessary, you can apply different expressions to different sets of channels." /><Url Source="../content/reference_guide/color_nodes/gamma.html" Title="Gamma" Abstract="Gamma Applies a constant gamma value to a set of channels. This lightens or darkens the midtones. The actual function is 1/pow(value)." /><Url Source="../content/reference_guide/color_nodes/generatelut.html" Title="GenerateLUT" Abstract="GenerateLUT Generates lookup tables, or LUTs, from color management nodes downstream of a CMSTestPattern node. LUTs are generated according to the size of CMSTestPattern cube size." /><Url Source="../content/reference_guide/color_nodes/grade.html" Title="Grade" Abstract="Grade Lets you define white and black points by sampling pixels from the Viewer. Setting the brightest parts of the image to pure white and the darkest to pure black in this manner can help you add punch to overexposed images, for example. You can also use this node for matching foreground plates to background plates." /><Url Source="../content/reference_guide/color_nodes/histeq.html" Title="HistEQ" Abstract="HistEQ Alters the histogram of the input image to be flat. This process is called histogram equalization. It can be useful for increasing the contrast in an image, for example, if the background and foreground in the image are both bright or both dark." /><Url Source="../content/reference_guide/color_nodes/histogram.html" Title="Histogram" Abstract="Histogram Histogram graphs the number of pixels at each brightness level. This is a useful gauge to see whether the input image has a good distribution of shadows, midtones, and highlights." /><Url Source="../content/reference_guide/color_nodes/hsvtool.html" Title="HSVTool" Abstract="HSVTool HSVTool lets you simultaneously adjust hue, saturation, and value components from a single control panel. It also features a color replacement tool and makes an excellent keyer." /><Url Source="../content/reference_guide/color_nodes/huecorrect.html" Title="HueCorrect" Abstract="HueCorrect Lets you make precision adjustments to the levels of saturation in a range of hues. You do so via edits to a series of suppression curves. The horizontal axis represents the original, or input, saturation, and the vertical axis represents the new, or output, saturation." /><Url Source="../content/reference_guide/color_nodes/hueshift.html" Title="HueShift" Abstract="HueShift HueShift transforms the input image’s colorspace. It works by transforming the colors to CIE XYZ space and then doing simple scales and rotates on the space. In XYZ space, X and Z control the color and Y is the brightness." /><Url Source="../content/reference_guide/color_nodes/invert.html" Title="Invert" Abstract="Invert Inverts a channel’s values. To invert a channel is to subtract its values from one, which causes its blacks to become white and its whites to become black. In the course of building a script, you’ll have frequent need to invert mattes in particular." /><Url Source="../content/reference_guide/color_nodes/log2lin.html" Title="Log2Lin" Abstract="Log2Lin Whenever you read a clip into a script, it is automatically converted to Nuke’s native color space, which is 32-bit per channel RGB, a linear format. This conversion takes place even if the clip you read in is in the Kodak Cineon format, which is a logarithmic format. The reverse of this conversion, called a lin-to-log conversion, also automatically takes place when you write the processed element back out of the script - that is, Nuke automatically converts it back into a Cineon element." /><Url Source="../content/reference_guide/color_nodes/matchgrade.html" Title="MatchGrade" Abstract="MatchGrade MatchGrade (NukeX and Nuke Studio only) allows you to automatically calculate a grade to match the colors in the Source input to the colors in the Target input. You can use MatchGrade to:" /><Url Source="../content/reference_guide/color_nodes/mincolor.html" Title="MinColor" Abstract="MinColor Calculates the difference between the darkest value in the input image and the target value, and then adds the result to the image. This sets the darkest pixel to the target value." /><Url Source="../content/reference_guide/color_nodes/multiply_color.html" Title="Multiply" Abstract="Multiply Lets you multiply a channel’s values by a given factor, which has the effect of lightening the channel while preserving the black point. This operation is also knows as gain." /><Url Source="../content/reference_guide/color_nodes/ociocdltransform.html" Title="OCIOCDLTransform" Abstract="OCIOCDLTransform Applies an ASC CDL (American Society of Cinematographers Color Decision List) grade based on the OpenColorIO Library. For more information, see http://sites.google.com/site/opencolorio/." /><Url Source="../content/reference_guide/color_nodes/ociocolorspace.html" Title="OCIOColorSpace" Abstract="OCIOColorSpace Much like the standard ColorSpace node, you can use the OCIOColorSpace node for converting an image sequence from one colorspace to another. The OCIOColorSpace node is based on the OpenColorIO library. For more information, see http://sites.google.com/site/opencolorio/." /><Url Source="../content/reference_guide/color_nodes/ociodisplay.html" Title="OCIODisplay" Abstract="OCIODisplay Uses the OpenColorIO library to apply a colorspace conversion to an image sequence, so that it can be accurately represented on a specific display device. The OCIODisplay node is based on the OpenColorIO library. For more information, see http://sites.google.com/site/opencolorio/." /><Url Source="../content/reference_guide/color_nodes/ociofiletransform.html" Title="OCIOFileTransform" Abstract="OCIOFileTransform Uses the OpenColorIO library to load a colorspace conversion from a file (usually a 1D or 3D LUT) and apply it. You can also load other file-based transformations, for example an ASC ColorCorrection XML. File transforms are applied without any input or output colorspace handling. If the file expects log-encoded pixels, but you apply the node to a linear image, you will get incorrect results. The OCIOFileTransform node is based on the OpenColorIO library." /><Url Source="../content/reference_guide/color_nodes/ociologconvert.html" Title="OCIOLogConvert" Abstract="OCIOLogConvert Sometimes log data is required for certain processing operations, like plate resizing or pulling keys. Usually a colorspace is provided specifically for these operations. The OCIOLogConvert node uses the OpenColorIOlibrary to convert from compositing_log to scene_linear, and vice versa. For more information, see http://sites.google.com/site/opencolorio/." /><Url Source="../content/reference_guide/color_nodes/ploglin.html" Title="PLogLin" Abstract="PLogLin Converts between logarithmic and linear encoding (colorspace) based on a single gray point rather than the standard Cineon formula with a black point and white point (the formula that the Log2Lin node uses). This method is frequently referred to as Josh Pines log conversion." /><Url Source="../content/reference_guide/color_nodes/posterize.html" Title="Posterize" Abstract="Posterize Posterize reduces the color resolution of an image. This creates abrupt changes from one tone to another, producing a dramatic graphic effect." /><Url Source="../content/reference_guide/color_nodes/rolloffcontrast.html" Title="RolloffContrast" Abstract="RolloffContrast Applies a contrast curve, with smooth falloff at the low and high ends, equally across all channels in the input image. The center value controls the overall brightness of the colors and the contrast value increases or decreases the contrast of the image. Use soft clip to control the amount of rolloff and check override values to adjust the tension and extent of the soft clip curve." /><Url Source="../content/reference_guide/color_nodes/sampler.html" Title="Sampler" Abstract="Sampler This node converts a horizontal scanline of pixel data into a lookup curve. The Viewer sampler widget or sampler y coordinate selects the scanline (sampler x is ignored)." /><Url Source="../content/reference_guide/color_nodes/saturation.html" Title="Saturation" Abstract="Saturation For the times when you just want to correct an image’s saturation (color intensity) and don’t require limiting the correction to any particular range of hues, use the Saturation node." /><Url Source="../content/reference_guide/color_nodes/softclip.html" Title="SoftClip" Abstract="SoftClip Compresses high-dynamic-range (HDR) imagery into the 0-1 range. Because simple color compression changes the apparent chroma and contrast of the image, the conversion control allows for several compression modes that try to preserve colors." /><Url Source="../content/reference_guide/color_nodes/toe.html" Title="Toe" Abstract="Toe Toe lifts the black level, in a similar way to gain controls in other color correction nodes, but with a rolloff so that whites are mostly not affected. This makes the shadows in your image lighter." /><Url Source="../content/reference_guide/color_nodes/truelight.html" Title="Truelight" Abstract="Truelight Truelight is a color management system that lets you preview the final look of the film on your computer display. The preview is based on calibration data for film recorders, projection systems, and monitors." /><Url Source="../content/reference_guide/color_nodes/vectorfield.html" Title="Vectorfield" Abstract="Vectorfield Vectorfield applies color values from lookup tables (LUTs), allowing you to make complex color corrections quickly using pre-calculated files. You can create LUT files using the GenerateLUT node or a third-party application capable of producing a LUT format the Vectorfield node supports." /><Url Source="../content/reference_guide/filter_nodes/filter_nodes.html" Title="Filter Nodes" Abstract="Filter Nodes Filter nodes contain convolve filters, such as blur, sharpen, edge detect, and erode. " /><Url Source="../content/reference_guide/filter_nodes/blur.html" Title="Blur" Abstract="Blur Adds blur to an image or matte using box, triangle, quadratic, or gaussian filter algorithms. The blur value is calculated for image pixels by examining their neighbors within the constraints of the size control (in pixels), and applying the selected algorithms. The default, gaussian, produces the smoothest blur, but takes longer to render." /><Url Source="../content/reference_guide/filter_nodes/bilateral.html" Title="Bilateral" Abstract="Bilateral A bilateral filter is a smoothing filter that is particularly good at preserving edges, though it can be computationally expensive." /><Url Source="../content/reference_guide/filter_nodes/bumpboss.html" Title="BumpBoss" Abstract="BumpBoss BumpBoss produces an emboss effect by overlaying input A over input B, rather than offsetting a single input image like the Emboss node. The BumpBoss properties can be modified by the offset between the center and lightposition indicators in the Viewer." /><Url Source="../content/reference_guide/filter_nodes/convolve.html" Title="Convolve" Abstract="Convolve Convolve lets you create custom filter effects by supplying your own filter image. This image is used as the convolution matrix. In other words, the new value of a pixel is calculated by centering the filter image on the pixel, examining its neighbors, multiplying each pixel value by the corresponding pixel values in the filter image, and then adding the results together. This allows you to defocus a clip and create lens blur effects in the shape of the filter image, for example." /><Url Source="../content/reference_guide/filter_nodes/defocus.html" Title="Defocus" Abstract="Defocus Defocuses the image using a disc filter. This allows you to simulate the defocusing effect of a circular lens and create lens blur effects like ’bokeh’ (the blooming of highlights when defocused)." /><Url Source="../content/reference_guide/filter_nodes/degrainblue.html" Title="DegrainBlue" Abstract="DegrainBlue This gizmo reduces grain in the blue channel, which often is where most grain occurs. " /><Url Source="../content/reference_guide/filter_nodes/degrainsimple.html" Title="DegrainSimple" Abstract="DegrainSimple Lets you reduce grain in the red, green, and blue channels respectively, and allows you to mask the effect." /><Url Source="../content/reference_guide/filter_nodes/denoise.html" Title="Denoise" Abstract="Denoise The Denoise node is an efficient tool for removing noise or grain from your footage. It uses spatial filtering to remove noise without losing image quality." /><Url Source="../content/reference_guide/filter_nodes/dirblur.html" Title="DirBlur" Abstract="DirBlur This node applies three types of directional blur to the input image: zoom, radial, and linear." /><Url Source="../content/reference_guide/filter_nodes/edgeblur.html" Title="EdgeBlur" Abstract="EdgeBlur Blurs detected edges within the matte specified in the matte channel. " /><Url Source="../content/reference_guide/filter_nodes/edgedetect.html" Title="EdgeDetect" Abstract="EdgeDetect A basic edge detection node with options for a blur before the edge detection and an erode after." /><Url Source="../content/reference_guide/filter_nodes/emboss.html" Title="Emboss" Abstract="Emboss Produces an emboss effect by offsetting the original input using the Angle and Width controls, rather than overlaying a second input like the BumpBoss node." /><Url Source="../content/reference_guide/filter_nodes/erode_blur.html" Title="Erode (blur)" Abstract="Erode (blur) Similar to Erode (filter), but smoother, input pixels are filtered relative to the size control. Negative values cause brighter areas to expand into darker areas and positive values cause darker areas to expand into lighter areas - particularly useful with mattes. Additionally, you can add blur to the input using the blur and quality controls." /><Url Source="../content/reference_guide/filter_nodes/erode_fast.html" Title="Erode (fast)" Abstract="Erode (fast) Also known as the Dilate node, Erode (fast) controls the relative amount of dark (negative size values) and light (positive size values) pixels in the input. This can be used to grow or shrink mattes, for example, an alpha matte’s pixels can be given a positive size value to cover more area." /><Url Source="../content/reference_guide/filter_nodes/erode_filter.html" Title="Erode (filter)" Abstract="Erode (filter) Filters input pixels relative to the size control, and is particularly useful with mattes. Negative values cause brighter areas to expand into darker areas and positive values cause darker areas to expand into lighter areas. Use the filter dropdown to control the erode computation speed (box) versus quality (gaussian)." /><Url Source="../content/reference_guide/filter_nodes/glow.html" Title="Glow" Abstract="Glow Causes bright areas in an image appear brighter by adding glow using a blur filter. " /><Url Source="../content/reference_guide/filter_nodes/godrays.html" Title="GodRays" Abstract="GodRays Averages together many samples of the image between its initial position and the translate and center indicators in the Viewer to produce lighting and blur effects." /><Url Source="../content/reference_guide/filter_nodes/laplacian.html" Title="Laplacian" Abstract="Laplacian The Laplacian node takes the input image, applies a blur, and then subtracts the original from the blurred input to produce an image useful for edge detection or motion estimation. Apply different smoothing filters to the output to trade off between speed (box) and quality (gaussian)." /><Url Source="../content/reference_guide/filter_nodes/levelset.html" Title="LevelSet" Abstract="LevelSet Within a single channel determined by the channel control, LevelSet outputs the distance from a pixel in the Viewer to the nearest pixel in the input channel with the value set in the threshold control." /><Url Source="../content/reference_guide/filter_nodes/matrix.html" Title="Matrix" Abstract="Matrix Adds a user defined matrix to the input allowing you to multiply all or specific channels by the matrix values. You can copy and paste an existing matrix, using the Animation menu, or adjust individual fields manually." /><Url Source="../content/reference_guide/filter_nodes/median.html" Title="Median" Abstract="Median Input image pixels within the filter area, defined by the size control, are sorted into order and the median pixel is output to the Viewer. Median filter are very good at removing single pixel noise, with only a slight loss of sharpness as a side effect." /><Url Source="../content/reference_guide/filter_nodes/motionblur.html" Title="MotionBlur" Abstract="MotionBlur MotionBlur (NukeX and Nuke Studio only) uses the same techniques and technology as the motion blur found in Kronos to add realistic motion blur to a sequence, but presents the controls in a less complex, more user friendly way." /><Url Source="../content/reference_guide/filter_nodes/motionblur2d.html" Title="MotionBlur2D" Abstract="MotionBlur2D MotionBlur2D does not produce motion blur independently. It actually collates UV motion information from the 2D transf input (for example, a Transform node) to output UV vectors down the node tree to a VectorBlur node, producing motion blur based on these vectors." /><Url Source="../content/reference_guide/filter_nodes/motionblur3d.html" Title="MotionBlur3D" Abstract="MotionBlur3D While similar to the MotionBlur2D node in that it does not produce motion blur independently, MotionBlur3D is designed specifically for camera moves rather than 2D transforms. MotionBlur3D collates UV motion information from the cam input to output UV vectors down the node tree to a VectorBlur node, producing motion blur based on these vectors." /><Url Source="../content/reference_guide/filter_nodes/sharpen.html" Title="Sharpen" Abstract="Sharpen Uses Laplacian to sharpen specific channels from the input image. Apply different smoothing filters to the output to trade off between speed (box) and quality (gaussian)." /><Url Source="../content/reference_guide/filter_nodes/soften.html" Title="Soften" Abstract="Soften Uses Laplacian to soften specific channels from the input image. Apply different smoothing filters to the output to trade off between speed (box) and quality (gaussian)." /><Url Source="../content/reference_guide/filter_nodes/vectorblur.html" Title="VectorBlur" Abstract="VectorBlur Generates motion blur by blurring each pixel into a straight line, using the values from the motion vector channels (u and v channels) to determine the direction of the blur. You can create motion vectors using the VectorGenerator, MotionBlur2D, MotionBlur3D, or ScanlineRender nodes. Many third-party applications can also produce motion vector information as two-channel, floating point images that you can use with VectorBlur. If possible, you should unpremultiply these images." /><Url Source="../content/reference_guide/filter_nodes/volumerays.html" Title="VolumeRays" Abstract="VolumeRays The VolumeRays node is actually a gizmo (a group of nodes) designed to create ray lighting effects radiating from the vol_pos indicator in the Viewer." /><Url Source="../content/reference_guide/filter_nodes/zdefocus.html" Title="ZDefocus" Abstract="ZDefocus Blurs the image according to a depth map channel. This allows you to simulate depth-of-field (DOF) blurring." /><Url Source="../content/reference_guide/filter_nodes/zslice.html" Title="ZSlice" Abstract="ZSlice This node uses the depth channel of the input to highlight a slice of the image characterized by the same Z depth. You can modify the slice using the Center of Slice and Field Width controls." /><Url Source="../content/reference_guide/keyer_nodes/keyer_nodes.html" Title="Keyer Nodes" Abstract="Keyer Nodes Keyer nodes deal with extracting procedural mattes from image sequences using luma keying, chroma keying, and difference keying." /><Url Source="../content/reference_guide/keyer_nodes/difference.html" Title="Difference" Abstract="Difference This node produces the difference between two images as a matte. It takes two inputs: input B contains the subject with the background, and" /><Url Source="../content/reference_guide/keyer_nodes/huekeyer.html" Title="HueKeyer" Abstract="HueKeyer This node is a chroma keyer. It calculates hue from the incoming red, green, and blue channels, and uses the amount curve to determine the value to output in the alpha channel. In the graph, the x axis represents hue and the y axis the alpha value for that hue. To key out a particular hue, find the hue on the x axis and Ctrl/Cmd+Alt+click to create a point on the curve at that location. Then drag the point up to a value of 1 on the y axis to set that hue to black in the alpha channel." /><Url Source="../content/reference_guide/keyer_nodes/ibkcolor.html" Title="IBKColor" Abstract="IBKColor The IBK keyer differs from many other keyers in that, instead of using a single color picker, it uses an input image (a clean plate with just the color variations of the background) to drive the key. This generally gives you good results when working with uneven blue- or greenscreens." /><Url Source="../content/reference_guide/keyer_nodes/ibkgizmo.html" Title="IBKGizmo" Abstract="IBKGizmo The IBK keyer differs from many other keyers in that, instead of using a single color picker, it uses an input image (a clean plate with just the color variations of the background) to drive the key. This generally gives you good results when working with uneven blue- or greenscreens." /><Url Source="../content/reference_guide/keyer_nodes/keyer.html" Title="Keyer" Abstract="Keyer This node gives you access to several simple keyers. You can use it to pull keys based on the input image’s:" /><Url Source="../content/reference_guide/keyer_nodes/keylight.html" Title="Keylight" Abstract="Keylight Keylight is an industry-proven color difference keyer. Use the Screen Color selector to choose a color from the Source input to use as the blue/green screen color and the View dropdown menu to judge the key. To remove blue/green spill from the foreground object, use the Despill Bias control to pick skin tones from the source. Use the Screen Matte parameters to improve the matte." /><Url Source="../content/reference_guide/keyer_nodes/primatte.html" Title="Primatte" Abstract="Primatte Primatte keys are created incrementally by sampling single pixels, or a range of pixels, from a blue or greenscreen image. This controls the polyhedron in colorspace that determines what pixels are in or outside the matte. To use Primatte, click Auto-Compute to automatically sense the backing screen color, eliminate it, and even get rid of some of the foreground and background noise. Alternatively, you can set operation to how you want to use the color samples, or use the left and right arrow buttons to step through all the operations. Then, use Ctrl+click or Ctrl+Shift+drag to select a single color or a range of colors from the Viewer. Primatte then uses these to adjust the polyhedron. Nuke provides unlimited Undo during this process." /><Url Source="../content/reference_guide/keyer_nodes/ultimatte.html" Title="Ultimatte" Abstract="Ultimatte Ultimatte AdvantEdge technology is a color difference keyer. It is the culmination of over 25 years of bluescreen imaging experience by Ultimatte Corporation. The final result is a composite that preserves fine details like hair, smoke, and motion blurred edges with a minimum of compromises." /><Url Source="../content/reference_guide/merge_nodes/merge_nodes.html" Title="Merge Nodes" Abstract="Merge Nodes Merge nodes deal with layering multiple images together. " /><Url Source="../content/reference_guide/merge_nodes/absminus.html" Title="Absminus" Abstract="Absminus Absminus is the same as the Merge node, only with operation set to difference by default. It layers images together using the difference compositing algorithm: abs(A-B). This algorithm calculates how much the pixels in input A differ from the pixels in input B. It can be useful for comparing two very similar images." /><Url Source="../content/reference_guide/merge_nodes/addmix.html" Title="AddMix" Abstract="AddMix Using AddMix, the alpha of input A is used to index two color correction lookup curves (LUTs). The first is used to multiply input A, the second to multiply input B, and the results are added together. AddMix performs a similar operation to the Merge node's over mode, but also premultiplies your image. If you have a CG image that has been rendered, you're probably better off not using AddMix because you might lose detail by having your image premultiplied twice." /><Url Source="../content/reference_guide/merge_nodes/blend.html" Title="Blend" Abstract="Blend Lets you blend images together by creating the weighted average of all of the inputs. You can continue to add more inputs, and more weight parameters will be added accordingly. This allows you to easily average together three, four, or more images and adjust how much each contributes to the result." /><Url Source="../content/reference_guide/merge_nodes/contactsheet.html" Title="ContactSheet" Abstract="ContactSheet Generates a contact sheet that shows the different inputs or the frames of one input lined up next to each other. This can help you demonstrate, document, or manage what you are doing for a project." /><Url Source="../content/reference_guide/merge_nodes/copybbox.html" Title="CopyBBox" Abstract="CopyBBox Copies the bounding box from the A input onto the B stream. The bounding box defines the area of the frame that Nukesees as having valid image data. The larger the bounding box is, the longer it takes Nuketo process and render the images." /><Url Source="../content/reference_guide/merge_nodes/copyrectangle.html" Title="CopyRectangle" Abstract="CopyRectangle With the CopyRectangle node, you can copy a rectangular area from one input on top of another." /><Url Source="../content/reference_guide/merge_nodes/dissolve.html" Title="Dissolve" Abstract="Dissolve Dissolve creates a weighted average of two of the inputs. " /><Url Source="../content/reference_guide/merge_nodes/in.html" Title="In" Abstract="In In is the same as the Merge node, only with operation set to in by default. It layers images together using the in compositing algorithm: Ab. This algorithm only shows the areas of image A that overlap with the alpha of B. It can be useful for combining mattes." /><Url Source="../content/reference_guide/merge_nodes/keymix.html" Title="Keymix" Abstract="Keymix Keymix layers two images together using a specified Roto shape or image as a mask. It copies input A to input B where the mask is non-black. This follows the formula Aa + B(1-a). It is similar to the Over node, but for use with unpremultiplied images. The resulting image contains no alpha channel." /><Url Source="../content/reference_guide/merge_nodes/layercontactsheet.html" Title="LayerContactSheet" Abstract="LayerContactSheet Generates a contact sheet that shows all the layers in the input lined up next to each other. This can help you demonstrate, document, or manage what you are doing for a project." /><Url Source="../content/reference_guide/merge_nodes/matte.html" Title="Matte" Abstract="Matte Matte is the same as the Merge node, only with operation set to matte by default. It layers images together using the matte compositing algorithm: Aa+B(1-a). This algorithm is the same as a premultiplied over. You should use unpremultiplied images with this operation." /><Url Source="../content/reference_guide/merge_nodes/max.html" Title="Max" Abstract="Max Max is the same as the Merge node, only with operation set to max by default. It layers images together using the max compositing algorithm: max(A,B). This algorithm outputs the maximum value for each channel of each pixel. It can be useful for combining mattes and bringing aspects like bright hair detail through." /><Url Source="../content/reference_guide/merge_nodes/merge.html" Title="Merge" Abstract="Merge Merge allows you to layer multiple images together. When using this node, you need to select a compositing algorithm that determines how the pixel values from one input are calculated with the pixel values from the other to create the new pixel values that are output as the merged image. The operation dropdown menu houses a large number of different compositing algorithms, giving you great flexibility when building your composite." /><Url Source="../content/reference_guide/merge_nodes/mergeexpression.html" Title="MergeExpression" Abstract="MergeExpression Allows you to merge two images using Tcl expressions. The syntax is the same as for the Color &gt; Math &gt; Expression node, except that you need to precede channel references with either A or B to indicate the input. For example, to reference the red, green, blue, and alpha channels of input A, you should use Ar, Ag, Ab, and Aa. Similarly, to reference these channels in input B, use Br, Bg, Bb, and Ba." /><Url Source="../content/reference_guide/merge_nodes/min.html" Title="Min" Abstract="Min Min is the same as the Merge node, only with operation set to min by default. It layers images together using the min compositing algorithm: min(A,B). This algorithm outputs the minimum value for each channel of each pixel." /><Url Source="../content/reference_guide/merge_nodes/multiply_merge.html" Title="Multiply" Abstract="Multiply Multiply is the same as the Merge node, only with operation set to multiply by default. It layers images together using the multiply compositing algorithm: AB, A if A&lt;0 and B&lt;0. This algorithm multiplies the pixel channel values but takes the value of A if both A and B are negative. It can be useful for compositing darker values from A with the image of B - dark gray smoke shot against a white background, for example." /><Url Source="../content/reference_guide/merge_nodes/out.html" Title="Out" Abstract="Out Out is the same as the Merge node, only with operation set to out by default. The Out node can be useful for combining mattes. It layers images together using the out compositing algorithm: A(1-b), where b is the alpha value of a pixel from image B. This algorithm only shows the areas of image A that overlap areas of B which are rejected when using B in a matte." /><Url Source="../content/reference_guide/merge_nodes/plus.html" Title="Plus" Abstract="Plus Plus is the same as the Merge node, only with operation set to plus by default. It layers images together using the plus compositing algorithm: A+B. This algorithm calculates the sum of image A and B. Note that it may result in pixel values higher than 1.0." /><Url Source="../content/reference_guide/merge_nodes/premult.html" Title="Premult" Abstract="Premult By default, Premult multiplies the input’s rgb channels by its alpha (in other words, premultiplies the input image). You may need this node when:" /><Url Source="../content/reference_guide/merge_nodes/screen.html" Title="Screen" Abstract="Screen Screen is the same as the Merge node, only with operation set to screen by default. It layers images together using the screen compositing algorithm: A+B-AB if A or B ≤1, otherwise max(A,B). In other words, If A or B is less than or equal to 1, the screen algorithm is used, otherwise max is chosen. Screen resembles plus. It can be useful for combining mattes and adding laser beams." /><Url Source="../content/reference_guide/merge_nodes/switch.html" Title="Switch" Abstract="Switch Lets you switch between any number of inputs. This can be useful when using gizmos. For an example, see Gizmos, Custom Plug-ins, and Generic Tcl Scripts  in the Configuring Nuke chapter of the Nuke User Guide." /><Url Source="../content/reference_guide/merge_nodes/timedissolve.html" Title="TimeDissolve" Abstract="TimeDissolve Dissolves between two inputs, starting the dissolve at the in frame and ending at the out frame. You can specify the dissolve curve over time." /><Url Source="../content/reference_guide/merge_nodes/unpremult.html" Title="Unpremult" Abstract="Unpremult By default, this node divides the input’s rgb channels by its alpha. If your input images are premultiplied, this can make color corrections more accurate." /><Url Source="../content/reference_guide/merge_nodes/zmerge.html" Title="ZMerge" Abstract="ZMerge Merges input images together at their appropriate 3D depths. It does this by setting each output pixel to the input with the closest Z depth value. Z depth values are usually stored in a separate depth channel (for example, depth.z) and determine the placing of objects within the field of view of the camera. By default, ZMerge considers smaller Z depth values (darker areas) to be closer to the camera and larger values (lighter areas) further away, but you can invert this behavior." /><Url Source="../content/reference_guide/transform_nodes/transform_nodes.html" Title="Transform Nodes" Abstract="Transform Nodes Transform nodes deal with translation, rotation, and scale as well as tracking, warping, and motion blur." /><Url Source="../content/reference_guide/transform_nodes/adjustbbox.html" Title="AdjustBBox" Abstract="AdjustBBox The AdjustBBox node lets you expand or crop the edges of the bounding box by a specified number of pixels. The bounding box defines the area of the frame that Nuke sees as having valid image data. For example, if you have an image with lots of black (0,0,0,0), you can adjust the bounding box to contain just the useful area so that Nuke won’t waste time computing results where there is no change." /><Url Source="../content/reference_guide/transform_nodes/blackoutside.html" Title="BlackOutside" Abstract="BlackOutside The BlackOutside node fills everything outside the bounding box area with black. This removes stripes or other anomalies caused by the edge pixels of the bounding box being replicated. It may be useful, for example, after adjusting the bounding box with an AdjustBBox or CopyBBox node." /><Url Source="../content/reference_guide/transform_nodes/camerashake.html" Title="CameraShake" Abstract="CameraShake Adds simulated camera shake to a sequence using random changes in amplitude, rotation, scale, and so on. Also includes shutter controls to produce motion blur." /><Url Source="../content/reference_guide/transform_nodes/card3d.html" Title="Card3D" Abstract="Card3D The Card3D node lets you apply the same geometric transformations possible with the Transform node, but gives you an additional axis of operation, z. It transforms the image as though it was printed on a flat card and placed in front of the camera. The Card3D node’s transformations are not truly 3D, but rather what is sometimes called “2.5D” - meaning that you can move an element back on the z axis, but doing so does not convey the sense that it is behind or in front of another element. 2.5D transformations are useful for tasks like “cheating” the perspective of an element or “faking” a camera zoom." /><Url Source="../content/reference_guide/transform_nodes/cornerpin2d.html" Title="CornerPin2D" Abstract="CornerPin2D The CornerPin2D node is designed to map the four corners of an image sequence to or from positions derived from tracking data. In practice, this node lets you replace any four-cornered feature with another image sequence. You can use it to place an image in an on-screen television, for example." /><Url Source="../content/reference_guide/transform_nodes/crop.html" Title="Crop" Abstract="Crop The Crop node lets you cut out the unwanted portions of the image area. You can fill the cropped portion with black or adjust the image output format to match the cropped image." /><Url Source="../content/reference_guide/transform_nodes/gridwarp.html" Title="GridWarp" Abstract="GridWarp The GridWarp node allows you to warp images by transferring image information from one Bezier grid onto another. When using this node, you first position the source grid, which defines where to warp from. Next, you position the destination grid, which defines where to warp the image to. This grid can be a duplicate of the source grid, or you can define it separately. When you manipulate the destination grid, the corresponding warp is applied to the source image." /><Url Source="../content/reference_guide/transform_nodes/idistort.html" Title="IDistort" Abstract="IDistort IDistort warps the input image based on the values in the image’s UV channels. The U and V values are offsets for where a pixel will come from. For example, if pixel 51, 23 has a U and V value of -1, 5, the pixel's value will come from 50, 28 of the input channels." /><Url Source="../content/reference_guide/transform_nodes/lensdistortion.html" Title="LensDistortion" Abstract="LensDistortion LensDistortion (NukeX and Nuke Studio only) applies or removes lens distortion. To estimate the lens distortion on the input, you have three options. Each one of these will calculate the distortion present and set the values on the LensDistortion tab." /><Url Source="../content/reference_guide/transform_nodes/mirror.html" Title="Mirror" Abstract="Mirror This node flips the input image around the center of the format area. A flip on the x axis mirrors the image vertically. A flop on the on the y axis mirrors the image horizontally." /><Url Source="../content/reference_guide/transform_nodes/pointsto3d.html" Title="PointsTo3D" Abstract="PointsTo3D Use the PointsTo3D node to calculate the 3D location of a 2D point in an image sequence using the parallax between two or three tracked points." /><Url Source="../content/reference_guide/transform_nodes/position.html" Title="Position" Abstract="Position Position moves the input image by an integer number of pixels. It fills the area between the original image and the moved image by repeating the edge pixels." /><Url Source="../content/reference_guide/transform_nodes/reconcile3d.html" Title="Reconcile3D" Abstract="Reconcile3D Reconcile3D turns a point in 3D space into an x, y position in the camera. The 3D point is controlled by the first fields in the properties panel, and by the optional Axis input. The point is projected through the camera to the image and the position of the result is put in XY output. In addition, the absolute 3D point is put in XYZ output (this is only useful if there is an Axis parent, otherwise it is the same as the input point). This lets you lock a photographed plate to a 3D scene or track." /><Url Source="../content/reference_guide/transform_nodes/reformat.html" Title="Reformat" Abstract="Reformat Reformat lets you resize and reposition your image sequences to a different format (width and height). This also allows you to use plates of varying image resolution on a single script without running into issues when combining them. All scripts should include Reformat nodes after each Read node to specify, at the very least, the output resolution of the images in the script." /><Url Source="../content/reference_guide/transform_nodes/sphericaltransform.html" Title="SphericalTransform" Abstract="SphericalTransform SphericalTransform calculates conversions between types of environment maps from High Dynamic Range (.hdr) images. For example, you can shoot a real life environment as an HDRI and then use the SphericalTransform node to convert the image into a spherical map. Then use the spherical map to surround 3D objects placed in a scene so that the HDR color mimics the illumination from the environment." /><Url Source="../content/reference_guide/transform_nodes/splinewarp.html" Title="SplineWarp" Abstract="SplineWarp The SplineWarp node warps an image based on multiple shapes or pins that you create. Unlike the GridWarp node, you can draw these shapes anywhere on either image, rather than only add points on the existing grid lines, and corresponding shapes can have differing numbers of points. You can also copy and paste shapes from other SplineWarp and Roto or RotoPaint nodes." /><Url Source="../content/reference_guide/transform_nodes/stablilize.html" Title="Stablilize" Abstract="Stablilize The Stabilize2D node is designed to remove unwanted camera movement, rotation, and/or scaling from an image sequence. The node requires data from only a single track if you only need to stabilize movement; it requires data from two tracks if you need to stabilize for rotation and/or scaling." /><Url Source="../content/reference_guide/transform_nodes/stmap.html" Title="STMap" Abstract="STMap The STMap node allows you to move pixels around in an image. STMap uses two channels to figure out where each pixel in the resulting image should come from in the input channels. You can use the Copy node to merge the two distortion channels in with your image channels and then select the two channels in the U and V selection boxes. The U and V values are the absolute position of the source pixel. The values are normalized to be between 0 and 1, where 0 is the bottom left corner of the input image, and 1 is the top right corner." /><Url Source="../content/reference_guide/transform_nodes/tile.html" Title="Tile" Abstract="Tile Tile produces an output image that contains scaled-down, tiled copies of the input image. The output image is the same format as the input." /><Url Source="../content/reference_guide/transform_nodes/tracker.html" Title="Tracker" Abstract="Tracker This is a 2D tracker that allows you to extract animation data from the position, rotation, and size of an image. Using expressions, you can apply the data directly to transform and match-move another element. Or you can invert the values of the data and apply them to the original element - again through expressions - to stabilize the image." /><Url Source="../content/reference_guide/transform_nodes/transform.html" Title="Transform" Abstract="Transform Transform lets you not only translate elements, but also rotate, scale, and skew them from a single control panel." /><Url Source="../content/reference_guide/transform_nodes/transformmasked.html" Title="TransformMasked" Abstract="TransformMasked This node lets you translate, rotate, scale, or skew an image in 2D in the same way as the Transform node, but it also offers controls for assigning a mask to protect certain areas of the frame from transforms." /><Url Source="../content/reference_guide/transform_nodes/tviscale.html" Title="TVIScale" Abstract="TVIScale This node scales an image by a factor of two. It uses a Total Variational Inpainting (TVI) technique that minimizes noise while still preserving the edges. The Lambda control is the main control here. The larger the value, the less smoothing is allowed and the more noise present in the original image makes it to the larger image." /><Url Source="../content/reference_guide/3d_nodes/3d_nodes.html" Title="3D Nodes" Abstract="3D Nodes 3D nodes deal with Nuke's 3D workspace, which allows you to set up a 3D composite for camera moves, set replacement, and other applications where you need to simulate a &quot;real&quot; dimensional environment." /><Url Source="../content/reference_guide/3d_nodes/applymaterial.html" Title="ApplyMaterial" Abstract="ApplyMaterial Apply a material from the mat input to your 3D object(s). For example, you can use this node to apply a global material to several merged objects (note that this overrides any individual materials applied to the geometry before it was merged)." /><Url Source="../content/reference_guide/3d_nodes/axis.html" Title="Axis" Abstract="Axis Axis nodes act as null objects by adding a new transformational axis to which other objects may be parented. Even when objects already have their own internal axes, it’s sometimes useful to parent in a separate axis. For example, when an Axis node is parented to other objects in a scene, the node globally controls the scene - rotating the axis rotates all objects in the scene." /><Url Source="../content/reference_guide/3d_nodes/basicmaterial.html" Title="BasicMaterial" Abstract="BasicMaterial This node lets you control what material your objects seem to be made of. It combines the Diffuse, Specular, and Emission nodes, allowing you to control all three aspects of the material with a single node." /><Url Source="../content/reference_guide/3d_nodes/blendmat.html" Title="BlendMat" Abstract="BlendMat The BlendMat node sets how the pixels colored by the material it is applied to combine with the pixels from objects behind. It is like the MergeMat node, but instead of blending with another material, it blends with whatever is rendered behind in the 3D scene." /><Url Source="../content/reference_guide/3d_nodes/camera.html" Title="Camera" Abstract="Camera Cameras may be connected to either the Scene node or the ScanlineRender node. Camera connected to a ScanlineRender node define the projection for use by the 3D renderer. You can connect additional cameras to the Scene node and switch between them by choosing the viewing camera from the dropdown menu at the top of the Viewer. You can also read in .fbx and .abc scene files containing standard cameras, though only one camera per Camera node can be read." /><Url Source="../content/reference_guide/3d_nodes/cameratracker.html" Title="CameraTracker" Abstract="CameraTracker CameraTracker (NukeX and Nuke Studio only) is designed to provide an integrated camera tracking or matchmoving tool, allowing you to create a virtual camera whose movement matches that of your original camera. Tracking camera movement in a 2D footage enables you to add virtual 3D objects to your 2D footage." /><Url Source="../content/reference_guide/3d_nodes/card.html" Title="Card" Abstract="Card The Card node creates the simplest type of object you can add to a 3D scene - a plane onto which you can map a texture. A card object may be distorted using the Lens Distortion tab or deformed as a bilinear or bicubic object using the Deform tab." /><Url Source="../content/reference_guide/3d_nodes/crosstalkgeo.html" Title="CrosstalkGeo" Abstract="CrosstalkGeo With the CrosstalkGeo node, you can move the XYZ points on your geometry using the crosstalk curves for each axis." /><Url Source="../content/reference_guide/3d_nodes/cube.html" Title="Cube" Abstract="Cube The Cube node creates an adjustable cube in a 3D scene. You can map a texture on to the cube by attaching an image to the img input." /><Url Source="../content/reference_guide/3d_nodes/cylinder.html" Title="Cylinder" Abstract="Cylinder The Cylinder node creates an adjustable cylinder in a 3D scene. You can map a texture on to the cylinder by attaching an image to the img input." /><Url Source="../content/reference_guide/3d_nodes/depthgenerator.html" Title="DepthGenerator" Abstract="DepthGenerator The DepthGenerator node (NukeX and Nuke Studio only) allows you to generate a depth map from your footage. The node uses information from a tracked camera to create a channel that displays variations in depth." /><Url Source="../content/reference_guide/3d_nodes/depthtopoints.html" Title="DepthToPoints" Abstract="DepthToPoints DepthToPoints is a gizmo containing the DepthToPosition and PositionToPoints nodes. It can be used to generate a 3D point cloud from a depth pass and 3D camera." /><Url Source="../content/reference_guide/3d_nodes/depthtoposition.html" Title="DepthToPosition" Abstract="DepthToPosition Generates a position pass from a depth pass and a 3D camera. " /><Url Source="../content/reference_guide/3d_nodes/diffuse.html" Title="Diffuse" Abstract="Diffuse The Diffuse node lets you adjust the color of an illuminated material in a scene. The material appears darker as the surface points away from the light." /><Url Source="../content/reference_guide/3d_nodes/direct.html" Title="Direct" Abstract="Direct Direct lights emit parallel light in one direction and appear to illuminate all objects with equal intensity, as if it was coming from a far away source - you can use direct light to simulate sunlight and moonlight, for example. Being at an infinite distance from the objects, direct light has orientation, but no position. To generate accurate shadows from a Direct light, view the scene through the light (using the Viewer's camera dropdown menu, just like a camera) and adjust the Direct light's scale control so that the part of the scene that should cast shadows fits within the view. This ensures that none of the shadow-casting geometry is missed by the depth map." /><Url Source="../content/reference_guide/3d_nodes/displacegeo.html" Title="DisplaceGeo" Abstract="DisplaceGeo With the DisplaceGeo node, you can modify the shape of your 3D geometry object based on an image. When using the node, each vertex is displaced along its normal with a value corresponding to the image pixel the vertex’s uv attribute points to. The higher the pixel value, the greater the displacement." /><Url Source="../content/reference_guide/3d_nodes/displacement.html" Title="Displacement" Abstract="Displacement Like the DisplaceGeo node, the Displacement shader node also performs displacement mapping, and at first glance the nodes seem very similar. However, the approach they have on performing displacement mapping is different." /><Url Source="../content/reference_guide/3d_nodes/editgeo.html" Title="EditGeo" Abstract="EditGeo The EditGeo node lets you modify geometry, including point cloud meshes, by selecting vertices and manipulating them in the 3D Viewer. EditGeo also includes a Transform tab to translate, rotate, and scale 3D objects." /><Url Source="../content/reference_guide/3d_nodes/emission.html" Title="Emission" Abstract="Emission The Emission node simulates lamps or other sources that emit light. " /><Url Source="../content/reference_guide/3d_nodes/environment.html" Title="Environment" Abstract="Environment Environment lights illuminates objects using an image of light from a real-world environment. This image-based lighting is generated using High Dynamic Range (HDR) images." /><Url Source="../content/reference_guide/3d_nodes/fillmat.html" Title="FillMat" Abstract="FillMat The FillMat node lets you replace selected material channels with a constant color. Typically, you would use this node to make one object hold out the others, similar to using a black Constant node as the input texture. However, the advantage of using the FillMat node is that you can easily apply it to the alpha channel in addition to the rgb channels and the it doesn’t break the shading sequence, so you can insert it after other material nodes in your node tree." /><Url Source="../content/reference_guide/3d_nodes/geoselect.html" Title="GeoSelect" Abstract="GeoSelect The GeoSelect node allows you to select individual vertices on a 3D geometry object and save and restore your selections." /><Url Source="../content/reference_guide/3d_nodes/light.html" Title="Light" Abstract="Light You can use the Light node to add a direct, point, or spot light into your script rather than using specific predefined light nodes. The light type dropdown defines which light is created and enables or disables the relevant controls in the properties panel. The node can also import lights from .fbx files using the File tab." /><Url Source="../content/reference_guide/3d_nodes/loggeo.html" Title="LogGeo" Abstract="LogGeo Move the XYZ of the points by raising the values to a power. This can be useful if you need to visualize rgb values as a point cloud by treating the rgb values as xyz positions." /><Url Source="../content/reference_guide/3d_nodes/lookupgeo.html" Title="LookupGeo" Abstract="LookupGeo The LookupGeo node lets you use lookup curves to modify the shape of your 3D geometry objects. It offers you direct global control over each of the vertex x, y, and z values respectively. You can, for example, only modify all the y values without touching the x and z values." /><Url Source="../content/reference_guide/3d_nodes/mergegeo.html" Title="MergeGeo" Abstract="MergeGeo Merges your 3D geometry objects together into one big geometry so you can process all of them at the same time." /><Url Source="../content/reference_guide/3d_nodes/mergemat.html" Title="MergeMat" Abstract="MergeMat Combine two shader nodes together, using compositing algorithms like none, replace, over, and stencil. The MergeMat node is particularly useful for combining multiple Project3D nodes, allowing you to composite 2D images projected onto the 3D geometry atop each other." /><Url Source="../content/reference_guide/3d_nodes/modelbuilder.html" Title="ModelBuilder" Abstract="ModelBuilder The ModelBuilder node (NukeX and Nuke Studio only) provides an easy way to create 3D models for 2D shots. You can build a model by creating shapes and then editing them, and align models over your 2D footage by dragging vertices to their corresponding 2D location." /><Url Source="../content/reference_guide/3d_nodes/modifyrib.html" Title="ModifyRIB" Abstract="ModifyRIB The ModifyRIB node (NukeX only) lets you insert RIB (RenderMan Interface Bytestream) statements into your script to modify a RenderMan bytestream before it’s passed to the PrmanRender node." /><Url Source="../content/reference_guide/3d_nodes/normals.html" Title="Normals" Abstract="Normals The Normals node lets you manipulate the normals of your 3D geometry object. Object normals are vectors that are perpendicular to the surface. They are used in lighting calculations to determine how the light should bounce off a surface at any particular point. By manipulating them, you can control the diffuse and specular light contributions." /><Url Source="../content/reference_guide/3d_nodes/phong.html" Title="Phong" Abstract="Phong Uses the Phong shading algorithm to provide accurate shading and highlights. The Phong node has several map inputs you can use to mask the effect of the node." /><Url Source="../content/reference_guide/3d_nodes/point.html" Title="Point" Abstract="Point A Point light is a point in 3D space that emits light in every direction. A real world example of a point light is a light bulb. You can use Point lights to simulate light bulbs, lamps, and candles, for example." /><Url Source="../content/reference_guide/3d_nodes/pointcloudgenerator.html" Title="PointCloudGenerator" Abstract="PointCloudGenerator Using the PointCloudGenerator node (NukeX and Nuke Studio only) you can create a dense point cloud based on the information generated by CameraTracker and use the dense point cloud further to create 3D meshes of your 2D footage. Dense point clouds are a useful starting point for 3D modeling and positioning objects in a scene." /><Url Source="../content/reference_guide/3d_nodes/poissonmesh.html" Title="PoissonMesh" Abstract="PoissonMesh The PoissonMesh node (NukeX and Nuke Studio only) uses information from a dense point cloud to generate a mesh that you can further use as a 3D object, in 3D modeling for instance. The PoissonMesh node is based on the Poisson Surface Reconstruction calculation method. The original source code and paper were created by Michael Kazhdan, Matthew Bolitho, and Hugues Hoppe (for more information, see http://www.cs.jhu.edu/~misha/Code/PoissonRecon/)." /><Url Source="../content/reference_guide/3d_nodes/positiontopoints.html" Title="PositionToPoints" Abstract="PositionToPoints Generates a 3D point cloud from an xyz image, such as a position pass. If all the data is in multiple channels in the input image, then set the surface point to the channels that contain the xyz data in the input image, and optionally set the surface normal to the channels with the point normals. If you have the xyz and normals in separate image streams, you can instead connect the xyz stream to the pos input and optionally connect the normals to the norm input." /><Url Source="../content/reference_guide/3d_nodes/prmanrender.html" Title="PrmanRender" Abstract="PrmanRender PrmanRender (NukeX and Nuke Studio only) is a render node that works together with Pixar’s PhotoRealistic RenderMan® Pro Server 15.2, 16.4, or 17.0 software to give you an even better quality render result. PrmanRender is an alternative to Nuke’s ScanlineRender with additional features for rendering 3D scenes. With PrmanRender, you have control over aspects like shadows and reflections in your render result." /><Url Source="../content/reference_guide/3d_nodes/proceduralnoise.html" Title="ProceduralNoise" Abstract="ProceduralNoise The ProceduralNoise (or ProcGeo) node lets you modify your 3D geometry objects using a Perlin noise function that creates seemingly random noise. For example, you could use this node to generate animated noise for rippling waves or clouds, or to create a terrain from a flat card." /><Url Source="../content/reference_guide/3d_nodes/project3d.html" Title="Project3D" Abstract="Project3D The Project3D node projects an input image through a camera onto the 3D object. " /><Url Source="../content/reference_guide/3d_nodes/radialdistort.html" Title="RadialDistort" Abstract="RadialDistort The RadialDistort node is a non-linear transformation of the vertices along directions from the object center, giving either a barrel or pin-cushion distortion." /><Url Source="../content/reference_guide/3d_nodes/readgeo.html" Title="ReadGeo" Abstract="ReadGeo Imports geometry from a specified location. The geometry is identified by the file name, which may just be a string interpreted by one of the reader implementations and not an actual file on the disk. You can read in:" /><Url Source="../content/reference_guide/3d_nodes/reflection.html" Title="Reflection" Abstract="Reflection Reflection is the familiar physical phenomenon where an image of an object is cast back from a particular kind of surface, such as glass or water. Using the PositionToPoints node, you can replicate this effect in your render result of 3D objects, and using the Reflection node, you can adjust the controls for creating the reflection effect. PrmanRender uses raytracing to create this effect and you can use the Reflection node to adjust the result. Without the PrmanRender node and RenderMan Pro Server software though, the Reflection node has no effect." /><Url Source="../content/reference_guide/3d_nodes/refraction.html" Title="Refraction" Abstract="Refraction Refraction is the familiar physical phenomenon of light traveling differently through different materials and thus reflecting differently off objects behind that material. For example, if you have a glass of water with a straw in it, the part of the straw that’s not in water appears to be in a different angle to the part that is in the water. This is due to water bending the light waves.PrmanRender uses raytracing to create this effect and you can use the Refraction node to adjust the result. Without the PrmanRender node and RenderMan Pro Server software though, the Refraction node has no effect." /><Url Source="../content/reference_guide/3d_nodes/relight.html" Title="Relight" Abstract="Relight The Relight node takes a 2D image containing normal and point position passes and lets you relight it using 3D lights. Essentially bypassing the need to return to a 3D application and re-render the lighting, Relight provides a quick and interactive way to relight a 3D scene in a 2D environment." /><Url Source="../content/reference_guide/3d_nodes/scanlinerender.html" Title="ScanlineRender" Abstract="ScanlineRender When connected to a Scene node, the ScanlineRender node renders all the objects and lights connected to that scene from the perspective of the Camera connected to the cam input (or a default camera if no cam input exists). The rendered 2D image is then passed along to the next node in the compositing tree, and you can use the result as an input to other nodes in the script." /><Url Source="../content/reference_guide/3d_nodes/scene.html" Title="Scene" Abstract="Scene Regardless of its location in your script, the Scene node is the highest-level node in the scene hierarchy because it references all the elements in a 3D workspace - all the geometric objects, cameras, and lights." /><Url Source="../content/reference_guide/3d_nodes/specular.html" Title="Specular" Abstract="Specular The Specular node controls how bright and wide the highlights on a material seem. The location of the viewpoint is significant: the specular highlights are the brightest along the direct angle of reflection." /><Url Source="../content/reference_guide/3d_nodes/sphere.html" Title="Sphere" Abstract="Sphere The Sphere node creates an adjustable sphere in a 3D scene. You can map a texture on to the sphere by attaching an image to the img input." /><Url Source="../content/reference_guide/3d_nodes/spot.html" Title="Spot" Abstract="Spot Spot nodes create a point in 3D space that emits a cone-shaped light in a given direction. A real world example of a spot light is a desk lamp." /><Url Source="../content/reference_guide/3d_nodes/transformgeo.html" Title="TransformGeo" Abstract="TransformGeo The TransformGeo node lets you translate, rotate, scale, and skew 3D geometry objects. " /><Url Source="../content/reference_guide/3d_nodes/trilinear.html" Title="Trilinear" Abstract="Trilinear The Trilinear node lets you warp your 3D geometry object as a whole by using trilinear interpolation from the object’s bounding box to the given destination box. For example, you can use this node to create animated object deformations, such as the squash of a bouncing ball." /><Url Source="../content/reference_guide/3d_nodes/uvproject.html" Title="UVProject" Abstract="UVProject The UVProject node sets the UV coordinates for an object, allowing you to project a texture image onto the object. If the object already has UV coordinates, this node replaces them." /><Url Source="../content/reference_guide/3d_nodes/uvtile.html" Title="UVTile" Abstract="UVTile When projecting textures onto an object, use the UVTile node to modify the coordinates of a given UV (or UDIM) patch and adjust the behavior of individual patches." /><Url Source="../content/reference_guide/3d_nodes/wireframe.html" Title="Wireframe" Abstract="Wireframe The Wireframe node allows you render a wireframe overlay on the surface of your geometry object." /><Url Source="../content/reference_guide/3d_nodes/writegeo.html" Title="WriteGeo" Abstract="WriteGeo Writes out geometry to a specified file. You can export: OBJ files FBX files containing meshes, point clouds, cameras, lights, and axes." /><Url Source="../content/reference_guide/particles_nodes/particles_nodes_nukex.html" Title="Particles Nodes" Abstract="Particles Nodes Particles nodes (NukeX and Nuke Studio only) deal with Nuke's built-in particle system, often used for creating effects like fog, smoke, rain, snow, and explosions." /><Url Source="../content/reference_guide/particles_nodes/particlebounce.html" Title="ParticleBounce" Abstract="ParticleBounce With ParticleBounce, you can make your particles appear to bounce off a 3D shape instead of traveling through it. Use the ParticleBounce object control in combination with real geometry to make it look as though the particles are interacting with it. Each particle checks for intersection with the geometry, then bounces according to the normal at that point. This is currently limited to the primitive Nuke shapes plane, sphere, and cylinder." /><Url Source="../content/reference_guide/particles_nodes/particlecache.html" Title="ParticleCache" Abstract="ParticleCache The ParticleCache node allows you to store the geometry simulation for a particle system to file. It can then be read back in different sessions of Nuke or on different machines without the need for recalculation." /><Url Source="../content/reference_guide/particles_nodes/particlecurve.html" Title="ParticleCurve" Abstract="ParticleCurve With ParticleCurve, you can apply a curve to particle properties (such as size or mass) to change them over time. You can, for instance, adjust the curve for your particles’ alpha channel so that each particle fades to invisibility toward the end of its lifetime." /><Url Source="../content/reference_guide/particles_nodes/particledirectionalforce.html" Title="ParticleDirectionalForce" Abstract="ParticleDirectionalForce Use ParticleDirectionalForce to apply a directional force, rather like gravity, to your particles." /><Url Source="../content/reference_guide/particles_nodes/particledrag.html" Title="ParticleDrag" Abstract="ParticleDrag With ParticleDrag, you can apply drag on your particles to gradually alter their velocity over time. This means particles will start off fast and gradually slow down, unless you use negative values to apply the reverse effect." /><Url Source="../content/reference_guide/particles_nodes/particleemitter.html" Title="ParticleEmitter" Abstract="ParticleEmitter ParticleEmitter is the only required node for creating particles, but with no geometry input the normal along which particles travel is the y-axis. Once you’ve connected a Viewer and your geometry, click play on the timeline to see the default set of particles emitting from your geometry." /><Url Source="../content/reference_guide/particles_nodes/particleexpression.html" Title="ParticleExpression" Abstract="ParticleExpression With ParticleExpression, you can adjust your particles by setting expressions on their attributes. Using expressions gives you a vast variety of ways of adjusting the way your particles behave. You can use a similar expression syntax as you would elsewhere in Nuke, with the exception that some functions which work in normal Nuke expressions aren't available in particle expressions and vice versa. The main difference between Nuke’s Expression node and ParticleExpression is that particle expressions can return a 3D vector instead of just a single floating point number. If a particle expression returns a single number N in a field that expects a vector (such as velocity or acceleration) it will be converted into a vector with N for each of its components. For more information about functions you can use with ParticleExpression, see Particle Expression Functions in the Nuke ." /><Url Source="../content/reference_guide/particles_nodes/particlegravity.html" Title="ParticleGravity" Abstract="ParticleGravity With ParticleGravity, you can apply gravity to your particles. Unlike our familiar gravity, particle gravity works in any or all of the x, y and z directions, and you can also set negative values to them. When you connect the ParticleGravity node to your particle stream, an arrow appears in the Viewer, which you can then use to control the gravity. The bigger and longer the arrow, the stronger the gravity effect." /><Url Source="../content/reference_guide/particles_nodes/particlelookat.html" Title="ParticleLookAt" Abstract="ParticleLookAt With ParticleLookAt, you can determine a 3D point at which all the particles within a certain region are looking toward." /><Url Source="../content/reference_guide/particles_nodes/particlemerge.html" Title="ParticleMerge" Abstract="ParticleMerge If you have more than one set of particle nodes, and you want to combine them into one stream, ParticleMerge is your node. Attach your particle streams to ParticleMerge’s numbered inputs and you’re all set." /><Url Source="../content/reference_guide/particles_nodes/particlemotionalign.html" Title="ParticleMotionAlign" Abstract="ParticleMotionAlign You can add ParticleMotionAlign in your particle stream to realign all the particles along their direction of motion." /><Url Source="../content/reference_guide/particles_nodes/particlepointforce.html" Title="ParticlePointForce" Abstract="ParticlePointForce With ParticlePointForce, you can attract or repel particles to or from a certain point in the 3D space. You can use an animated or still axis expression-linked to the position value, or a value you have chosen to enter manually." /><Url Source="../content/reference_guide/particles_nodes/particlesettings.html" Title="ParticleSettings" Abstract="ParticleSettings Use the steps per frame control in the ParticleSettings control panel to adjust how many steps of particle simulation take place per animation frame." /><Url Source="../content/reference_guide/particles_nodes/particlespawn.html" Title="ParticleSpawn" Abstract="ParticleSpawn If you’re looking to have your existing particles emit even more particles, you should turn to ParticleSpawn. This node emits particles from existing particles." /><Url Source="../content/reference_guide/particles_nodes/particlespeedlimit.html" Title="ParticleSpeedLimit" Abstract="ParticleSpeedLimit ParticleSpeedLimit restricts particles to a specified minimum and maximum speed. " /><Url Source="../content/reference_guide/particles_nodes/particletogeo.html" Title="ParticleToGeo" Abstract="ParticleToGeo With ParticleToGeo, you can create 3D geometry for particles in specific channels. If you have a 3D geometry object connected anywhere in your particle stream, ParticleToGeo node duplicates that geometry at each particle." /><Url Source="../content/reference_guide/particles_nodes/particleturbulence.html" Title="ParticleTurbulence" Abstract="ParticleTurbulence ParticleTurbulence applies noise to the particle movement, dispersing the particles in the x, y and/or z directions." /><Url Source="../content/reference_guide/particles_nodes/particlevortex.html" Title="ParticleVortex" Abstract="ParticleVortex ParticleVortex applies a circular force to the particles and attracts them to an imaginary line, thus creating a whirlpool of particles. When you connect the ParticleVortex node to your particle stream, an arrow appears in the 3D Viewer, which you can then use to determine direction and velocity of the vortex effect. The bigger and longer the arrow, the stronger the effect." /><Url Source="../content/reference_guide/particles_nodes/particlewind.html" Title="ParticleWind" Abstract="ParticleWind With ParticleWind, you can simulate a wind blowing on the particles. When you connect the ParticleWind node to your particle stream, an arrow appears in the Viewer, which you can then use to determine direction and velocity of the wind. The bigger and longer the arrow, the stronger the wind effect." /><Url Source="../content/reference_guide/deep_nodes/deep_nodes.html" Title="Deep Nodes" Abstract="Deep Nodes Deep nodes deal with Deep image compositing, where each pixel can have multiple values. " /><Url Source="../content/reference_guide/deep_nodes/deepcolorcorrect.html" Title="DeepColorCorrect" Abstract="DeepColorCorrect This is a ColorCorrect node for deep compositing. It applies the color correction to all samples at each pixel. You can use DeepColorCorrect to create a matte by setting the gain value for your alpha channel to 0 and setting the offset value to 1 in the range you want the matte for." /><Url Source="../content/reference_guide/deep_nodes/deepcrop.html" Title="DeepCrop" Abstract="DeepCrop You can use the DeepCrop node to: crop deep data in front of or behind certain planes in depth, or" /><Url Source="../content/reference_guide/deep_nodes/deepexpression.html" Title="DeepExpression" Abstract="DeepExpression The DeepExpression node allows you to apply complex mathematical formulae to deep data using Tcl expressions." /><Url Source="../content/reference_guide/deep_nodes/deepfromframes.html" Title="DeepFromFrames" Abstract="DeepFromFrames The DeepFromFrames node copies multiple input frames from a regular 2D image to samples in a single deep frame." /><Url Source="../content/reference_guide/deep_nodes/deepfromimage.html" Title="DeepFromImage" Abstract="DeepFromImage Using DeepFromImage you can convert a standard 2D image to a deep image with a single sample for each pixel at the depth defined by the depth.z channel." /><Url Source="../content/reference_guide/deep_nodes/deepholdout.html" Title="DeepHoldout" Abstract="DeepHoldout DeepHoldout removes or fades out samples in the main input that are occluded by samples in the holdout input. Unlike the DeepMerge node, DeepHoldout produces a flattened output image that’s no longer in deep format." /><Url Source="../content/reference_guide/deep_nodes/deepmerge.html" Title="DeepMerge" Abstract="DeepMerge DeepMerge lets you merge samples from multiple deep images, so that each output pixel contains all of the samples from the same pixel in each input. You can also use it to remove or fade out samples in the B input that are occluded by samples in the A input. Unlike the DeepHoldout node, DeepMerge doesn’t flatten the data but produces a deep output image." /><Url Source="../content/reference_guide/deep_nodes/deepread.html" Title="DeepRead" Abstract="DeepRead The DeepRead node loads deep images from disk in two formats: DTEX (generated from Pixar’s PhotoRealistic RenderMan® Pro Server)." /><Url Source="../content/reference_guide/deep_nodes/deeprecolor.html" Title="DeepRecolor" Abstract="DeepRecolor DeepRecolor merges: a standard 2D image (color input) and a deep image file that only contains opacity for each sample (depth input)." /><Url Source="../content/reference_guide/deep_nodes/deepreformat.html" Title="DeepReformat" Abstract="DeepReformat DeepReformat is the Reformat node for deep data. You can use it to set your deep image’s dimensions, scale, and so on." /><Url Source="../content/reference_guide/deep_nodes/deepsample.html" Title="DeepSample" Abstract="DeepSample Use this node to sample any given pixel in a deep image. Move the pos indicator over pixels in the Viewer to produce deep sample information in the DeepSample control panel." /><Url Source="../content/reference_guide/deep_nodes/deeptoimage.html" Title="DeepToImage" Abstract="DeepToImage You can use this node to flatten a deep image - in other words, merge all the samples in a deep image into a regular 2D image." /><Url Source="../content/reference_guide/deep_nodes/deeptopoints.html" Title="DeepToPoints" Abstract="DeepToPoints You can use this node to transform the deep pixel samples into points in 3D space that you can see inNuke's 3D view, like a point cloud. This node is useful for position reference." /><Url Source="../content/reference_guide/deep_nodes/deeptransform.html" Title="DeepTransform" Abstract="DeepTransform You can use this node to reposition deep data. It allows you to: translate the samples along the x, y, and z axes, and" /><Url Source="../content/reference_guide/deep_nodes/deepwrite.html" Title="DeepWrite" Abstract="DeepWrite This node renders the result of all upstream deep nodes and saves the result to disk in the scanline OpenEXR 2.0 format (tiled OpenEXR files are not supported)." /><Url Source="../content/reference_guide/views_nodes/views_nodes.html" Title="Views Nodes" Abstract="Views Nodes Views nodes deal with stereoscopic or multi-view compositing. " /><Url Source="../content/reference_guide/views_nodes/anaglyph.html" Title="Anaglyph" Abstract="Anaglyph If you’re working on a stereoscopic or multi-view project, you can use this node to convert your input into an anaglyph image. By default, the left input is filtered to remove blue and green, and the right view to remove red." /><Url Source="../content/reference_guide/views_nodes/joinviews.html" Title="JoinViews" Abstract="JoinViews If you have separate files for the views that exist in your Project Settings (for example, one file for the left view and another for the right), JoinViews lets you combine these files into a single output. This can be useful if:" /><Url Source="../content/reference_guide/views_nodes/mixviews.html" Title="MixViews" Abstract="MixViews If you’re working on a stereoscopic or multi-view project, you can use this node to display a blend between two views in the Viewer. This allows you to check how elements in these views are aligned." /><Url Source="../content/reference_guide/views_nodes/oneview.html" Title="OneView" Abstract="OneView OneView lets you separate one view for processing. This is useful if you need to perform different actions on different views, for example if you want to color correct one view but not the other. Any changes you make using subsequent nodes are only applied to the extracted view (regardless of what view you are displaying in the Viewer)." /><Url Source="../content/reference_guide/views_nodes/reconverge.html" Title="ReConverge" Abstract="ReConverge If you’re working on a stereoscopic or multi-view project, the ReConverge node lets you shift convergence (the inward rotation of the eyes or cameras) so that any selected point in the image appears at screen depth when viewed with 3D glasses. This point is called the convergence point. It is the point where the lines of sight from the two cameras meet." /><Url Source="../content/reference_guide/views_nodes/shuffleviews.html" Title="ShuffleViews" Abstract="ShuffleViews You can use this node to rearrange the views in your script. For example, you can swap the left and right views around in the pipeline, so that Nuke uses the left input for the right eye and vice versa." /><Url Source="../content/reference_guide/views_nodes/sidebyside.html" Title="SideBySide" Abstract="SideBySide If you’re working on a stereoscopic or multi-view project, you can use this node to display two views next to each other in the Viewer." /><Url Source="../content/reference_guide/views_nodes/split_and_join.html" Title="Split and Join" Abstract="Split and Join Split and Join is a combination of OneView and JoinViews nodes. It allows you to extract all the views in your Project Settings, process them individually, and then merge them back together. It’s no different to using several OneView nodes together with a JoinViews node, but it makes working faster because you do not need to add each node separately." /><Url Source="../content/reference_guide/metadata_nodes/metadata_nodes.html" Title="Metadata Nodes" Abstract="Metadata Nodes Metadata nodes deal with information embedded in your images, such as the image’s original bit depth, width, and height, for example." /><Url Source="../content/reference_guide/metadata_nodes/addtimecode.html" Title="AddTimeCode" Abstract="AddTimeCode Adds a time code to the metadata passed down from an input node. The default settings add the time code 01:00:00:00 to the first frame. This time code is updated throughout the frame range according to the input clip’s playback speed, which in turn is controlled by the fps (frames per second) control in the Project Settings. If you change the fps value in the Project Settings, the time code in the metadata is updated to reflect the change." /><Url Source="../content/reference_guide/metadata_nodes/comparemetadata.html" Title="CompareMetaData" Abstract="CompareMetaData Connecting nodes to the CompareMetaData node enables you to quickly determine metadata differences between files. The CompareMetaData node only shows keys and values where there are differences between the two inputs. For example, if you were having trouble with QuickTime frame rates, you could connect up two QuickTime files and immediately see differences between the input/frame_rate key values." /><Url Source="../content/reference_guide/metadata_nodes/copymetadata.html" Title="CopyMetadata" Abstract="CopyMetadata This node copies metadata from one image to another, filtering the metadata to exclude some keys if required." /><Url Source="../content/reference_guide/metadata_nodes/modifymetadata.html" Title="ModifyMetaData" Abstract="ModifyMetaData The ModifyMetaData node enables you to add, edit, or remove the metadata associated with a file." /><Url Source="../content/reference_guide/metadata_nodes/viewmetadata.html" Title="ViewMetaData" Abstract="ViewMetaData ViewMetaData lets you inspect metadata (such as the image’s original bit depth, width, and height) passed down by an input node. The data is split into two columns, keys and the values associated with them." /><Url Source="../content/reference_guide/toolsets_nodes/toolsets_nodes.html" Title="ToolSets Nodes" Abstract="ToolSets Nodes Tool sets deal with custom tools created in Nuke. " /><Url Source="../content/reference_guide/toolsets_nodes/create.html" Title="Create" Abstract="Create Creates a node tool set in the Nuke toolbar. This can be useful if you find yourself creating the same set of nodes repeatedly. Once you have created a tool set, you can easily create the nodes that it contains by selecting it in the ToolSets menu (rather than creating each node separately)." /><Url Source="../content/reference_guide/toolsets_nodes/delete.html" Title="Delete" Abstract="Delete Allows you to delete a tool set you’ve created earlier. Simply click ToolSets &gt; Delete in the toolbar and select the tool set you want to remove. A dialog displays asking you to confirm the removal. Click Yes." /><Url Source="../content/reference_guide/other_nodes/other_nodes.html" Title="Other Nodes" Abstract="Other Nodes Other nodes contain additional nodes for script and Viewer management. " /><Url Source="../content/reference_guide/other_nodes/assert.html" Title="Assert" Abstract="Assert You can use this node to test the validity of a Tcl expression. If the expression resolves to false, this node raises an error." /><Url Source="../content/reference_guide/other_nodes/audioread.html" Title="AudioRead" Abstract="AudioRead You can use this node to read in an audio file and view it in the Curve Editor and Dope Sheet in order to line up keyframes of your composition with the waveform of the sound. You can then flipbook the audio with your footage to preview your comp with sound." /><Url Source="../content/reference_guide/other_nodes/backdrop.html" Title="Backdrop" Abstract="Backdrop This node visually groups nodes in the Node Graph. Inserting a Backdrop node creates a box behind the nodes. When you move the box, all the nodes that overlap the box are moved too. By inserting several Backdrop nodes, you can group the nodes in your node tree onto boxes of different colors and titles. This makes it easier to find a particular node in a large node tree, for example." /><Url Source="../content/reference_guide/other_nodes/blinkscript.html" Title="BlinkScript" Abstract="BlinkScript The BlinkScript node runs the The Foundry's Blink framework enabling us to write our code once and run it on any supported device. This is achieved through code translation, in which  the Blink code is turned into specific code for each target device.  Code is generated and compiled on-the-fly, allowing you to switch between devices at will." /><Url Source="../content/reference_guide/other_nodes/diskcache.html" Title="DiskCache" Abstract="DiskCache DiskCache caches to disk scanlines from its input as they are requested by its output. It does this at full 32-bit floating point. This allows Nuketo reference the cached data instead of constantly recalculating the output of the preceding nodes." /><Url Source="../content/reference_guide/other_nodes/dot.html" Title="Dot" Abstract="Dot You can use the Dot node to make bends in the connecting arrows between other nodes. This can help you keep your script easy to read." /><Url Source="../content/reference_guide/other_nodes/group.html" Title="Group" Abstract="Group You can use the Group node to nest multiple nodes inside a single node. The original nodes are replaced with the Group node. When you create a Group node, its internal structure is shown in a separate Node Graph that opens." /><Url Source="../content/reference_guide/other_nodes/input.html" Title="Input" Abstract="Input Adds an input arrow to a Group node. This allows you to add multiple inputs to your Group or gizmo (for example a main input and a mask input). By default, the inputs are numbered, but if you want to name them, you can do so by renaming the Input nodes." /><Url Source="../content/reference_guide/other_nodes/noop.html" Title="NoOp" Abstract="NoOp NoOp passes the input image through unchanged. It does not alter the image in any way, but can be used as an interface for controlling other nodes. To do so, right-click on the NoOp control panel, select Manage User Knobs, and add the control you need (for example, a checkbox). Then, Ctrl+Cmd+drag this control on top of a control in another node (for example, the disable checkbox of a Blur node). This creates a linking Tcl expression that parents the Blur node’s disable checkbox to the checkbox in the NoOp controls, allowing you to use the NoOp controls to disable the Blur node." /><Url Source="../content/reference_guide/other_nodes/output.html" Title="Output" Abstract="Output Adds an output arrow to a Group node. This is necessary if the node tree that forms the Group has several branches and thus several possible output nodes. It can also be useful if you accidentally delete an Output node from a Group." /><Url Source="../content/reference_guide/other_nodes/postagestamp.html" Title="PostageStamp" Abstract="PostageStamp You can add this node to your script to display a thumbnail render of the output at the current frame or a frame of your choice. This node does not alter the input image in anyway." /><Url Source="../content/reference_guide/other_nodes/precomp.html" Title="Precomp" Abstract="Precomp The Precomp node is like a Group node, but its content is stored in an independent .nk file. This allows you to save a subset of the node tree as a separate Nuke script, render the output of this saved script, and read the rendered output back into the main comp as a single image input. Precomp nodes can be useful in at least two ways:" /><Url Source="../content/reference_guide/other_nodes/stickynote.html" Title="StickyNote" Abstract="StickyNote Lets you add notes to the Node Graph. The notes can be any text or HTML mark-up. Usually, they are made as annotations to the elements in the node tree." /><Url Source="../content/reference_guide/other_nodes/all_plugins.html" Title="All plugins" Abstract="All plugins This menu contains all nodes available in Nuke, including any unsupported nodes (such as earlier versions of the currently supported nodes). Note that some of these nodes may be unstable or cause unexpected behavior." /><Url Source="../content/reference_guide/furnacecore_nodes/furnacecore_nodes_nukex.html" Title="FurnaceCore Nodes" Abstract="FurnaceCore Nodes FurnaceCore nodes  contain the most popular Furnace plug-ins incorporated in NukeX and Nuke Studio." /><Url Source="../content/reference_guide/furnacecore_nodes/f_align.html" Title="F_Align" Abstract="F_Align F_Align takes two sequences that were shot of the same scene and lines them up spatially. It uses Global Motion Estimation (GME) to calculate a four-corner pin so that each frame in one shot (the source input) will be aligned with the corresponding frame in a second shot (the reference input). The result is the source image which has been repositioned to line up with the reference image." /><Url Source="../content/reference_guide/furnacecore_nodes/f_deflicker2.html" Title="F_DeFlicker2" Abstract="F_DeFlicker2 F_Deflicker2 is used to remove flicker - particularly flicker that is localized and dependent on the geometry of the scene (that is, flicker that is not present across the whole of the image), such as that caused by an un-synchronized fluorescent light in a shot." /><Url Source="../content/reference_guide/furnacecore_nodes/f_regrain.html" Title="F_ReGrain" Abstract="F_ReGrain F_ReGrain is used to add grain to a sequence. It is designed to sample an area of grain from one image and then to generate unlimited amounts of this grain with exactly the same statistics as the original. This new grain can then be applied to another image." /><Url Source="../content/reference_guide/furnacecore_nodes/f_rigremoval.html" Title="F_RigRemoval" Abstract="F_RigRemoval F_RigRemoval eliminates unwanted objects, or rigs, from image sequences without the need for accurate rotoscoping or keying to produce a clean plate. The rig removal algorithm works by estimating the background motion between successive frames, ignoring the foreground object, and then using the motion information to look forward and backward in the sequence in order to find the correct piece of background to fill in the missing region." /><Url Source="../content/reference_guide/furnacecore_nodes/f_steadiness.html" Title="F_Steadiness" Abstract="F_Steadiness F_Steadiness uses Global Motion Estimation (GME) to calculate a four-corner pin, so that camera motion within a single shot can be smoothed out over a range of frames or removed by locking to a specific frame." /><Url Source="../content/reference_guide/furnacecore_nodes/f_wireremoval.html" Title="F_WireRemoval" Abstract="F_WireRemoval F_WireRemoval is particularly good at removing wires over heavily motion blurred backgrounds or wires over smoke, dust, or clouds. It can be used to remove each wire in a sequence or to quickly create a clean plate which can then be tracked into place." /><Url Source="../content/reference_guide/ocula_nodes/ocula_nodes.html" Title="Ocula 3.0 Nodes" Abstract="Ocula 3.0 Nodes Ocula nodes are only available if you have an Ocula license for Nuke. " /><Url Source="../content/reference_guide/ocula_nodes/o_colourmatcher.html" Title="O_ColourMatcher" Abstract="O_ColourMatcher The O_ColourMatcher plug-in lets you match the colours of one view with those of another. It has been specifically designed to deal with the subtle colour differences that are sometimes present between stereo views." /><Url Source="../content/reference_guide/ocula_nodes/o_depthtodisparity.html" Title="O_DepthToDisparity" Abstract="O_DepthToDisparity Many Ocula plug-ins rely on disparity fields to produce their output. Usually, disparity fields are created using a combination of the O_Solver and O_DisparityGenerator nodes." /><Url Source="../content/reference_guide/ocula_nodes/o_disparitygenerator.html" Title="O_DisparityGenerator" Abstract="O_DisparityGenerator The O_DisparityGenerator plug-in is used to create disparity fields for stereo images. A disparity field maps the location of a pixel in one view to the location of its corresponding pixel in the other view. It includes two sets of disparity vectors: one maps the left view to the right, and the other maps the right view to the left." /><Url Source="../content/reference_guide/ocula_nodes/o_disparitytodepth.html" Title="O_DisparityToDepth" Abstract="O_DisparityToDepth The O_DisparityToDepth plug-in produces a z-depth map for each view of a stereo clip based on the clip’s disparity field and stereo camera setup." /><Url Source="../content/reference_guide/ocula_nodes/o_disparityviewer.html" Title="O_DisparityViewer" Abstract="O_DisparityViewer The O_DisparityViewer plug-in lets you visualise the disparity vectors in your node tree, display a histogram detailing positive and negative parallax, or overlay the Viewer with parallax violations." /><Url Source="../content/reference_guide/ocula_nodes/o_focusmatcher.html" Title="O_FocusMatcher" Abstract="O_FocusMatcher O_FocusMatcher attempts to correct subtle focus differences that are typically present between the left and right views of a stereo image. It does this by matching the focus distribution of one view to that of the other, based on the disparity vectors upstream." /><Url Source="../content/reference_guide/ocula_nodes/o_interaxialshifter.html" Title="O_InteraxialShifter" Abstract="O_InteraxialShifter The O_InteraxialShifter plug-in lets you reduce the interaxial distance of stereo images; that is, the distance between the two cameras. Using this plug-in, you can generate two new views at specified positions between the original images." /><Url Source="../content/reference_guide/ocula_nodes/o_newview.html" Title="O_NewView" Abstract="O_NewView Using the O_NewView plug-in, you can create a single view from a stereo pair of images. You can create this new view at any position between the original views. The new view replaces both of the existing views." /><Url Source="../content/reference_guide/ocula_nodes/o_occlusiondetector.html" Title="O_OcclusionDetector" Abstract="O_OcclusionDetector O_OcclusionDetector generates a mask for the occluded pixels in each view: that is, pixels visible in one view but not the other." /><Url Source="../content/reference_guide/ocula_nodes/o_retimer.html" Title="O_Retimer" Abstract="O_Retimer O_Retimer is designed to slow down or speed up stereo footage using upstream motion vectors generated by the O_VectorGenerator node. These motion vectors describe how each pixel moves from frame to frame. With accurate motion vectors, it is possible to generate an output image at any point in time throughout the sequence by interpolating along the direction of the motion." /><Url Source="../content/reference_guide/ocula_nodes/o_solver.html" Title="O_Solver" Abstract="O_Solver The O_Solver plug-in defines the geometric relationship between the two views in the input images (that is, the camera relationship or solve). This is necessary if you want to use DisparityGenerator, VectorGenerator, or VerticalAligner down the tree." /><Url Source="../content/reference_guide/ocula_nodes/o_vectorgenerator.html" Title="O_VectorGenerator" Abstract="O_VectorGenerator O_VectorGenerator generates motion vector fields for each view in a stereo image. A motion vector field maps the location of a pixel on one frame to the location of the corresponding pixel in a neighbouring frame. It has the same dimensions as the image, but contains an (x,y) offset per pixel. These offsets show how to warp a neighbouring image onto the current image." /><Url Source="../content/reference_guide/ocula_nodes/o_verticalaligner.html" Title="O_VerticalAligner" Abstract="O_VerticalAligner The O_VerticalAligner plug-in lets you warp views vertically so that their corresponding features align horizontally. The Vertical Skew and Local Alignment options allow you to warp the views while keeping the horizontal position of each pixel the same so that there is no change in convergence." /><Url Source="../content/reference_guide/ocula4_0/ocula_nodes.html" Title="Ocula 4.0 Nodes" Abstract="Ocula 4.0 Nodes Ocula nodes are only available if you have an Ocula license for Nuke. " /><Url Source="../content/reference_guide/ocula4_0/o_colourmatcher4_0.html" Title="O_ColourMatcher" Abstract="O_ColourMatcher The O_ColourMatcher node enables you match the colours of one view with those of another. It has been specifically designed to deal with the subtle colour differences that are sometimes present between stereo views." /><Url Source="../content/reference_guide/ocula4_0/o_depthtodisparity4_0.html" Title="O_DepthToDisparity" Abstract="O_DepthToDisparity Many Ocula nodes rely on disparity maps to produce their output. Usually, disparity maps are created using a combination of the O_Solver and O_DisparityGenerator nodes." /><Url Source="../content/reference_guide/ocula4_0/o_disparitygenerator4_0.html" Title="O_DisparityGenerator" Abstract="O_DisparityGenerator The O_DisparityGenerator node is used to create disparity maps for stereo images. A disparity map describes the location of a pixel in one view in relation to the location of its corresponding pixel in the other view. It includes two sets of disparity vectors: one maps the left view to the right, and the other maps the right view to the left." /><Url Source="../content/reference_guide/ocula4_0/o_disparitytodepth4_0.html" Title="O_DisparityToDepth" Abstract="O_DisparityToDepth The O_DisparityToDepth node produces a z-depth map for each view of a stereo clip based on the clip’s disparity map and stereo camera setup." /><Url Source="../content/reference_guide/ocula4_0/o_disparityviewer4_0.html" Title="O_DisparityViewer" Abstract="O_DisparityViewer The O_DisparityViewer node lets you visualise the disparity vectors in your node tree, display a histogram detailing positive and negative parallax, or overlay the Viewer with parallax violations." /><Url Source="../content/reference_guide/ocula4_0/o_focusmatcher4_0.html" Title="O_FocusMatcher" Abstract="O_FocusMatcher O_FocusMatcher is designed to correct subtle focus differences that are sometimes present between the left and right views of a stereo image. It does this by matching the focus distribution of one view to the other, based on the disparity vectors upstream." /><Url Source="../content/reference_guide/ocula4_0/o_interaxialshifter4_0.html" Title="O_InteraxialShifter" Abstract="O_InteraxialShifter The O_InteraxialShifter node allows you to adjust the interaxial distance of stereo images. Interaxial distance is the distance between the left and right cameras. Using this O_InteraxialShifter node, you can generate two new views at specified positions between the left and right images." /><Url Source="../content/reference_guide/ocula4_0/o_multisample4_0.html" Title="O_MultiSample" Abstract="O_MultiSample The O_MultiSample node allows you to use a Sample input to sample a selected area for one of the following uses:" /><Url Source="../content/reference_guide/ocula4_0/o_newview4_0.html" Title="O_NewView" Abstract="O_NewView Use the O_NewView node to reconstruct a view – either left or right – using the pixels from the other view. For example, you can choose to reconstruct the left view using the pixels from the right view. This can be useful if you want to manipulate one view (with a gizmo, node, or graphics editor for example) and replicate the changes into the other view." /><Url Source="../content/reference_guide/ocula4_0/o_occlusiondetector4_0.html" Title="O_OcclusionDetector" Abstract="O_OcclusionDetector O_OcclusionDetector generates a mask for the occluded pixels in each view: that is, pixels visible in one view but not the other." /><Url Source="../content/reference_guide/ocula4_0/o_retimer4_0.html" Title="O_Retimer" Abstract="O_Retimer O_Retimer is designed to retime footage so that it plays back faster or in slow-motion. O_Retimer uses upstream motion vectors generated by an O_VectorGenerator node to retime the footage. These motion vectors describe how each pixel moves from frame to frame (see O_VectorGenerator). With accurate motion vectors, it is possible to generate an output image at any point in sequence timeline by interpolating along the direction of the motion." /><Url Source="../content/reference_guide/ocula4_0/o_solver4_0.html" Title="O_Solver" Abstract="O_Solver The O_Solver node defines the geometric relationship between the two views in the input images (that is, the camera relationship or solve). This is necessary when aligning footage with O_VerticalAligner. It is also required to calculate aligned disparity vectors, when using the alignment control in O_DisparityGenerator. O_Solver data is not necessary for colour and focus matching using O_ColourMatcher and O_FocusMatcher." /><Url Source="../content/reference_guide/ocula4_0/o_vectorgenerator4_0.html" Title="O_VectorGenerator" Abstract="O_VectorGenerator O_VectorGenerator generates motion vector fields for each view in a stereo image. A motion vector field maps the location of a pixel on one frame to the location of the corresponding pixel in a neighbouring frame. It has the same dimensions as the image, but contains an (x,y) offset per pixel. These offsets show how to warp a neighbouring image onto the current image." /><Url Source="../content/reference_guide/ocula4_0/o_verticalaligner4_0.html" Title="O_VerticalAligner" Abstract="O_VerticalAligner The O_VerticalAligner node lets you warp views vertically so that their corresponding features align horizontally. The Vertical Skew and Local Alignment options allow you to warp the views while keeping the horizontal position of each pixel the same so that there is no change in convergence." /><Url Source="../content/tutorials/tutorials.html" Title="Tutorials" Abstract="Tutorials This section pulls together all the written and video tutorials dotted throughout the documentation into one, easy-to-find area." /><Url Source="../content/getting_started/tutorials/tutorials.html" Title="Written Tutorials" Abstract="Written Tutorials Welcome to the written tutorials! Introduction If you’ve gone through the Getting Started section  - which we highly recommend - you already know something about Nuke. These tutorials show how to pull everything together through a series of practical examples." /><Url Source="../content/getting_started/tutorials/projects.html" Title="The Projects" Abstract="The Projects These tutorials include the following projects: Tutorial 1: Compositing Basics on page 1 explains the Nuke user interface, project workflow, and basic compositing tasks." /><Url Source="../content/getting_started/tutorials/installing_project_files.html" Title="Installing the Project Files" Abstract="Installing the Project Files Before you continue, download the tutorial project files from The Foundry website and move them to a directory you’ll create, called “Nuke_Tutorials”. It’s up to you where you put your tutorial files, but here’s our recommendations below depending on your operating system. Whatever you do, you’ll need to remember where you put these files." /><Url Source="../content/getting_started/tutorial1/compositing_basics.html" Title="Tutorial 1: Compositing Basics" Abstract="Tutorial 1: Compositing Basics Hello! This tutorial is your introduction to Nuke, where you’ll create a simple composite and breeze through most of the windows, on-screen controls, and other user interface items." /><Url Source="../content/getting_started/tutorial1/starting_nuke.html" Title="Starting Nuke" Abstract="Starting Nuke The Nuke icon may appear on your desktop. If so, double-click it to launch the application. Otherwise, start Nuke with one of the methods described below, assuming you have installed Nuke to the default location." /><Url Source="../content/getting_started/tutorial1/using_toolbar.html" Title="Using the Toolbar" Abstract="Using the Toolbar The Toolbar includes the options you can use to build your project, such as importing images, layering images, drawing shapes and masks, applying color correction, and so on. Each Toolbar icon displays a menu of operators or nodes that you can select. Roll the mouse pointer over the Toolbar and you’ll see pop-up tool tips that identify each icon." /><Url Source="../content/getting_started/tutorial1/using_menus.html" Title="Using the Menus" Abstract="Using the Menus The Nuke menu bar appears at the top of your screen, outside the main window. This menu begins with the options File, Edit, Workspace, and so on. When instructed to do so, make selections from the menu bar, or click the right mouse button to choose from a pop-up version of the menu bar." /><Url Source="../content/getting_started/tutorial1/customizing_your_layout.html" Title="Customizing Your Workspace" Abstract="Customizing Your Workspace Nuke gives you several options for customizing the window layout. It’s time for you to claim your copy of Nuke and make it your own! You don’t need to customize the layout for this lesson, but why not try it now for your own personal amusement? Here are some things you can do to reorganize the window layout:" /><Url Source="../content/getting_started/tutorial1/saving_files_backup.html" Title="Saving Files and File Backup" Abstract="Saving Files and File Backup We assume you already know how to save files (Hint: choose File &gt; Save Comp As). In addition, Nuke includes an autosave feature, which helps recover project files after a system failure. Yes, we know that never happens to you, but in the unlikely event that it does, you won’t lose your work when you have autosave enabled." /><Url Source="../content/getting_started/tutorial1/setting_up_project.html" Title="Setting Up the Project" Abstract="Setting Up the Project When you start a new project, you need to define project settings for length or frame range, the number of frames per second for playback, and the output format. These options appear on the Project Settings dialog box." /><Url Source="../content/getting_started/tutorial1/working_nodes.html" Title="Working with Nodes" Abstract="Working with Nodes A node is simply one of the building blocks for the list of operations you want to complete. A node tree is a diagram that shows the order in which the operations are performed. Do the following to add a few nodes and start your node tree. The result creates the background for the project." /><Url Source="../content/getting_started/tutorial1/connection_tips.html" Title="Connection Tips" Abstract="Connection Tips Most nodes have input and output connectors that are used to establish the order in which the operations are calculated." /><Url Source="../content/getting_started/tutorial1/importing_image_sequences.html" Title="Importing Image Sequences" Abstract="Importing Image Sequences For this project, you need to import a few image sequences for the foreground elements and a background plate." /><Url Source="../content/getting_started/tutorial1/navigating_inside_windows.html" Title="Navigating Inside the Windows" Abstract="Navigating Inside the Windows The Node Graph panel can seem very small, especially when your node tree grows. True, you already know how to resize and tear-off the windows, but sooner or later you may run out of display real estate. It’s time to learn some navigation controls that can help you work in the Node Graph (and other windows) in Nuke. Try the following navigation controls:" /><Url Source="../content/getting_started/tutorial1/working_viewers.html" Title="Working with Viewers" Abstract="Working with Viewers The postage stamps on the nodes - those little pictures, often called thumbnails - show what each node passes onto the next node in the tree. Although quite lovely, they won’t do for real compositing work. You need to open a Viewer window to see the full picture." /><Url Source="../content/getting_started/tutorial1/displaying_images_viewer.html" Title="Displaying the Images in a Viewer Window" Abstract="Displaying the Images in a Viewer Window To display the images in a Viewer window: Drag the connector from the Viewer node onto the Read node for the engine.v01 clip." /><Url Source="../content/getting_started/tutorial1/viewing_multiple_inputs.html" Title="Viewing Multiple Inputs" Abstract="Viewing Multiple Inputs To view multiple inputs: Select the Read node for the smoke_left clip, and press 2 at the top of your keyboard or on the numeric key pad." /><Url Source="../content/getting_started/tutorial1/reformatting_images.html" Title="Reformatting Images" Abstract="Reformatting Images Elements created within the Nuke script, such as Background and Ramp, automatically inherit the global format and that’s how you want it for this project. The imported images, however, do not conform to the project settings and must be reformatted." /><Url Source="../content/getting_started/tutorial1/using_proxies_downres.html" Title="Using Proxies and “Down-res”" Abstract="Using Proxies and “Down-res” Proxies are low-resolution versions of the final image you intend to create. For many compositing tasks, the low-res version can help you work faster. Then, when you’re ready to create the final output, switch proxy mode off and return to the full-res version." /><Url Source="../content/getting_started/tutorial1/compositing_images.html" Title="Compositing Images" Abstract="Compositing Images The Merge nodes create a composite with two or more images, using various compositing algorithms. In this example, we’ll do a very simple “A over B” composite to layer the foreground image over the background." /><Url Source="../content/getting_started/tutorial1/color_correcting_images.html" Title="Color-Correcting Images" Abstract="Color-Correcting Images Color-correction and filters can help you integrate the elements for a better composite. In our example, you want to limit the correction to the foreground element only, so you’ll insert a color correction node before the Merge nodes." /><Url Source="../content/getting_started/tutorial1/masking_effects.html" Title="Masking Effects" Abstract="Masking Effects You can apply masks to limit how each of these nodes affects the images. The following shows how to create a Bezier mask to limit color-correction." /><Url Source="../content/getting_started/tutorial1/creating_flipbook_previews.html" Title="Creating Flipbook Previews" Abstract="Creating Flipbook Previews On the Viewer window, the timeline buttons let you play the project, but if you pay attention to the frames-per-second (FPS) field at the top of the Viewer window, you may notice that Nuke doesn’t provide real-time playback. This is because Nuke renders on-the-fly to display images in the Viewer. It’s fast, but also limited by the amount of memory and computer-processing power available to you." /><Url Source="../content/getting_started/tutorial1/tut1_epilogue.html" Title="Epilogue" Abstract="Epilogue In this tutorial, you set up a new project and created a simple composite. You learned how to use (or at least, locate) practically every Nuke window and tool, and you rendered out the result of your composite. You’re finished! Go home!" /><Url Source="../content/getting_started/tutorial2/tracking_stabilizing.html" Title="Tutorial 2: 2D Point Tracking" Abstract="Tutorial 2: 2D Point Tracking This tutorial teaches you how to use Nuke's Tracker node for tracking, stabilizing, and match-moving." /><Url Source="../content/getting_started/tutorial2/1_2_3_4_point_tracks.html" Title="One-Point, Two-Point, Three-Point, Four" Abstract="One-Point, Two-Point, Three-Point, Four Before we get into the first example, let’s review a few tracking concepts. You can track as many features or patterns as required with the Tracker node in Nuke. How do you decide whether to track one, two, or more features? It depends on what you want to do with the data and the level of accuracy you need in the result. Here are some general guidelines:" /><Url Source="../content/getting_started/tutorial2/open_tut2_project_file.html" Title="Open the Tutorial Project File" Abstract="Open the Tutorial Project File In this tutorial, you work from a project file that already includes the node trees. Each tree is setup for the examples that follow." /><Url Source="../content/getting_started/tutorial2/tracking_single_feature.html" Title="Tracking a Single Feature" Abstract="Tracking a Single Feature In this first example you’ll learn how to set up a tracking anchor and then track a single feature, which is the most basic 2D tracking operation. After you achieve a solid track for one feature, you can build on that and track other features as needed." /><Url Source="../content/getting_started/tutorial2/tracking_obscured_features.html" Title="Tracking Obscured Features" Abstract="Tracking Obscured Features At the end of the previous example, you may have noticed the track was dropped at frame 58 when the feature moved off the screen. When features move out of frame, or become obscured by other elements in the image, you can use the track offset feature to pass the tracking operation to another feature in the image. Nuke then attempts to continue the track along its current course." /><Url Source="../content/getting_started/tutorial2/stabilizing_elements.html" Title="Stabilizing Elements" Abstract="Stabilizing Elements Stabilization is the process of removing motion - camera-shake, for example - and locking down the element for your composite. A one-point track provides enough information to stabilize horizontal and vertical motion along the image plane. A two-point track lets you stabilize horizontal and vertical motion, and remove rotation in the image, as well." /><Url Source="../content/getting_started/tutorial2/matchmoving_elements.html" Title="Match-Moving Elements" Abstract="Match-Moving Elements Match-moving is the opposite of stabilization. The intent is to record and use the motion in an image and apply it to another element. In the following example, you’ll use the tracker to match-move and composite a mask image onto the performer in a background plate." /><Url Source="../content/getting_started/tutorial2/tut2_epilogue.html" Title="Epilogue" Abstract="Epilogue In this tutorial, you worked with several examples for the Tracker node. You learned how to record the locations for multiple features and you applied the tracking data for other tasks in the composite, such as stabilization and match-moving." /><Url Source="../content/getting_started/tutorial3/keying_mattes.html" Title="Tutorial 3: Keying and Mattes" Abstract="Tutorial 3: Keying and Mattes This tutorial introduces you to keying in Nuke. You will learn how to use the Primatte, IBK, and Keyer nodes." /><Url Source="../content/getting_started/tutorial3/open_tut3_project_file.html" Title="Open the Tutorial Project File" Abstract="Open the Tutorial Project File The project file for this tutorial includes several node trees for the keying operations described in this chapter." /><Url Source="../content/getting_started/tutorial3/keying_primatte.html" Title="Keying with Primatte" Abstract="Keying with Primatte The Primatte keyer includes a quick “Auto-Compute” option that evaluates your image and determines a good baseline key. From there, you can easily tweak the settings and generate an acceptable matte." /><Url Source="../content/getting_started/tutorial3/image_based_keying.html" Title="Image-Based Keying" Abstract="Image-Based Keying Many keying tools, like Primatte, use a color-pick as the baseline for the matte extraction process and then require the artist to tweak the matte from that baseline. Nuke’s image-based keyer (IBK) uses the pixel values of the compositing images, instead of a color-pick, to generate the best matte for the image you want to extract. It works by generating a processed screen image that preserves the color variations of the blue- or greenscreen and using this - rather than a single color - to pull the key. This generally gives good results and speeds up the keying process when working with uneven blue- or greenscreens." /><Url Source="../content/getting_started/tutorial3/rotoscoping.html" Title="Rotoscoping" Abstract="Rotoscoping In this example, we’ll return to our first keying example to apply a garbage matte and clean-up the aquarium image." /><Url Source="../content/getting_started/tutorial3/keying_video.html" Title="Keying Video" Abstract="Keying Video Nuke’s Keyer node provides standard controls for pulling luma keys, green and blue screens, and color channels. We’ll use this keyer - and a few other nodes - to handle a special keying situation: video." /><Url Source="../content/getting_started/tutorial3/tut3_epilogue.html" Title="Epilogue" Abstract="Epilogue Keying is rarely a simple matter of picking the screen color you want to remove. To get the very best mattes, you often need to combine several techniques and you’ve learned several in this chapter. You’ve pulled mattes with Primatte and Nuke’s Image-based Keyer, and you’ve used the rotoscoping tools to cleanup a matte and control the parts of the image you want to use in the composite." /><Url Source="../content/getting_started/tutorial4/3d_integration.html" Title="Tutorial 4: 3D Integration" Abstract="Tutorial 4: 3D Integration This tutorial teaches you the basics of using Nuke's 3D workspace. Introduction" /><Url Source="../content/getting_started/tutorial4/basic_3d_system.html" Title="The Basic 3D System" Abstract="The Basic 3D System The 3D workspace is defined by a group of nodes in your script. The most basic setup includes a Camera node, a Render node, a Scene or Geometry node, and nodes that provide the 2D images you want to pipe into the 3D compositing space." /><Url Source="../content/getting_started/tutorial4/3d_viewer.html" Title="The 3D Viewer" Abstract="The 3D Viewer Once you have the 3D node structure, you can use any Viewer in Nuke as a gateway to the 3D compositing space. Choose 3D from the view dropdown menu, or press the Tab key over the Viewer to toggle between the 2D and 3D views." /><Url Source="../content/getting_started/tutorial4/geometry_scene_node.html" Title="The Geometry or Scene Node" Abstract="The Geometry or Scene Node Every 3D system needs a piece of geometry - a card, a sphere, a cube, something - to receive an image or clip that the camera can “see.” One is all you need, but you can setup complex systems with a large amount of 3D data. When you have two or more objects for a 3D system, you need a Scene node to create a “place” where the camera (and the ScanlineRender node) can see all the objects at once." /><Url Source="../content/getting_started/tutorial4/camera_node.html" Title="The Camera Node" Abstract="The Camera Node The Camera node creates your view into a scene. It has several controls to help you match the properties of a physical camera. You can animate its position or import animation or tracking data to matchmove your 3D scene with a background plate. A 3D system can have multiple cameras connected to the Scene node, to create different views on a 3D scene." /><Url Source="../content/getting_started/tutorial4/scanlinerender_node.html" Title="The ScanlineRender Node" Abstract="The ScanlineRender Node The last node, ScanlineRender, sends the results of your 3D scene back into your composite as a 2D image. It’s always 2D in, 3D manipulation, and then 2D back out, which is why this is often called “2-and-a-half-D.”" /><Url Source="../content/getting_started/tutorial4/open_tut4_project_file.html" Title="Open the Tutorial Project File" Abstract="Open the Tutorial Project File The “3Dinteg_tutor.nk” project file includes the node trees for the first part of this chapter." /><Url Source="../content/getting_started/tutorial4/setting_up_3d_system.html" Title="Setting Up a 3D System" Abstract="Setting Up a 3D System Let’s start with the basics. In this first example, you’ll create a basic 3D node tree, map an image to a 3D card, manipulate it, and then render the result back out to the 2D composite." /><Url Source="../content/getting_started/tutorial4/making_scene.html" Title="Making a Scene" Abstract="Making a Scene We mentioned earlier the Scene node creates a place where multiple objects may be seen by the camera and the render node. If you only have a single object, you don’t need a Scene node, but where’s the fun in that? Scene nodes make it possible to really tap into Nuke’s ability to handle huge amounts of 3D information, and you should know how to use it." /><Url Source="../content/getting_started/tutorial4/merging_constraining_objects.html" Title="Merging and Constraining Objects" Abstract="Merging and Constraining Objects You can merge objects and move them together as a group. To do so, you need to insert MergeGeo and TransformGeo nodes after the objects. The MergeGeo node first merges the objects together, after which you can use the controls of the TransformGeo node to move the merged objects in the 3D space. You can also use the TransformGeo node to constrain objects, as you may notice later in this tutorial." /><Url Source="../content/getting_started/tutorial4/animating_scene.html" Title="Animating a Scene" Abstract="Animating a Scene The little scene you’ve created would be more interesting with a camera move. You can animate both cameras and objects; in each control panel, you’ll see an Animation button next to each parameter you can animate over time." /><Url Source="../content/getting_started/tutorial4/working_geometry.html" Title="Working with Geometry" Abstract="Working with Geometry In the previous example, you worked with the card object. Nuke also includes primitive geometry, which can be used as set-extension geometry or placeholders for other elements you plan to add to scene." /><Url Source="../content/getting_started/tutorial4/lighting_surface_properties.html" Title="Lighting and Surface Properties" Abstract="Lighting and Surface Properties Nuke includes lighting tools to enhance the existing lighting in the plates and images you include in a 3D scene. Also included are fundamental surfacing tools to control the attributes of the objects in the 3D workspace." /><Url Source="../content/getting_started/tutorial4/tut4_epilogue.html" Title="Epilogue" Abstract="Epilogue In this chapter, you learned how to setup a 3D workspace for your composite, and how to work with 3D geometry and lighting. These are all prerequisite skills for more advanced topics, such as camera projections, match-moving, and set replacement." /><Url Source="../content/tutorials/video_tutorials.html" Title="Video Tutorials" Abstract="Video Tutorials We have a library of Nuke video tutorials organized into the following categories: Getting Started with  - Click here if you are new to Nuke or in need of a refresher on the basics." /><Url Source="../content/tutorials/getting_started_tutorials.html" Title=" Getting Started with Nuke" Abstract="Getting Started with Nuke If you're new to Nuke or simply need a refresher on the basics, we recommend you start with the below tutorials. They familiarize you with the interface and the  product family, and help you perform the most common tasks in Nuke. See:" /><Url Source="../content/tutorials/step_up_to_nuke.html" Title="Step Up to Nuke Training Series" Abstract="Step Up to Nuke Training Series New to Nuke? Learn more with our training series by Lee Lanier, VFX Trainer and author of Digital Compositing with Nuke." /><Url Source="../content/tutorials/nuke_product_family.html" Title="The Nuke Product Family" Abstract="The Nuke Product Family " /><Url Source="../content/tutorials/animation_nuke.html" Title="Animation in Nuke" Abstract="Animation in Nuke " /><Url Source="../content/tutorials/compositing_tutorials.html" Title="Compositing with Nuke" Abstract="Compositing with Nuke The tutorials in this section cover the following areas: " /><Url Source="../content/tutorials/rotoscoping.html" Title="Rotoscoping and Painting" Abstract="Rotoscoping and Painting " /><Url Source="../content/tutorials/keying.html" Title="Keying" Abstract="Keying " /><Url Source="../content/tutorials/point_tracking.html" Title="Point Tracking" Abstract="Point Tracking " /><Url Source="../content/tutorials/planar_tracking.html" Title="Planar Tracking" Abstract="Planar Tracking " /><Url Source="../content/tutorials/warping_morphing.html" Title="Warping and Morphing" Abstract="Warping and Morphing " /><Url Source="../content/tutorials/applying_blurs.html" Title="Applying Blurs" Abstract="Applying Blurs " /><Url Source="../content/tutorials/removing_noise.html" Title="Removing Noise" Abstract="Removing Noise " /><Url Source="../content/tutorials/precomps.html" Title="Precomps" Abstract="Precomps " /><Url Source="../content/tutorials/creating_3d_geometry.html" Title="Creating and Editing 3D Geometry" Abstract="Creating and Editing 3D Geometry " /><Url Source="../content/tutorials/3d_shaders.html" Title="3D Shaders" Abstract="3D Shaders " /><Url Source="../content/tutorials/camera_tracking.html" Title="Camera Tracking" Abstract="Camera Tracking " /><Url Source="../content/tutorials/generating_point_clouds.html" Title="Generating Point Clouds" Abstract="Generating Point Clouds " /><Url Source="../content/tutorials/particles.html" Title="Particles" Abstract="Particles " /><Url Source="../content/tutorials/rendering.html" Title="Rendering a 3D Scene" Abstract="Rendering a 3D Scene " /><Url Source="../content/example_scripts/example_scripts.html" Title="Example Nuke Scripts" Abstract="Example Nuke Scripts This section pulls together and organizes the Nuke (.nk) scripts available to you throughout the online help to ensure you can easily access them." /><Url Source="../content/appendices/appendices_intro.html" Title="Appendices" Abstract="Appendices This section contains supplemental reference information that you may need when using Nuke." /><Url Source="../content/appendices/appendixa/available_preferences_studio.html" Title="Appendix A: Preferences" Abstract="Appendix A: Preferences This appendix lists the preferences supported by Nuke. The Available Preference Settings" /><Url Source="../content/appendices/appendixb/hotkeys_studio.html" Title="Appendix B: Keyboard Shortcuts" Abstract="Appendix B: Keyboard Shortcuts Keyboard shortcuts, or hotkeys, provide quick access to the features of Nuke. The following tables show these keystrokes." /><Url Source="../content/appendices/appendixc/supported_file_formats.html" Title="Appendix C: File Formats" Abstract="Appendix C: File Formats This appendix lists the file formats recognized by Nuke. Notes When importing and exporting files, remember the following:" /><Url Source="../content/appendices/appendixc/supported_audio_formats.html" Title="Supported Audio Formats" Abstract="Supported Audio Formats The following table lists supported audio formats. Although Nuke supports the import and editing of multi-channel audio, during playback audio is currently mixed to 48 KHz stereo output." /><Url Source="../content/appendices/appendixd/third_party_software.html" Title="Appendix D: External Software" Abstract="Appendix D: External Software This section lists third-party libraries used in Nuke, along with their versions and licenses, as well as other third-party contributions in Nuke." /><Url Source="../content/appendices/appendixd/third_party_contributions.html" Title="Third-Party Contributions" Abstract="Third-Party Contributions The following table lists third-party contributions included in Nuke, along with their licenses." /><Url Source="../content/appendices/appendixd/studio_third_party_libraries.html" Title="Third-Party Libraries and Fonts" Abstract="Third-Party Libraries and Fonts If, for any reason, you think The Foundry is not entitled to use these libraries and fonts, please contact support@thefoundry.co.uk." /><Url Source="../content/appendices/appendixe/eula.html" Title="Appendix E: EULA" Abstract="Appendix E: EULA End User License Agreement (EULA) PLEASE READ THIS EULA CAREFULLY BEFORE ORDERING OR DOWNLOADING OR USING ANY FOUNDRY SOFTWARE. YOUR ATTENTION IS PARTICULARLY DRAWN TO CLAUSES 12 AND 13 WHERE WE LIMIT OUR LIABILITY TO USERS OF OUR SOFTWARE PRODUCTS." /><Url Source="../content/getting_started/using_interface/connecting_nodes.html" Title="Disconnecting  Nodes" /><Url Source="../content/getting_started/using_interface/creating_node_tool_sets.html" Title="Creating_Node_Tool_Sets" /><Url Source="../content/getting_started/using_interface/editing_clips_dope_sheet.html" Title="Editing_Clips_Dope_Sheet" /><Url Source="../content/comp_environment/installation/installation_licensing.html" Title="Installation and Licensing" Abstract="Installation and Licensing Installing and licensing new applications can be a boring task that you just want to be done with as soon as possible. To help you with that, this chapter guides you to the point where you have a default workspace in front of you and are ready to start viewing and editing your media with the minimum of effort." /><Url Source="../content/reference_guide/front_matter/legal.html" Title="Legal" Abstract="Nuke™ Online Help. Copyright © 2015 The Foundry Visionmongers Ltd. All Rights Reserved. Use of this document and the Nuke software is subject to an End User License Agreement (the &quot;EULA&quot;), the terms of which are incorporated herein by reference. This document and the Nuke software may be used or copied only in accordance with the terms of the EULA. This document, the Nuke software and all intellectual property rights relating thereto are and shall remain the sole property of The Foundry Visionmongers Ltd. (&quot;The Foundry&quot;) and/or The Foundry's licensors." /><Url Source="../content/appendices/hiero/appendixb/appendix_b.html" Title="Appendix B: Keyboard Shortcuts" Abstract="Appendix B: Keyboard Shortcuts This appendix lists the keyboard shortcuts used by both applications, along with their function. In general, contiguous areas of the keyboard are assigned to related functionality. The left-hand keys on a QWERTY keyboard are used for tool selection and actions, the right-hand side for playhead manipulation including source/record and insert/overlay, the arrow keys for selection and nudging, and the numeric pad for timecode entry." /><Url Source="../content/timeline_environment/usingviewer/playback_cache.html" Title="Caching Frames in the Playback Cache" Abstract="Caching Frames in the Playback Cache The playback cache places frames in RAM for rapid retrieval during playback, rather than copying the source files locally as withCaching Media Locally." /><Url Source="../content/timeline_environment/usingviewer/using_in_out_markers.html" Title="Using In and Out Markers" Abstract="Using In and Out Markers In and Out markers enable you to alter the duration of a clip to just the portions of the source that you require." /></urls><ents><stem n="welcom" chunk="Search_Chunk1.xml" /><stem n="nuke" chunk="Search_Chunk1.xml" /><stem n="9" chunk="Search_Chunk2.xml" /><stem n="0" chunk="Search_Chunk2.xml" /><stem n="academi" chunk="Search_Chunk3.xml" /><stem n="award®" chunk="Search_Chunk3.xml" /><stem n="win" chunk="Search_Chunk3.xml" /><stem n="compositor" chunk="Search_Chunk3.xml" /><stem n="us" chunk="Search_Chunk3.xml" /><stem n="creat" chunk="Search_Chunk4.xml" /><stem n="extraordinari" chunk="Search_Chunk5.xml" /><stem n="imag" chunk="Search_Chunk5.xml" /><stem n="score" chunk="Search_Chunk6.xml" /><stem n="featur" chunk="Search_Chunk6.xml" /><stem n="film" chunk="Search_Chunk7.xml" /><stem n="includ" chunk="Search_Chunk7.xml" /><stem n="avatar" chunk="Search_Chunk8.xml" /><stem n="district" chunk="Search_Chunk8.xml" /><stem n="australia" chunk="Search_Chunk8.xml" /><stem n="dark" chunk="Search_Chunk8.xml" /><stem n="knight" chunk="Search_Chunk8.xml" /><stem n="quantum" chunk="Search_Chunk8.xml" /><stem n="solac" chunk="Search_Chunk8.xml" /><stem n="curiou" chunk="Search_Chunk8.xml" /><stem n="case" chunk="Search_Chunk8.xml" /><stem n="benjamin" chunk="Search_Chunk9.xml" /><stem n="button" chunk="Search_Chunk9.xml" /><stem n="iron" chunk="Search_Chunk10.xml" /><stem n="man" chunk="Search_Chunk10.xml" /><stem n="transform" chunk="Search_Chunk10.xml" /><stem n="pirat" chunk="Search_Chunk11.xml" /><stem n="caribbean" chunk="Search_Chunk11.xml" /><stem n="world" chunk="Search_Chunk11.xml" /><stem n="s" chunk="Search_Chunk11.xml" /><stem n="end" chunk="Search_Chunk12.xml" /><stem n="countless" chunk="Search_Chunk12.xml" /><stem n="commerci" chunk="Search_Chunk12.xml" /><stem n="music" chunk="Search_Chunk12.xml" /><stem n="video" chunk="Search_Chunk12.xml" /><stem n="onlin" chunk="Search_Chunk13.xml" /><stem n="help" chunk="Search_Chunk13.xml" /><stem n="work" chunk="Search_Chunk13.xml" /><stem n="same" chunk="Search_Chunk14.xml" /><stem n="wai" chunk="Search_Chunk15.xml" /><stem n="standard" chunk="Search_Chunk16.xml" /><stem n="system" chunk="Search_Chunk16.xml" /><stem n="find" chunk="Search_Chunk16.xml" /><stem n="what" chunk="Search_Chunk17.xml" /><stem n="re" chunk="Search_Chunk18.xml" /><stem n="look" chunk="Search_Chunk19.xml" /><stem n="click" chunk="Search_Chunk20.xml" /><stem n="topic" chunk="Search_Chunk21.xml" /><stem n="content" chunk="Search_Chunk21.xml" /><stem n="pane" chunk="Search_Chunk21.xml" /><stem n="left" chunk="Search_Chunk21.xml" /><stem n="enter" chunk="Search_Chunk22.xml" /><stem n="search" chunk="Search_Chunk23.xml" /><stem n="term" chunk="Search_Chunk23.xml" /><stem n="field" chunk="Search_Chunk23.xml" /><stem n="expand" chunk="Search_Chunk24.xml" /><stem n="displai" chunk="Search_Chunk24.xml" /><stem n="hidden" chunk="Search_Chunk25.xml" /><stem n="if" chunk="Search_Chunk25.xml" /><stem n="becom" chunk="Search_Chunk26.xml" /><stem n="onc" chunk="Search_Chunk26.xml" /><stem n="relat" chunk="Search_Chunk27.xml" /><stem n="list" chunk="Search_Chunk27.xml" /><stem n="current" chunk="Search_Chunk28.xml" /><stem n="watch" chunk="Search_Chunk29.xml" /><stem n="tutori" chunk="Search_Chunk29.xml" /><stem n="dot" chunk="Search_Chunk29.xml" /><stem n="throughout" chunk="Search_Chunk29.xml" /><stem n="select" chunk="Search_Chunk30.xml" /><stem n="&gt;" chunk="Search_Chunk31.xml" /><stem n="requir" chunk="Search_Chunk32.xml" /><stem n="internet" chunk="Search_Chunk33.xml" /><stem n="connect" chunk="Search_Chunk33.xml" /><stem n="exampl" chunk="Search_Chunk34.xml" /><stem n="script" chunk="Search_Chunk35.xml" /><stem n="link" chunk="Search_Chunk36.xml" /><stem n="load" chunk="Search_Chunk36.xml" /><stem n="nk" chunk="Search_Chunk37.xml" /><stem n="launch" chunk="Search_Chunk37.xml" /><stem n="set" chunk="Search_Chunk37.xml" /><stem n="document" chunk="Search_Chunk38.xml" /><stem n="sourc" chunk="Search_Chunk38.xml" /><stem n="local" chunk="Search_Chunk39.xml" /><stem n="behavior" chunk="Search_Chunk39.xml" /><stem n="tab" chunk="Search_Chunk40.xml" /><stem n="prefer" chunk="Search_Chunk41.xml" /><stem n="follow" chunk="Search_Chunk41.xml" /><stem n="top" chunk="Search_Chunk42.xml" /><stem n="email" chunk="Search_Chunk43.xml" /><stem n="client" chunk="Search_Chunk43.xml" /><stem n="send" chunk="Search_Chunk43.xml" /><stem n="custom" chunk="Search_Chunk43.xml" /><stem n="support" chunk="Search_Chunk43.xml" /><stem n="comment" chunk="Search_Chunk44.xml" /><stem n="open" chunk="Search_Chunk44.xml" /><stem n="print" chunk="Search_Chunk45.xml" /><stem n="dialog" chunk="Search_Chunk45.xml" /><stem n="so" chunk="Search_Chunk45.xml" /><stem n="printer" chunk="Search_Chunk46.xml" /><stem n="toggl" chunk="Search_Chunk46.xml" /><stem n="collaps" chunk="Search_Chunk46.xml" /><stem n="element" chunk="Search_Chunk46.xml" /><stem n="dropdown" chunk="Search_Chunk47.xml" /><stem n="effect" chunk="Search_Chunk48.xml" /><stem n="text" chunk="Search_Chunk49.xml" /><stem n="previou" chunk="Search_Chunk49.xml" /><stem n="tabl" chunk="Search_Chunk49.xml" /><stem n="next" chunk="Search_Chunk50.xml" /><stem n="differ" chunk="Search_Chunk50.xml" /><stem n="depend" chunk="Search_Chunk51.xml" /><stem n="ve" chunk="Search_Chunk51.xml" /><stem n="inform" chunk="Search_Chunk52.xml" /><stem n="see" chunk="Search_Chunk53.xml" /><stem n="get" chunk="Search_Chunk54.xml" /><stem n="copyright" chunk="Search_Chunk55.xml" /><stem n="©" chunk="Search_Chunk55.xml" /><stem n="2015" chunk="Search_Chunk55.xml" /><stem n="foundri" chunk="Search_Chunk55.xml" /><stem n="form" chunk="Search_Chunk56.xml" /><stem n="varieti" chunk="Search_Chunk56.xml" /><stem n="locat" chunk="Search_Chunk56.xml" /><stem n="view" chunk="Search_Chunk57.xml" /><stem n="tool" chunk="Search_Chunk58.xml" /><stem n="tip" chunk="Search_Chunk59.xml" /><stem n="control" chunk="Search_Chunk59.xml" /><stem n="offer" chunk="Search_Chunk60.xml" /><stem n="concis" chunk="Search_Chunk60.xml" /><stem n="instruct" chunk="Search_Chunk60.xml" /><stem n="move" chunk="Search_Chunk60.xml" /><stem n="mous" chunk="Search_Chunk61.xml" /><stem n="pointer" chunk="Search_Chunk61.xml" /><stem n="interfac" chunk="Search_Chunk61.xml" /><stem n="node" chunk="Search_Chunk61.xml" /><stem n="paramet" chunk="Search_Chunk62.xml" /><stem n="tooltip" chunk="Search_Chunk63.xml" /><stem n="icon" chunk="Search_Chunk63.xml" /><stem n="properti" chunk="Search_Chunk63.xml" /><stem n="panel" chunk="Search_Chunk64.xml" /><stem n="context-sensit" chunk="Search_Chunk65.xml" /><stem n="context" chunk="Search_Chunk65.xml" /><stem n="sensit" chunk="Search_Chunk65.xml" /><stem n="comprehens" chunk="Search_Chunk65.xml" /><stem n="descript" chunk="Search_Chunk65.xml" /><stem n="default" chunk="Search_Chunk65.xml" /><stem n="web" chunk="Search_Chunk66.xml" /><stem n="browser" chunk="Search_Chunk66.xml" /><stem n="press" chunk="Search_Chunk66.xml" /><stem n="shift" chunk="Search_Chunk67.xml" /><stem n="+" chunk="Search_Chunk67.xml" /><stem n="graph" chunk="Search_Chunk68.xml" /><stem n="go" chunk="Search_Chunk68.xml" /><stem n="-" chunk="Search_Chunk69.xml" /><stem n="built-in" chunk="Search_Chunk70.xml" /><stem n="built" chunk="Search_Chunk70.xml" /><stem n="instal" chunk="Search_Chunk70.xml" /><stem n="doe" chunk="Search_Chunk70.xml" /><stem n="html" chunk="Search_Chunk71.xml" /><stem n="file" chunk="Search_Chunk71.xml" /><stem n="name" chunk="Search_Chunk72.xml" /><stem n="request" chunk="Search_Chunk73.xml" /><stem n="blur" chunk="Search_Chunk73.xml" /><stem n="1" chunk="Search_Chunk74.xml" /><stem n="directori" chunk="Search_Chunk75.xml" /><stem n="contain" chunk="Search_Chunk75.xml" /><stem n="nuke_path" chunk="Search_Chunk76.xml" /><stem n="environ" chunk="Search_Chunk76.xml" /><stem n="variabl" chunk="Search_Chunk76.xml" /><stem n="2" chunk="Search_Chunk77.xml" /><stem n="$home" chunk="Search_Chunk78.xml" /><stem n="3" chunk="Search_Chunk78.xml" /><stem n="plugin" chunk="Search_Chunk78.xml" /><stem n="window" chunk="Search_Chunk78.xml" /><stem n="either" chunk="Search_Chunk79.xml" /><stem n="c" chunk="Search_Chunk79.xml" /><stem n="program" chunk="Search_Chunk80.xml" /><stem n="common" chunk="Search_Chunk80.xml" /><stem n="x86" chunk="Search_Chunk80.xml" /><stem n="mac" chunk="Search_Chunk80.xml" /><stem n="os" chunk="Search_Chunk80.xml" /><stem n="x" chunk="Search_Chunk81.xml" /><stem n="librari" chunk="Search_Chunk82.xml" /><stem n="applic" chunk="Search_Chunk82.xml" /><stem n="linux" chunk="Search_Chunk83.xml" /><stem n="usr" chunk="Search_Chunk83.xml" /><stem n="4" chunk="Search_Chunk83.xml" /><stem n="avail" chunk="Search_Chunk83.xml" /><stem n="websit" chunk="Search_Chunk84.xml" /><stem n="up-to-d" chunk="Search_Chunk84.xml" /><stem n="up" chunk="Search_Chunk84.xml" /><stem n="up-to" chunk="Search_Chunk85.xml" /><stem n="to-dat" chunk="Search_Chunk85.xml" /><stem n="date" chunk="Search_Chunk85.xml" /><stem n="add" chunk="Search_Chunk85.xml" /><stem n="firewal" chunk="Search_Chunk86.xml" /><stem n="port" chunk="Search_Chunk86.xml" /><stem n="except" chunk="Search_Chunk86.xml" /><stem n="our" chunk="Search_Chunk86.xml" /><stem n="block" chunk="Search_Chunk87.xml" /><stem n="fall" chunk="Search_Chunk87.xml" /><stem n="back" chunk="Search_Chunk87.xml" /><stem n="copi" chunk="Search_Chunk88.xml" /><stem n="own" chunk="Search_Chunk89.xml" /><stem n="enabl" chunk="Search_Chunk89.xml" /><stem n="auto" chunk="Search_Chunk90.xml" /><stem n="automat" chunk="Search_Chunk90.xml" /><stem n="assign" chunk="Search_Chunk91.xml" /><stem n="free" chunk="Search_Chunk91.xml" /><stem n="server" chunk="Search_Chunk91.xml" /><stem n="specifi" chunk="Search_Chunk91.xml" /><stem n="manual" chunk="Search_Chunk92.xml" /><stem n="rang" chunk="Search_Chunk92.xml" /><stem n="defin" chunk="Search_Chunk93.xml" /><stem n="attempt" chunk="Search_Chunk94.xml" /><stem n="typic" chunk="Search_Chunk94.xml" /><stem n="valu" chunk="Search_Chunk94.xml" /><stem n="should" chunk="Search_Chunk95.xml" /><stem n="1024" chunk="Search_Chunk96.xml" /><stem n="higher" chunk="Search_Chunk96.xml" /><stem n="caus" chunk="Search_Chunk96.xml" /><stem n="abl" chunk="Search_Chunk97.xml" /><stem n="multipl" chunk="Search_Chunk97.xml" /><stem n="session" chunk="Search_Chunk98.xml" /><stem n="run" chunk="Search_Chunk98.xml" /><stem n="time" chunk="Search_Chunk98.xml" /><stem n="must" chunk="Search_Chunk99.xml" /><stem n="host" chunk="Search_Chunk99.xml" /><stem n="address" chunk="Search_Chunk99.xml" /><stem n="protocol" chunk="Search_Chunk99.xml" /><stem n="version" chunk="Search_Chunk99.xml" /><stem n="ipv4" chunk="Search_Chunk100.xml" /><stem n="menu" chunk="Search_Chunk100.xml" /><stem n="main" chunk="Search_Chunk101.xml" /><stem n="access" chunk="Search_Chunk101.xml" /><stem n="kei" chunk="Search_Chunk101.xml" /><stem n="hot" chunk="Search_Chunk102.xml" /><stem n="start" chunk="Search_Chunk102.xml" /><stem n="guid" chunk="Search_Chunk103.xml" /><stem n="user" chunk="Search_Chunk103.xml" /><stem n="refer" chunk="Search_Chunk104.xml" /><stem n="develop" chunk="Search_Chunk105.xml" /><stem n="kit" chunk="Search_Chunk105.xml" /><stem n="ndk" chunk="Search_Chunk105.xml" /><stem n="python" chunk="Search_Chunk105.xml" /><stem n="tcl" chunk="Search_Chunk105.xml" /><stem n="express" chunk="Search_Chunk106.xml" /><stem n="releas" chunk="Search_Chunk107.xml" /><stem n="note" chunk="Search_Chunk107.xml" /><stem n="import" chunk="Search_Chunk108.xml" /><stem n="updat" chunk="Search_Chunk109.xml" /><stem n="bug" chunk="Search_Chunk109.xml" /><stem n="fix" chunk="Search_Chunk109.xml" /><stem n="train" chunk="Search_Chunk109.xml" /><stem n="resourc" chunk="Search_Chunk109.xml" /><stem n="nukepedia" chunk="Search_Chunk109.xml" /><stem n="thing" chunk="Search_Chunk109.xml" /><stem n="mail" chunk="Search_Chunk110.xml" /><stem n="-relat" chunk="Search_Chunk110.xml" /><stem n="e-mail" chunk="Search_Chunk110.xml" /><stem n="e" chunk="Search_Chunk110.xml" /><stem n="plug-in" chunk="Search_Chunk110.xml" /><stem n="plug" chunk="Search_Chunk110.xml" /><stem n="in" chunk="Search_Chunk110.xml" /><stem n="page" chunk="Search_Chunk111.xml" /><stem n="give" chunk="Search_Chunk111.xml" /><stem n="easi" chunk="Search_Chunk112.xml" /><stem n="larg" chunk="Search_Chunk112.xml" /><stem n="contact" chunk="Search_Chunk112.xml" /><stem n="question" chunk="Search_Chunk112.xml" /><stem n="aris" chunk="Search_Chunk112.xml" /><stem n="pdf" chunk="Search_Chunk112.xml" /><stem n="fail" chunk="Search_Chunk112.xml" /><stem n="directli" chunk="Search_Chunk112.xml" /><stem n="via" chunk="Search_Chunk113.xml" /><stem n="thefoundri" chunk="Search_Chunk113.xml" /><stem n="co" chunk="Search_Chunk113.xml" /><stem n="uk" chunk="Search_Chunk113.xml" /><stem n="telephon" chunk="Search_Chunk113.xml" /><stem n="london" chunk="Search_Chunk113.xml" /><stem n="offic" chunk="Search_Chunk113.xml" /><stem n="+44" chunk="Search_Chunk113.xml" /><stem n="20" chunk="Search_Chunk113.xml" /><stem n="7479" chunk="Search_Chunk113.xml" /><stem n="4350" chunk="Search_Chunk113.xml" /><stem n="lo" chunk="Search_Chunk113.xml" /><stem n="angel" chunk="Search_Chunk113.xml" /><stem n="310" chunk="Search_Chunk113.xml" /><stem n="399" chunk="Search_Chunk113.xml" /><stem n="4555" chunk="Search_Chunk113.xml" /><stem n="hour" chunk="Search_Chunk113.xml" /><stem n="chapter" chunk="Search_Chunk113.xml" /><stem n="cover" chunk="Search_Chunk113.xml" /><stem n="licens" chunk="Search_Chunk114.xml" /><stem n="workspac" chunk="Search_Chunk115.xml" /><stem n="organ" chunk="Search_Chunk115.xml" /><stem n="section" chunk="Search_Chunk115.xml" /><stem n="meet" chunk="Search_Chunk115.xml" /><stem n="product" chunk="Search_Chunk115.xml" /><stem n="famili" chunk="Search_Chunk116.xml" /><stem n="describ" chunk="Search_Chunk116.xml" /><stem n="mode" chunk="Search_Chunk116.xml" /><stem n="explain" chunk="Search_Chunk117.xml" /><stem n="concept" chunk="Search_Chunk117.xml" /><stem n="how" chunk="Search_Chunk117.xml" /><stem n="studio" chunk="Search_Chunk118.xml" /><stem n="composit" chunk="Search_Chunk118.xml" /><stem n="timelin" chunk="Search_Chunk119.xml" /><stem n="function" chunk="Search_Chunk120.xml" /><stem n="outlin" chunk="Search_Chunk121.xml" /><stem n="layout" chunk="Search_Chunk121.xml" /><stem n="ship" chunk="Search_Chunk121.xml" /><stem n="themselv" chunk="Search_Chunk121.xml" /><stem n="appendix" chunk="Search_Chunk121.xml" /><stem n="quit" chunk="Search_Chunk121.xml" /><stem n="few" chunk="Search_Chunk121.xml" /><stem n="basic" chunk="Search_Chunk122.xml" /><stem n="introduc" chunk="Search_Chunk122.xml" /><stem n="know" chunk="Search_Chunk122.xml" /><stem n="befor" chunk="Search_Chunk122.xml" /><stem n="purpos" chunk="Search_Chunk123.xml" /><stem n="level" chunk="Search_Chunk123.xml" /><stem n="combin" chunk="Search_Chunk123.xml" /><stem n="below" chunk="Search_Chunk124.xml" /><stem n="specif" chunk="Search_Chunk124.xml" /><stem n="separ" chunk="Search_Chunk125.xml" /><stem n="assist" chunk="Search_Chunk125.xml" /><stem n="nukex" chunk="Search_Chunk125.xml" /><stem n="award-win" chunk="Search_Chunk126.xml" /><stem n="award" chunk="Search_Chunk126.xml" /><stem n="provid" chunk="Search_Chunk126.xml" /><stem n="stabl" chunk="Search_Chunk126.xml" /><stem n="foundat" chunk="Search_Chunk126.xml" /><stem n="deliv" chunk="Search_Chunk126.xml" /><stem n="shot-bas" chunk="Search_Chunk126.xml" /><stem n="shot" chunk="Search_Chunk126.xml" /><stem n="base" chunk="Search_Chunk127.xml" /><stem n="vfx" chunk="Search_Chunk127.xml" /><stem n="addit" chunk="Search_Chunk127.xml" /><stem n="special" chunk="Search_Chunk128.xml" /><stem n="elimin" chunk="Search_Chunk128.xml" /><stem n="need" chunk="Search_Chunk128.xml" /><stem n="perform" chunk="Search_Chunk129.xml" /><stem n="certain" chunk="Search_Chunk129.xml" /><stem n="task" chunk="Search_Chunk129.xml" /><stem n="third-parti" chunk="Search_Chunk130.xml" /><stem n="third" chunk="Search_Chunk130.xml" /><stem n="parti" chunk="Search_Chunk130.xml" /><stem n="softwar" chunk="Search_Chunk130.xml" /><stem n="packag" chunk="Search_Chunk131.xml" /><stem n="both" chunk="Search_Chunk131.xml" /><stem n="advanc" chunk="Search_Chunk131.xml" /><stem n="power" chunk="Search_Chunk132.xml" /><stem n="conform" chunk="Search_Chunk132.xml" /><stem n="workflow" chunk="Search_Chunk132.xml" /><stem n="intend" chunk="Search_Chunk132.xml" /><stem n="workstat" chunk="Search_Chunk132.xml" /><stem n="artist" chunk="Search_Chunk132.xml" /><stem n="paint" chunk="Search_Chunk132.xml" /><stem n="rotoscop" chunk="Search_Chunk133.xml" /><stem n="track" chunk="Search_Chunk133.xml" /><stem n="two" chunk="Search_Chunk134.xml" /><stem n="complementari" chunk="Search_Chunk135.xml" /><stem n="everi" chunk="Search_Chunk135.xml" /><stem n="mainten" chunk="Search_Chunk135.xml" /><stem n="limit" chunk="Search_Chunk135.xml" /><stem n="subset" chunk="Search_Chunk136.xml" /><stem n="down" chunk="Search_Chunk136.xml" /><stem n="non-commerci" chunk="Search_Chunk137.xml" /><stem n="without" chunk="Search_Chunk137.xml" /><stem n="educ" chunk="Search_Chunk137.xml" /><stem n="restrict" chunk="Search_Chunk137.xml" /><stem n="place" chunk="Search_Chunk138.xml" /><stem n="purchas" chunk="Search_Chunk138.xml" /><stem n="choos" chunk="Search_Chunk138.xml" /><stem n="abil" chunk="Search_Chunk139.xml" /><stem n="comp" chunk="Search_Chunk139.xml" /><stem n="soft" chunk="Search_Chunk139.xml" /><stem n="annot" chunk="Search_Chunk140.xml" /><stem n="hiero" chunk="Search_Chunk140.xml" /><stem n="singl" chunk="Search_Chunk140.xml" /><stem n="viewer" chunk="Search_Chunk141.xml" /><stem n="anim" chunk="Search_Chunk142.xml" /><stem n="just" chunk="Search_Chunk143.xml" /><stem n="like" chunk="Search_Chunk144.xml" /><stem n="cameratrack" chunk="Search_Chunk145.xml" /><stem n="depthgener" chunk="Search_Chunk145.xml" /><stem n="furnacecor" chunk="Search_Chunk145.xml" /><stem n="krono" chunk="Search_Chunk145.xml" /><stem n="bezier" chunk="Search_Chunk145.xml" /><stem n="draw" chunk="Search_Chunk146.xml" /><stem n="roto" chunk="Search_Chunk146.xml" /><stem n="se" chunk="Search_Chunk147.xml" /><stem n="person" chunk="Search_Chunk147.xml" /><stem n="chanc" chunk="Search_Chunk147.xml" /><stem n="explor" chunk="Search_Chunk147.xml" /><stem n="learn" chunk="Search_Chunk147.xml" /><stem n="fulli" chunk="Search_Chunk147.xml" /><stem n="while" chunk="Search_Chunk147.xml" /><stem n="comfort" chunk="Search_Chunk147.xml" /><stem n="home" chunk="Search_Chunk147.xml" /><stem n="plu" chunk="Search_Chunk148.xml" /><stem n="lensdistort" chunk="Search_Chunk148.xml" /><stem n="motionblur" chunk="Search_Chunk148.xml" /><stem n="modelbuild" chunk="Search_Chunk148.xml" /><stem n="particl" chunk="Search_Chunk149.xml" /><stem n="planartrack" chunk="Search_Chunk150.xml" /><stem n="pointcloudgener" chunk="Search_Chunk150.xml" /><stem n="poissonmesh" chunk="Search_Chunk150.xml" /><stem n="prmanrend" chunk="Search_Chunk150.xml" /><stem n="projectionsolv" chunk="Search_Chunk150.xml" /><stem n="vectorgener" chunk="Search_Chunk150.xml" /><stem n="compat" chunk="Search_Chunk150.xml" /><stem n="capabl" chunk="Search_Chunk150.xml" /><stem n="render" chunk="Search_Chunk150.xml" /><stem n="edit" chunk="Search_Chunk151.xml" /><stem n="part" chunk="Search_Chunk152.xml" /><stem n="doesn" chunk="Search_Chunk152.xml" /><stem n="t" chunk="Search_Chunk152.xml" /><stem n="ani" chunk="Search_Chunk153.xml" /><stem n="-or" chunk="Search_Chunk154.xml" /><stem n="-specif" chunk="Search_Chunk154.xml" /><stem n="apart" chunk="Search_Chunk154.xml" /><stem n="checkerboard" chunk="Search_Chunk154.xml" /><stem n="colorbar" chunk="Search_Chunk154.xml" /><stem n="colorwheel" chunk="Search_Chunk154.xml" /><stem n="constant" chunk="Search_Chunk154.xml" /><stem n="read" chunk="Search_Chunk154.xml" /><stem n="radial" chunk="Search_Chunk155.xml" /><stem n="ramp" chunk="Search_Chunk155.xml" /><stem n="rectangl" chunk="Search_Chunk155.xml" /><stem n="rotopaint" chunk="Search_Chunk155.xml" /><stem n="command" chunk="Search_Chunk156.xml" /><stem n="frameblend" chunk="Search_Chunk156.xml" /><stem n="framehold" chunk="Search_Chunk156.xml" /><stem n="framerang" chunk="Search_Chunk156.xml" /><stem n="timeecho" chunk="Search_Chunk156.xml" /><stem n="timeoffset" chunk="Search_Chunk156.xml" /><stem n="channel" chunk="Search_Chunk156.xml" /><stem n="channelmerg" chunk="Search_Chunk157.xml" /><stem n="remov" chunk="Search_Chunk157.xml" /><stem n="shuffl" chunk="Search_Chunk158.xml" /><stem n="shufflecopi" chunk="Search_Chunk158.xml" /><stem n="color" chunk="Search_Chunk158.xml" /><stem n="grade" chunk="Search_Chunk159.xml" /><stem n="invert" chunk="Search_Chunk159.xml" /><stem n="ocio" chunk="Search_Chunk160.xml" /><stem n="cdltransform" chunk="Search_Chunk160.xml" /><stem n="colorspac" chunk="Search_Chunk160.xml" /><stem n="filetransform" chunk="Search_Chunk160.xml" /><stem n="logconvert" chunk="Search_Chunk160.xml" /><stem n="keyer" chunk="Search_Chunk160.xml" /><stem n="merg" chunk="Search_Chunk160.xml" /><stem n="addmix" chunk="Search_Chunk161.xml" /><stem n="dissolv" chunk="Search_Chunk161.xml" /><stem n="keymix" chunk="Search_Chunk161.xml" /><stem n="premult" chunk="Search_Chunk161.xml" /><stem n="switch" chunk="Search_Chunk161.xml" /><stem n="unpremult" chunk="Search_Chunk162.xml" /><stem n="crop" chunk="Search_Chunk162.xml" /><stem n="cornerpin" chunk="Search_Chunk162.xml" /><stem n="reformat" chunk="Search_Chunk162.xml" /><stem n="tracker" chunk="Search_Chunk162.xml" /><stem n="transformmask" chunk="Search_Chunk163.xml" /><stem n="joinview" chunk="Search_Chunk163.xml" /><stem n="oneview" chunk="Search_Chunk163.xml" /><stem n="shuffleview" chunk="Search_Chunk163.xml" /><stem n="split" chunk="Search_Chunk163.xml" /><stem n="join" chunk="Search_Chunk163.xml" /><stem n="stereo" chunk="Search_Chunk163.xml" /><stem n="anaglyph" chunk="Search_Chunk163.xml" /><stem n="mixview" chunk="Search_Chunk164.xml" /><stem n="reconverg" chunk="Search_Chunk164.xml" /><stem n="sidebysid" chunk="Search_Chunk164.xml" /><stem n="metadata" chunk="Search_Chunk164.xml" /><stem n="addtimecod" chunk="Search_Chunk164.xml" /><stem n="comparemetadata" chunk="Search_Chunk164.xml" /><stem n="copymetadata" chunk="Search_Chunk164.xml" /><stem n="modifymetadata" chunk="Search_Chunk164.xml" /><stem n="viewmetadata" chunk="Search_Chunk165.xml" /><stem n="backdrop" chunk="Search_Chunk165.xml" /><stem n="group" chunk="Search_Chunk165.xml" /><stem n="input" chunk="Search_Chunk166.xml" /><stem n="output" chunk="Search_Chunk167.xml" /><stem n="postagestamp" chunk="Search_Chunk168.xml" /><stem n="stickynot" chunk="Search_Chunk168.xml" /><stem n="cannot" chunk="Search_Chunk168.xml" /><stem n="write" chunk="Search_Chunk168.xml" /><stem n="project" chunk="Search_Chunk169.xml" /><stem n="normal" chunk="Search_Chunk170.xml" /><stem n="within" chunk="Search_Chunk170.xml" /><stem n="constraint" chunk="Search_Chunk171.xml" /><stem n="tree" chunk="Search_Chunk171.xml" /><stem n="whether" chunk="Search_Chunk171.xml" /><stem n="compon" chunk="Search_Chunk172.xml" /><stem n="unsupport" chunk="Search_Chunk172.xml" /><stem n="red" chunk="Search_Chunk172.xml" /><stem n="grai" chunk="Search_Chunk173.xml" /><stem n="out" chunk="Search_Chunk173.xml" /><stem n="modifi" chunk="Search_Chunk174.xml" /><stem n="node-bas" chunk="Search_Chunk174.xml" /><stem n="understand" chunk="Search_Chunk174.xml" /><stem n="gizmo" chunk="Search_Chunk174.xml" /><stem n="precomp" chunk="Search_Chunk175.xml" /><stem n="knob" chunk="Search_Chunk175.xml" /><stem n="around" chunk="Search_Chunk176.xml" /><stem n="allow" chunk="Search_Chunk177.xml" /><stem n="creation" chunk="Search_Chunk178.xml" /><stem n="usual" chunk="Search_Chunk178.xml" /><stem n="error" chunk="Search_Chunk178.xml" /><stem n="messag" chunk="Search_Chunk178.xml" /><stem n="editor" chunk="Search_Chunk179.xml" /><stem n="termin" chunk="Search_Chunk179.xml" /><stem n="-t" chunk="Search_Chunk179.xml" /><stem n="execut" chunk="Search_Chunk179.xml" /><stem n="createnod" chunk="Search_Chunk180.xml" /><stem n="result" chunk="Search_Chunk180.xml" /><stem n="traceback" chunk="Search_Chunk181.xml" /><stem n="recent" chunk="Search_Chunk181.xml" /><stem n="call" chunk="Search_Chunk181.xml" /><stem n="last" chunk="Search_Chunk181.xml" /><stem n="&lt;string&gt;" chunk="Search_Chunk182.xml" /><stem n="line" chunk="Search_Chunk182.xml" /><stem n="&lt;module&gt;" chunk="Search_Chunk183.xml" /><stem n="runtimeerror" chunk="Search_Chunk183.xml" /><stem n="outsid" chunk="Search_Chunk183.xml" /><stem n="regular" chunk="Search_Chunk183.xml" /><stem n="model" chunk="Search_Chunk183.xml" /><stem n="meant" chunk="Search_Chunk184.xml" /><stem n="aim" chunk="Search_Chunk184.xml" /><stem n="student" chunk="Search_Chunk184.xml" /><stem n="industri" chunk="Search_Chunk184.xml" /><stem n="profession" chunk="Search_Chunk184.xml" /><stem n="other" chunk="Search_Chunk184.xml" /><stem n="interest" chunk="Search_Chunk184.xml" /><stem n="nc" chunk="Search_Chunk184.xml" /><stem n="--nc" chunk="Search_Chunk184.xml" /><stem n="command-lin" chunk="Search_Chunk184.xml" /><stem n="argument" chunk="Search_Chunk184.xml" /><stem n="0v7" chunk="Search_Chunk184.xml" /><stem n="app" chunk="Search_Chunk184.xml" /><stem n="maco" chunk="Search_Chunk184.xml" /><stem n="--studio" chunk="Search_Chunk184.xml" /><stem n="design" chunk="Search_Chunk184.xml" /><stem n="aspect" chunk="Search_Chunk184.xml" /><stem n="here" chunk="Search_Chunk185.xml" /><stem n="disabl" chunk="Search_Chunk186.xml" /><stem n="blinkscript" chunk="Search_Chunk187.xml" /><stem n="generatelut" chunk="Search_Chunk187.xml" /><stem n="primatt" chunk="Search_Chunk187.xml" /><stem n="ultimatt" chunk="Search_Chunk187.xml" /><stem n="writegeo" chunk="Search_Chunk187.xml" /><stem n="1920x1080" chunk="Search_Chunk187.xml" /><stem n="hd" chunk="Search_Chunk187.xml" /><stem n="mpeg4" chunk="Search_Chunk187.xml" /><stem n="h" chunk="Search_Chunk187.xml" /><stem n="264" chunk="Search_Chunk187.xml" /><stem n="format" chunk="Search_Chunk187.xml" /><stem n="encrypt" chunk="Search_Chunk188.xml" /><stem n="nknc" chunk="Search_Chunk188.xml" /><stem n="frame" chunk="Search_Chunk188.xml" /><stem n="slave" chunk="Search_Chunk189.xml" /><stem n="export" chunk="Search_Chunk189.xml" /><stem n="edl" chunk="Search_Chunk190.xml" /><stem n="xml" chunk="Search_Chunk190.xml" /><stem n="sequenc" chunk="Search_Chunk190.xml" /><stem n="lut" chunk="Search_Chunk191.xml" /><stem n="matchgrad" chunk="Search_Chunk191.xml" /><stem n="clipboard" chunk="Search_Chunk191.xml" /><stem n="hrox" chunk="Search_Chunk191.xml" /><stem n="monitor" chunk="Search_Chunk191.xml" /><stem n="respect" chunk="Search_Chunk191.xml" /><stem n="resolution-independ" chunk="Search_Chunk192.xml" /><stem n="resolut" chunk="Search_Chunk192.xml" /><stem n="independ" chunk="Search_Chunk192.xml" /><stem n="extens" chunk="Search_Chunk192.xml" /><stem n="manipul" chunk="Search_Chunk192.xml" /><stem n="rich" chunk="Search_Chunk193.xml" /><stem n="3d" chunk="Search_Chunk193.xml" /><stem n="consist" chunk="Search_Chunk194.xml" /><stem n="network" chunk="Search_Chunk194.xml" /><stem n="oper" chunk="Search_Chunk194.xml" /><stem n="util" chunk="Search_Chunk195.xml" /><stem n="seri" chunk="Search_Chunk195.xml" /><stem n="process" chunk="Search_Chunk195.xml" /><stem n="contribut" chunk="Search_Chunk196.xml" /><stem n="sequenti" chunk="Search_Chunk196.xml" /><stem n="interpret" chunk="Search_Chunk196.xml" /><stem n="abov" chunk="Search_Chunk196.xml" /><stem n="veri" chunk="Search_Chunk196.xml" /><stem n="simpl" chunk="Search_Chunk197.xml" /><stem n="media" chunk="Search_Chunk197.xml" /><stem n="disk" chunk="Search_Chunk197.xml" /><stem n="extract" chunk="Search_Chunk197.xml" /><stem n="matt" chunk="Search_Chunk197.xml" /><stem n="foreground" chunk="Search_Chunk198.xml" /><stem n="background" chunk="Search_Chunk199.xml" /><stem n="b" chunk="Search_Chunk200.xml" /><stem n="final" chunk="Search_Chunk201.xml" /><stem n="complet" chunk="Search_Chunk201.xml" /><stem n="farm" chunk="Search_Chunk201.xml" /><stem n="cineon" chunk="Search_Chunk201.xml" /><stem n="tiff" chunk="Search_Chunk202.xml" /><stem n="openexr" chunk="Search_Chunk202.xml" /><stem n="hdri" chunk="Search_Chunk202.xml" /><stem n="raw" chunk="Search_Chunk202.xml" /><stem n="camera" chunk="Search_Chunk202.xml" /><stem n="data" chunk="Search_Chunk203.xml" /><stem n="dcraw" chunk="Search_Chunk204.xml" /><stem n="mix" chunk="Search_Chunk204.xml" /><stem n="them" chunk="Search_Chunk204.xml" /><stem n="convert" chunk="Search_Chunk205.xml" /><stem n="nativ" chunk="Search_Chunk205.xml" /><stem n="32-bit" chunk="Search_Chunk205.xml" /><stem n="32" chunk="Search_Chunk205.xml" /><stem n="bit" chunk="Search_Chunk205.xml" /><stem n="linear" chunk="Search_Chunk206.xml" /><stem n="rgb" chunk="Search_Chunk206.xml" /><stem n="forc" chunk="Search_Chunk207.xml" /><stem n="on" chunk="Search_Chunk207.xml" /><stem n="srgb" chunk="Search_Chunk208.xml" /><stem n="rec709" chunk="Search_Chunk208.xml" /><stem n="gamma" chunk="Search_Chunk208.xml" /><stem n="80" chunk="Search_Chunk208.xml" /><stem n="hsv" chunk="Search_Chunk208.xml" /><stem n="hsl" chunk="Search_Chunk208.xml" /><stem n="log2lin" chunk="Search_Chunk208.xml" /><stem n="let" chunk="Search_Chunk208.xml" /><stem n="logarithm" chunk="Search_Chunk209.xml" /><stem n="vice" chunk="Search_Chunk209.xml" /><stem n="versa" chunk="Search_Chunk209.xml" /><stem n="freeli" chunk="Search_Chunk209.xml" /><stem n="scale" chunk="Search_Chunk209.xml" /><stem n="2k" chunk="Search_Chunk210.xml" /><stem n="plate" chunk="Search_Chunk210.xml" /><stem n="pal" chunk="Search_Chunk210.xml" /><stem n="hd1080i" chunk="Search_Chunk210.xml" /><stem n="adjust" chunk="Search_Chunk210.xml" /><stem n="accommod" chunk="Search_Chunk211.xml" /><stem n="new" chunk="Search_Chunk211.xml" /><stem n="pass" chunk="Search_Chunk212.xml" /><stem n="re-us" chunk="Search_Chunk212.xml" /><stem n="particular" chunk="Search_Chunk212.xml" /><stem n="sai" chunk="Search_Chunk212.xml" /><stem n="appli" chunk="Search_Chunk213.xml" /><stem n="correct" chunk="Search_Chunk214.xml" /><stem n="hair" chunk="Search_Chunk215.xml" /><stem n="simpli" chunk="Search_Chunk215.xml" /><stem n="downstream" chunk="Search_Chunk215.xml" /><stem n="color-correct" chunk="Search_Chunk215.xml" /><stem n="1023" chunk="Search_Chunk215.xml" /><stem n="benefit" chunk="Search_Chunk215.xml" /><stem n="computer-gener" chunk="Search_Chunk215.xml" /><stem n="comput" chunk="Search_Chunk215.xml" /><stem n="gener" chunk="Search_Chunk215.xml" /><stem n="cg" chunk="Search_Chunk216.xml" /><stem n="especi" chunk="Search_Chunk216.xml" /><stem n="stream" chunk="Search_Chunk216.xml" /><stem n="depart" chunk="Search_Chunk216.xml" /><stem n="could" chunk="Search_Chunk216.xml" /><stem n="light" chunk="Search_Chunk216.xml" /><stem n="beauti" chunk="Search_Chunk217.xml" /><stem n="fill" chunk="Search_Chunk217.xml" /><stem n="backlight" chunk="Search_Chunk217.xml" /><stem n="reflect" chunk="Search_Chunk217.xml" /><stem n="shadow" chunk="Search_Chunk217.xml" /><stem n="etc" chunk="Search_Chunk218.xml" /><stem n="exr" chunk="Search_Chunk218.xml" /><stem n="would" chunk="Search_Chunk218.xml" /><stem n="store" chunk="Search_Chunk219.xml" /><stem n="might" chunk="Search_Chunk219.xml" /><stem n="highlight" chunk="Search_Chunk219.xml" /><stem n="specular" chunk="Search_Chunk220.xml" /><stem n="mask" chunk="Search_Chunk220.xml" /><stem n="approach" chunk="Search_Chunk221.xml" /><stem n="again" chunk="Search_Chunk221.xml" /><stem n="advantag" chunk="Search_Chunk221.xml" /><stem n="keep" chunk="Search_Chunk221.xml" /><stem n="unnecessarili" chunk="Search_Chunk222.xml" /><stem n="complex" chunk="Search_Chunk222.xml" /><stem n="branch" chunk="Search_Chunk222.xml" /><stem n="virtual" chunk="Search_Chunk222.xml" /><stem n="pipe" chunk="Search_Chunk222.xml" /><stem n="take" chunk="Search_Chunk222.xml" /><stem n="full" chunk="Search_Chunk223.xml" /><stem n="1023-channel" chunk="Search_Chunk223.xml" /><stem n="8" chunk="Search_Chunk223.xml" /><stem n="8-" chunk="Search_Chunk224.xml" /><stem n="16" chunk="Search_Chunk224.xml" /><stem n="16-" chunk="Search_Chunk224.xml" /><stem n="digit" chunk="Search_Chunk224.xml" /><stem n="those" chunk="Search_Chunk224.xml" /><stem n="gear" chunk="Search_Chunk224.xml" /><stem n="optim" chunk="Search_Chunk224.xml" /><stem n="exclus" chunk="Search_Chunk225.xml" /><stem n="8-bit" chunk="Search_Chunk225.xml" /><stem n="256" chunk="Search_Chunk225.xml" /><stem n="intens" chunk="Search_Chunk225.xml" /><stem n="per" chunk="Search_Chunk225.xml" /><stem n="began" chunk="Search_Chunk225.xml" /><stem n="qualiti" chunk="Search_Chunk226.xml" /><stem n="paramount" chunk="Search_Chunk226.xml" /><stem n="thu" chunk="Search_Chunk226.xml" /><stem n="32-bit-per" chunk="Search_Chunk226.xml" /><stem n="bit-per" chunk="Search_Chunk226.xml" /><stem n="lower" chunk="Search_Chunk226.xml" /><stem n="depth" chunk="Search_Chunk226.xml" /><stem n="upon" chunk="Search_Chunk227.xml" /><stem n="thirty-two" chunk="Search_Chunk227.xml" /><stem n="thirti" chunk="Search_Chunk227.xml" /><stem n="much" chunk="Search_Chunk227.xml" /><stem n="richer" chunk="Search_Chunk227.xml" /><stem n="palett" chunk="Search_Chunk227.xml" /><stem n="float" chunk="Search_Chunk227.xml" /><stem n="point" chunk="Search_Chunk228.xml" /><stem n="precis" chunk="Search_Chunk229.xml" /><stem n="calcul" chunk="Search_Chunk229.xml" /><stem n="practic" chunk="Search_Chunk230.xml" /><stem n="mean" chunk="Search_Chunk230.xml" /><stem n="carri" chunk="Search_Chunk230.xml" /><stem n="increas" chunk="Search_Chunk230.xml" /><stem n="greater" chunk="Search_Chunk231.xml" /><stem n="accuraci" chunk="Search_Chunk231.xml" /><stem n="lower-bit-depth" chunk="Search_Chunk231.xml" /><stem n="lower-bit" chunk="Search_Chunk231.xml" /><stem n="bit-depth" chunk="Search_Chunk231.xml" /><stem n="strictli" chunk="Search_Chunk231.xml" /><stem n="two-dimension" chunk="Search_Chunk231.xml" /><stem n="dimension" chunk="Search_Chunk231.xml" /><stem n="contrast" chunk="Search_Chunk231.xml" /><stem n="robust" chunk="Search_Chunk231.xml" /><stem n="scene" chunk="Search_Chunk231.xml" /><stem n="compos" chunk="Search_Chunk232.xml" /><stem n="polygon" chunk="Search_Chunk232.xml" /><stem n="card" chunk="Search_Chunk232.xml" /><stem n="plane" chunk="Search_Chunk233.xml" /><stem n="textur" chunk="Search_Chunk233.xml" /><stem n="simplest" chunk="Search_Chunk234.xml" /><stem n="pan-and-til" chunk="Search_Chunk234.xml" /><stem n="pan" chunk="Search_Chunk234.xml" /><stem n="pan-and" chunk="Search_Chunk234.xml" /><stem n="and-til" chunk="Search_Chunk234.xml" /><stem n="tile" chunk="Search_Chunk234.xml" /><stem n="2d" chunk="Search_Chunk234.xml" /><stem n="arrang" chunk="Search_Chunk235.xml" /><stem n="curv" chunk="Search_Chunk235.xml" /><stem n="shape" chunk="Search_Chunk236.xml" /><stem n="illus" chunk="Search_Chunk237.xml" /><stem n="seamless" chunk="Search_Chunk237.xml" /><stem n="make" chunk="Search_Chunk237.xml" /><stem n="proprietari" chunk="Search_Chunk238.xml" /><stem n="render-queu" chunk="Search_Chunk238.xml" /><stem n="queu" chunk="Search_Chunk238.xml" /><stem n="integr" chunk="Search_Chunk238.xml" /><stem n="distribut" chunk="Search_Chunk238.xml" /><stem n="across" chunk="Search_Chunk238.xml" /><stem n="nukex-licens" chunk="Search_Chunk238.xml" /><stem n="machin" chunk="Search_Chunk238.xml" /><stem n="linux-bas" chunk="Search_Chunk239.xml" /><stem n="intern" chunk="Search_Chunk239.xml" /><stem n="setup" chunk="Search_Chunk239.xml" /><stem n="extern" chunk="Search_Chunk239.xml" /><stem n="faster" chunk="Search_Chunk239.xml" /><stem n="bore" chunk="Search_Chunk239.xml" /><stem n="want" chunk="Search_Chunk239.xml" /><stem n="done" chunk="Search_Chunk240.xml" /><stem n="soon" chunk="Search_Chunk240.xml" /><stem n="possibl" chunk="Search_Chunk240.xml" /><stem n="front" chunk="Search_Chunk241.xml" /><stem n="readi" chunk="Search_Chunk241.xml" /><stem n="achiev" chunk="Search_Chunk241.xml" /><stem n="real-tim" chunk="Search_Chunk241.xml" /><stem n="real" chunk="Search_Chunk241.xml" /><stem n="playback" chunk="Search_Chunk241.xml" /><stem n="hardwar" chunk="Search_Chunk242.xml" /><stem n="graphic" chunk="Search_Chunk242.xml" /><stem n="account" chunk="Search_Chunk242.xml" /><stem n="number" chunk="Search_Chunk242.xml" /><stem n="decod" chunk="Search_Chunk243.xml" /><stem n="thread" chunk="Search_Chunk243.xml" /><stem n="reader" chunk="Search_Chunk243.xml" /><stem n="compress" chunk="Search_Chunk243.xml" /><stem n="method" chunk="Search_Chunk243.xml" /><stem n="desir" chunk="Search_Chunk244.xml" /><stem n="rate" chunk="Search_Chunk244.xml" /><stem n="amount" chunk="Search_Chunk244.xml" /><stem n="ram" chunk="Search_Chunk245.xml" /><stem n="gb" chunk="Search_Chunk245.xml" /><stem n="cach" chunk="Search_Chunk245.xml" /><stem n="show" chunk="Search_Chunk245.xml" /><stem n="uncompress" chunk="Search_Chunk246.xml" /><stem n="10-bit" chunk="Search_Chunk246.xml" /><stem n="10" chunk="Search_Chunk246.xml" /><stem n="speed" chunk="Search_Chunk246.xml" /><stem n="given" chunk="Search_Chunk247.xml" /><stem n="memori" chunk="Search_Chunk247.xml" /><stem n="dedic" chunk="Search_Chunk247.xml" /><stem n="total" chunk="Search_Chunk247.xml" /><stem n="second" chunk="Search_Chunk247.xml" /><stem n="fp" chunk="Search_Chunk248.xml" /><stem n="mb" chunk="Search_Chunk248.xml" /><stem n="durat" chunk="Search_Chunk248.xml" /><stem n="sec" chunk="Search_Chunk248.xml" /><stem n="25" chunk="Search_Chunk248.xml" /><stem n="4k" chunk="Search_Chunk248.xml" /><stem n="uhd" chunk="Search_Chunk248.xml" /><stem n="3840x2160" chunk="Search_Chunk248.xml" /><stem n="31" chunk="Search_Chunk248.xml" /><stem n="64" chunk="Search_Chunk248.xml" /><stem n="791" chunk="Search_Chunk248.xml" /><stem n="02" chunk="Search_Chunk248.xml" /><stem n="414" chunk="Search_Chunk248.xml" /><stem n="57" chunk="Search_Chunk248.xml" /><stem n="2048x1556" chunk="Search_Chunk248.xml" /><stem n="12" chunk="Search_Chunk248.xml" /><stem n="303" chunk="Search_Chunk248.xml" /><stem n="90" chunk="Search_Chunk248.xml" /><stem n="1078" chunk="Search_Chunk248.xml" /><stem n="43" chunk="Search_Chunk248.xml" /><stem n="13" chunk="Search_Chunk248.xml" /><stem n="1080p" chunk="Search_Chunk248.xml" /><stem n="7" chunk="Search_Chunk248.xml" /><stem n="91" chunk="Search_Chunk249.xml" /><stem n="197" chunk="Search_Chunk249.xml" /><stem n="75" chunk="Search_Chunk249.xml" /><stem n="1657" chunk="Search_Chunk249.xml" /><stem n="66" chunk="Search_Chunk249.xml" /><stem n="28" chunk="Search_Chunk249.xml" /><stem n="829" chunk="Search_Chunk249.xml" /><stem n="33" chunk="Search_Chunk249.xml" /><stem n="14" chunk="Search_Chunk249.xml" /><stem n="2156" chunk="Search_Chunk249.xml" /><stem n="86" chunk="Search_Chunk249.xml" /><stem n="26" chunk="Search_Chunk249.xml" /><stem n="3314" chunk="Search_Chunk249.xml" /><stem n="132" chunk="Search_Chunk249.xml" /><stem n="56" chunk="Search_Chunk249.xml" /><stem n="30" chunk="Search_Chunk249.xml" /><stem n="949" chunk="Search_Chunk249.xml" /><stem n="22" chunk="Search_Chunk249.xml" /><stem n="81" chunk="Search_Chunk249.xml" /><stem n="364" chunk="Search_Chunk249.xml" /><stem n="69" chunk="Search_Chunk249.xml" /><stem n="35" chunk="Search_Chunk249.xml" /><stem n="94" chunk="Search_Chunk249.xml" /><stem n="237" chunk="Search_Chunk249.xml" /><stem n="55" chunk="Search_Chunk249.xml" /><stem n="23" chunk="Search_Chunk249.xml" /><stem n="27" chunk="Search_Chunk249.xml" /><stem n="62" chunk="Search_Chunk249.xml" /><stem n="71" chunk="Search_Chunk249.xml" /><stem n="88" chunk="Search_Chunk249.xml" /><stem n="110" chunk="Search_Chunk249.xml" /><stem n="47" chunk="Search_Chunk249.xml" /><stem n="desktop" chunk="Search_Chunk249.xml" /><stem n="qualifi" chunk="Search_Chunk249.xml" /><stem n="64-bit" chunk="Search_Chunk249.xml" /><stem n="test" chunk="Search_Chunk249.xml" /><stem n="problem" chunk="Search_Chunk249.xml" /><stem n="pleas" chunk="Search_Chunk250.xml" /><stem n="team" chunk="Search_Chunk250.xml" /><stem n="x86-64" chunk="Search_Chunk250.xml" /><stem n="processor" chunk="Search_Chunk250.xml" /><stem n="intel" chunk="Search_Chunk250.xml" /><stem n="pentium" chunk="Search_Chunk250.xml" /><stem n="amd" chunk="Search_Chunk250.xml" /><stem n="athlon" chunk="Search_Chunk250.xml" /><stem n="sse3" chunk="Search_Chunk250.xml" /><stem n="newer" chunk="Search_Chunk250.xml" /><stem n="5" chunk="Search_Chunk250.xml" /><stem n="space" chunk="Search_Chunk251.xml" /><stem n="temporari" chunk="Search_Chunk251.xml" /><stem n="least" chunk="Search_Chunk251.xml" /><stem n="1280" chunk="Search_Chunk251.xml" /><stem n="pixel" chunk="Search_Chunk251.xml" /><stem n="24-bit" chunk="Search_Chunk252.xml" /><stem n="24" chunk="Search_Chunk252.xml" /><stem n="latest" chunk="Search_Chunk252.xml" /><stem n="quicktim" chunk="Search_Chunk252.xml" /><stem n="http" chunk="Search_Chunk252.xml" /><stem n="www" chunk="Search_Chunk252.xml" /><stem n="appl" chunk="Search_Chunk252.xml" /><stem n="com" chunk="Search_Chunk252.xml" /><stem n="download" chunk="Search_Chunk252.xml" /><stem n="512" chunk="Search_Chunk252.xml" /><stem n="driver" chunk="Search_Chunk252.xml" /><stem n="opengl" chunk="Search_Chunk252.xml" /><stem n="minimum" chunk="Search_Chunk252.xml" /><stem n="option" chunk="Search_Chunk253.xml" /><stem n="gpu" chunk="Search_Chunk254.xml" /><stem n="acceler" chunk="Search_Chunk255.xml" /><stem n="glsl" chunk="Search_Chunk255.xml" /><stem n="r3d" chunk="Search_Chunk255.xml" /><stem n="rocket" chunk="Search_Chunk255.xml" /><stem n="19" chunk="Search_Chunk255.xml" /><stem n="firmwar" chunk="Search_Chunk255.xml" /><stem n="avoid" chunk="Search_Chunk255.xml" /><stem n="disappear" chunk="Search_Chunk255.xml" /><stem n="obtain" chunk="Search_Chunk255.xml" /><stem n="manufactur" chunk="Search_Chunk255.xml" /><stem n="nvidia" chunk="Search_Chunk255.xml" /><stem n="will" chunk="Search_Chunk255.xml" /><stem n="consider" chunk="Search_Chunk256.xml" /><stem n="half" chunk="Search_Chunk256.xml" /><stem n="instanc" chunk="Search_Chunk256.xml" /><stem n="fast" chunk="Search_Chunk256.xml" /><stem n="therefor" chunk="Search_Chunk256.xml" /><stem n="sometim" chunk="Search_Chunk256.xml" /><stem n="&lt;" chunk="Search_Chunk256.xml" /><stem n="width" chunk="Search_Chunk256.xml" /><stem n="alwai" chunk="Search_Chunk257.xml" /><stem n="produc" chunk="Search_Chunk257.xml" /><stem n="better" chunk="Search_Chunk258.xml" /><stem n="downsampl" chunk="Search_Chunk258.xml" /><stem n="fermi" chunk="Search_Chunk258.xml" /><stem n="object" chunk="Search_Chunk258.xml" /><stem n="cuda_gpus_uk" chunk="Search_Chunk259.xml" /><stem n="alter" chunk="Search_Chunk259.xml" /><stem n="cuda" chunk="Search_Chunk259.xml" /><stem n="bundl" chunk="Search_Chunk259.xml" /><stem n="april" chunk="Search_Chunk259.xml" /><stem n="2012" chunk="Search_Chunk259.xml" /><stem n="onward" chunk="Search_Chunk259.xml" /><stem n="aspx" chunk="Search_Chunk259.xml" /><stem n="lang" chunk="Search_Chunk259.xml" /><stem n="en-u" chunk="Search_Chunk259.xml" /><stem n="en" chunk="Search_Chunk259.xml" /><stem n="sleep" chunk="Search_Chunk259.xml" /><stem n="recov" chunk="Search_Chunk259.xml" /><stem n="restart" chunk="Search_Chunk259.xml" /><stem n="recommend" chunk="Search_Chunk259.xml" /><stem n="appear" chunk="Search_Chunk259.xml" /><stem n="folder" chunk="Search_Chunk260.xml" /><stem n="ensur" chunk="Search_Chunk260.xml" /><stem n="ui" chunk="Search_Chunk260.xml" /><stem n="ex" chunk="Search_Chunk261.xml" /><stem n="double-click" chunk="Search_Chunk261.xml" /><stem n="doubl" chunk="Search_Chunk261.xml" /><stem n="on-screen" chunk="Search_Chunk261.xml" /><stem n="screen" chunk="Search_Chunk261.xml" /><stem n="drive" chunk="Search_Chunk262.xml" /><stem n="letter" chunk="Search_Chunk262.xml" /><stem n="proce" chunk="Search_Chunk262.xml" /><stem n="microsoft" chunk="Search_Chunk262.xml" /><stem n="vcredist_x64" chunk="Search_Chunk262.xml" /><stem n="appropri" chunk="Search_Chunk262.xml" /><stem n="vcredist" chunk="Search_Chunk262.xml" /><stem n="subdirectori" chunk="Search_Chunk262.xml" /><stem n="correctli" chunk="Search_Chunk262.xml" /><stem n="particularli" chunk="Search_Chunk262.xml" /><stem n="vista" chunk="Search_Chunk263.xml" /><stem n="alreadi" chunk="Search_Chunk263.xml" /><stem n="present" chunk="Search_Chunk263.xml" /><stem n="still" chunk="Search_Chunk263.xml" /><stem n="configur" chunk="Search_Chunk264.xml" /><stem n="incorrect" chunk="Search_Chunk264.xml" /><stem n="reinstal" chunk="Search_Chunk264.xml" /><stem n="worri" chunk="Search_Chunk264.xml" /><stem n="issu" chunk="Search_Chunk264.xml" /><stem n="prompt" chunk="Search_Chunk264.xml" /><stem n="accessori" chunk="Search_Chunk264.xml" /><stem n="cd" chunk="Search_Chunk264.xml" /><stem n="chang" chunk="Search_Chunk264.xml" /><stem n="save" chunk="Search_Chunk265.xml" /><stem n="temp" chunk="Search_Chunk265.xml" /><stem n="return" chunk="Search_Chunk265.xml" /><stem n="type" chunk="Search_Chunk266.xml" /><stem n="win-x86-release-64" chunk="Search_Chunk267.xml" /><stem n="-win-x86-release-64" chunk="Search_Chunk267.xml" /><stem n="win-x86" chunk="Search_Chunk267.xml" /><stem n="win-x86-releas" chunk="Search_Chunk267.xml" /><stem n="x86-releas" chunk="Search_Chunk267.xml" /><stem n="x86-release-64" chunk="Search_Chunk267.xml" /><stem n="release-64" chunk="Search_Chunk267.xml" /><stem n="dir" chunk="Search_Chunk267.xml" /><stem n="silent" chunk="Search_Chunk267.xml" /><stem n="anyth" chunk="Search_Chunk267.xml" /><stem n="progress" chunk="Search_Chunk267.xml" /><stem n="bar" chunk="Search_Chunk267.xml" /><stem n="noth" chunk="Search_Chunk267.xml" /><stem n="verysil" chunk="Search_Chunk267.xml" /><stem n="mergetask" chunk="Search_Chunk267.xml" /><stem n="desktopicon" chunk="Search_Chunk267.xml" /><stem n="flag" chunk="Search_Chunk267.xml" /><stem n="flavor" chunk="Search_Chunk267.xml" /><stem n="agre" chunk="Search_Chunk268.xml" /><stem n="agreement" chunk="Search_Chunk268.xml" /><stem n="eula" chunk="Search_Chunk268.xml" /><stem n="non-sil" chunk="Search_Chunk268.xml" /><stem n="navig" chunk="Search_Chunk268.xml" /><stem n="nukestudio" chunk="Search_Chunk268.xml" /><stem n="--nukex" chunk="Search_Chunk268.xml" /><stem n="nukeassist" chunk="Search_Chunk268.xml" /><stem n="--nukeassist" chunk="Search_Chunk268.xml" /><stem n="valid" chunk="Search_Chunk268.xml" /><stem n="don" chunk="Search_Chunk269.xml" /><stem n="haven" chunk="Search_Chunk269.xml" /><stem n="yet" chunk="Search_Chunk269.xml" /><stem n="try" chunk="Search_Chunk269.xml" /><stem n="prevent" chunk="Search_Chunk270.xml" /><stem n="activ" chunk="Search_Chunk270.xml" /><stem n="devic" chunk="Search_Chunk270.xml" /><stem n="lock" chunk="Search_Chunk271.xml" /><stem n="ll" chunk="Search_Chunk271.xml" /><stem n="transfer" chunk="Search_Chunk271.xml" /><stem n="uncount" chunk="Search_Chunk272.xml" /><stem n="known" chunk="Search_Chunk272.xml" /><stem n="count" chunk="Search_Chunk272.xml" /><stem n="put" chunk="Search_Chunk272.xml" /><stem n="uniqu" chunk="Search_Chunk272.xml" /><stem n="manag" chunk="Search_Chunk272.xml" /><stem n="station" chunk="Search_Chunk272.xml" /><stem n="flt" chunk="Search_Chunk272.xml" /><stem n="extra" chunk="Search_Chunk272.xml" /><stem n="cost" chunk="Search_Chunk273.xml" /><stem n="subscript" chunk="Search_Chunk273.xml" /><stem n="tradit" chunk="Search_Chunk273.xml" /><stem n="entitl" chunk="Search_Chunk273.xml" /><stem n="author" chunk="Search_Chunk273.xml" /><stem n="maximum" chunk="Search_Chunk273.xml" /><stem n="first" chunk="Search_Chunk273.xml" /><stem n="detail" chunk="Search_Chunk274.xml" /><stem n="id" chunk="Search_Chunk274.xml" /><stem n="rlmhostid" chunk="Search_Chunk274.xml" /><stem n="000ea641d7a1" chunk="Search_Chunk274.xml" /><stem n="bear" chunk="Search_Chunk274.xml" /><stem n="mind" chunk="Search_Chunk274.xml" /><stem n="statu" chunk="Search_Chunk274.xml" /><stem n="scroll" chunk="Search_Chunk275.xml" /><stem n="report" chunk="Search_Chunk275.xml" /><stem n="flu" chunk="Search_Chunk275.xml" /><stem n="charg" chunk="Search_Chunk275.xml" /><stem n="licensingtools7" chunk="Search_Chunk275.xml" /><stem n="sale" chunk="Search_Chunk275.xml" /><stem n="nuke-product-famili" chunk="Search_Chunk275.xml" /><stem n="nuke-product" chunk="Search_Chunk275.xml" /><stem n="product-famili" chunk="Search_Chunk275.xml" /><stem n="bui" chunk="Search_Chunk275.xml" /><stem n="15-dai" chunk="Search_Chunk275.xml" /><stem n="15" chunk="Search_Chunk275.xml" /><stem n="dai" chunk="Search_Chunk275.xml" /><stem n="trial" chunk="Search_Chunk275.xml" /><stem n="receiv" chunk="Search_Chunk275.xml" /><stem n="start-up" chunk="Search_Chunk276.xml" /><stem n="alert" chunk="Search_Chunk276.xml" /><stem n="remain" chunk="Search_Chunk276.xml" /><stem n="fn_disable_license_dialog" chunk="Search_Chunk276.xml" /><stem n="suppress" chunk="Search_Chunk276.xml" /><stem n="warn" chunk="Search_Chunk276.xml" /><stem n="immin" chunk="Search_Chunk276.xml" /><stem n="expir" chunk="Search_Chunk276.xml" /><stem n="lic" chunk="Search_Chunk276.xml" /><stem n="brows" chunk="Search_Chunk276.xml" /><stem n="past" chunk="Search_Chunk276.xml" /><stem n="suppli" chunk="Search_Chunk277.xml" /><stem n="string" chunk="Search_Chunk277.xml" /><stem n="insert" chunk="Search_Chunk277.xml" /><stem n="someth" chunk="Search_Chunk278.xml" /><stem n="nuke-0101-77d3-99bd-a977-93e9-8035" chunk="Search_Chunk278.xml" /><stem n="nuke-0101" chunk="Search_Chunk278.xml" /><stem n="nuke-0101-77d3" chunk="Search_Chunk278.xml" /><stem n="nuke-0101-77d3-99bd" chunk="Search_Chunk278.xml" /><stem n="nuke-0101-77d3-99bd-a977" chunk="Search_Chunk278.xml" /><stem n="nuke-0101-77d3-99bd-a977-93e9" chunk="Search_Chunk278.xml" /><stem n="0101" chunk="Search_Chunk278.xml" /><stem n="0101-77d3" chunk="Search_Chunk278.xml" /><stem n="0101-77d3-99bd" chunk="Search_Chunk278.xml" /><stem n="0101-77d3-99bd-a977" chunk="Search_Chunk278.xml" /><stem n="0101-77d3-99bd-a977-93e9" chunk="Search_Chunk278.xml" /><stem n="0101-77d3-99bd-a977-93e9-8035" chunk="Search_Chunk278.xml" /><stem n="77d3" chunk="Search_Chunk278.xml" /><stem n="77d3-99bd" chunk="Search_Chunk278.xml" /><stem n="77d3-99bd-a977" chunk="Search_Chunk278.xml" /><stem n="77d3-99bd-a977-93e9" chunk="Search_Chunk278.xml" /><stem n="77d3-99bd-a977-93e9-8035" chunk="Search_Chunk278.xml" /><stem n="99bd" chunk="Search_Chunk278.xml" /><stem n="99bd-a977" chunk="Search_Chunk278.xml" /><stem n="99bd-a977-93e9" chunk="Search_Chunk278.xml" /><stem n="99bd-a977-93e9-8035" chunk="Search_Chunk278.xml" /><stem n="a977" chunk="Search_Chunk278.xml" /><stem n="a977-93e9" chunk="Search_Chunk278.xml" /><stem n="a977-93e9-8035" chunk="Search_Chunk278.xml" /><stem n="93e9" chunk="Search_Chunk278.xml" /><stem n="93e9-8035" chunk="Search_Chunk278.xml" /><stem n="8035" chunk="Search_Chunk278.xml" /><stem n="increment" chunk="Search_Chunk278.xml" /><stem n="nuke_i" chunk="Search_Chunk278.xml" /><stem n="2013" chunk="Search_Chunk278.xml" /><stem n="0929" chunk="Search_Chunk278.xml" /><stem n="29-sep-2014" chunk="Search_Chunk278.xml" /><stem n="29" chunk="Search_Chunk278.xml" /><stem n="29-sep" chunk="Search_Chunk279.xml" /><stem n="sep" chunk="Search_Chunk279.xml" /><stem n="sep-2014" chunk="Search_Chunk279.xml" /><stem n="2014" chunk="Search_Chunk279.xml" /><stem n="hostid" chunk="Search_Chunk279.xml" /><stem n="000a957bfde5" chunk="Search_Chunk279.xml" /><stem n="29-sep-2012" chunk="Search_Chunk279.xml" /><stem n="sep-2012" chunk="Search_Chunk279.xml" /><stem n="sign" chunk="Search_Chunk279.xml" /><stem n="00da" chunk="Search_Chunk279.xml" /><stem n="99a9" chunk="Search_Chunk279.xml" /><stem n="e744" chunk="Search_Chunk279.xml" /><stem n="217e" chunk="Search_Chunk279.xml" /><stem n="8ad3" chunk="Search_Chunk279.xml" /><stem n="e7af" chunk="Search_Chunk279.xml" /><stem n="e289" chunk="Search_Chunk279.xml" /><stem n="c0c6" chunk="Search_Chunk279.xml" /><stem n="6b23" chunk="Search_Chunk279.xml" /><stem n="2891" chunk="Search_Chunk279.xml" /><stem n="ac01" chunk="Search_Chunk279.xml" /><stem n="0f50" chunk="Search_Chunk279.xml" /><stem n="e64d" chunk="Search_Chunk279.xml" /><stem n="8847" chunk="Search_Chunk279.xml" /><stem n="8b22" chunk="Search_Chunk279.xml" /><stem n="3a40" chunk="Search_Chunk279.xml" /><stem n="2be9" chunk="Search_Chunk279.xml" /><stem n="a268" chunk="Search_Chunk279.xml" /><stem n="b7c2" chunk="Search_Chunk279.xml" /><stem n="4bc0" chunk="Search_Chunk279.xml" /><stem n="36af" chunk="Search_Chunk279.xml" /><stem n="proxi" chunk="Search_Chunk279.xml" /><stem n="usernam" chunk="Search_Chunk279.xml" /><stem n="password" chunk="Search_Chunk279.xml" /><stem n="sure" chunk="Search_Chunk279.xml" /><stem n="drag-and-drop" chunk="Search_Chunk280.xml" /><stem n="drag" chunk="Search_Chunk280.xml" /><stem n="drag-and" chunk="Search_Chunk281.xml" /><stem n="and-drop" chunk="Search_Chunk281.xml" /><stem n="drop" chunk="Search_Chunk281.xml" /><stem n="check" chunk="Search_Chunk281.xml" /><stem n="order" chunk="Search_Chunk282.xml" /><stem n="&lt;port&gt;" chunk="Search_Chunk283.xml" /><stem n="&lt;servername&gt;" chunk="Search_Chunk283.xml" /><stem n="30001" chunk="Search_Chunk283.xml" /><stem n="step" chunk="Search_Chunk283.xml" /><stem n="further" chunk="Search_Chunk284.xml" /><stem n="lot" chunk="Search_Chunk284.xml" /><stem n="beyond" chunk="Search_Chunk284.xml" /><stem n="scope" chunk="Search_Chunk284.xml" /><stem n="ad" chunk="Search_Chunk284.xml" /><stem n="usag" chunk="Search_Chunk285.xml" /><stem n="repres" chunk="Search_Chunk285.xml" /><stem n="right" chunk="Search_Chunk285.xml" /><stem n="recogn" chunk="Search_Chunk286.xml" /><stem n="five" chunk="Search_Chunk286.xml" /><stem n="simultan" chunk="Search_Chunk286.xml" /><stem n="anoth" chunk="Search_Chunk286.xml" /><stem n="deactiv" chunk="Search_Chunk287.xml" /><stem n="exist" chunk="Search_Chunk287.xml" /><stem n="often" chunk="Search_Chunk287.xml" /><stem n="similar" chunk="Search_Chunk287.xml" /><stem n="&lt;username&gt;" chunk="Search_Chunk288.xml" /><stem n="foundrylicens" chunk="Search_Chunk288.xml" /><stem n="&lt;systemid&gt;" chunk="Search_Chunk288.xml" /><stem n="replac" chunk="Search_Chunk288.xml" /><stem n="c58edf7" chunk="Search_Chunk288.xml" /><stem n="c58edf7e-17ab" chunk="Search_Chunk288.xml" /><stem n="c58edf7e-17ab-435b" chunk="Search_Chunk288.xml" /><stem n="c58edf7e-17ab-435b-8d8a" chunk="Search_Chunk288.xml" /><stem n="c58edf7e-17ab-435b-8d8a-b3a9b347ab11" chunk="Search_Chunk288.xml" /><stem n="17ab" chunk="Search_Chunk288.xml" /><stem n="17ab-435b" chunk="Search_Chunk288.xml" /><stem n="17ab-435b-8d8a" chunk="Search_Chunk288.xml" /><stem n="17ab-435b-8d8a-b3a9b347ab11" chunk="Search_Chunk288.xml" /><stem n="435b" chunk="Search_Chunk288.xml" /><stem n="435b-8d8a" chunk="Search_Chunk288.xml" /><stem n="435b-8d8a-b3a9b347ab11" chunk="Search_Chunk288.xml" /><stem n="8d8a" chunk="Search_Chunk288.xml" /><stem n="8d8a-b3a9b347ab11" chunk="Search_Chunk288.xml" /><stem n="b3a9b347ab11" chunk="Search_Chunk288.xml" /><stem n="deauthor" chunk="Search_Chunk288.xml" /><stem n="reclaim" chunk="Search_Chunk288.xml" /><stem n="stop" chunk="Search_Chunk288.xml" /><stem n="associ" chunk="Search_Chunk289.xml" /><stem n="finder" chunk="Search_Chunk289.xml" /><stem n="lion" chunk="Search_Chunk289.xml" /><stem n="mountain" chunk="Search_Chunk289.xml" /><stem n="maverick" chunk="Search_Chunk289.xml" /><stem n="expect" chunk="Search_Chunk289.xml" /><stem n="degrad" chunk="Search_Chunk289.xml" /><stem n="compar" chunk="Search_Chunk289.xml" /><stem n="resolv" chunk="Search_Chunk290.xml" /><stem n="core" chunk="Search_Chunk290.xml" /><stem n="duo" chunk="Search_Chunk290.xml" /><stem n="firepro" chunk="Search_Chunk290.xml" /><stem n="pro" chunk="Search_Chunk290.xml" /><stem n="6" chunk="Search_Chunk290.xml" /><stem n="blink" chunk="Search_Chunk290.xml" /><stem n="api" chunk="Search_Chunk290.xml" /><stem n="caveat" chunk="Search_Chunk290.xml" /><stem n="cpu" chunk="Search_Chunk290.xml" /><stem n="gpu-en" chunk="Search_Chunk290.xml" /><stem n="multi-gpu" chunk="Search_Chunk290.xml" /><stem n="multi" chunk="Search_Chunk290.xml" /><stem n="share" chunk="Search_Chunk291.xml" /><stem n="best" chunk="Search_Chunk291.xml" /><stem n="opencl" chunk="Search_Chunk291.xml" /><stem n="earlier" chunk="Search_Chunk291.xml" /><stem n="mega" chunk="Search_Chunk291.xml" /><stem n="dmg" chunk="Search_Chunk291.xml" /><stem n="mac-x86" chunk="Search_Chunk291.xml" /><stem n="mac-x86-releas" chunk="Search_Chunk291.xml" /><stem n="mac-x86-release-64" chunk="Search_Chunk291.xml" /><stem n="-mac-x86-release-64.dmg" chunk="Search_Chunk291.xml" /><stem n="archiv" chunk="Search_Chunk291.xml" /><stem n="pkg" chunk="Search_Chunk291.xml" /><stem n="mount" chunk="Search_Chunk291.xml" /><stem n="hdiutil" chunk="Search_Chunk291.xml" /><stem n="attach" chunk="Search_Chunk291.xml" /><stem n="build" chunk="Search_Chunk292.xml" /><stem n="pushd" chunk="Search_Chunk292.xml" /><stem n="volum" chunk="Search_Chunk292.xml" /><stem n="path" chunk="Search_Chunk292.xml" /><stem n="sudo" chunk="Search_Chunk292.xml" /><stem n="-pkg" chunk="Search_Chunk293.xml" /><stem n="-mac-x86-release-64.pkg" chunk="Search_Chunk293.xml" /><stem n="target" chunk="Search_Chunk293.xml" /><stem n="-target" chunk="Search_Chunk293.xml" /><stem n="popd" chunk="Search_Chunk293.xml" /><stem n="eject" chunk="Search_Chunk293.xml" /><stem n="detach" chunk="Search_Chunk293.xml" /><stem n="dock" chunk="Search_Chunk293.xml" /><stem n="licenc" chunk="Search_Chunk293.xml" /><stem n="cento" chunk="Search_Chunk293.xml" /><stem n="rhel" chunk="Search_Chunk293.xml" /><stem n="remot" chunk="Search_Chunk293.xml" /><stem n="tgz" chunk="Search_Chunk293.xml" /><stem n="tar" chunk="Search_Chunk293.xml" /><stem n="xvzf" chunk="Search_Chunk293.xml" /><stem n="linux-x86" chunk="Search_Chunk293.xml" /><stem n="linux-x86-releas" chunk="Search_Chunk293.xml" /><stem n="linux-x86-release-64" chunk="Search_Chunk293.xml" /><stem n="-linux-x86-release-64.tgz" chunk="Search_Chunk293.xml" /><stem n="linux-x86-release-64-instal" chunk="Search_Chunk293.xml" /><stem n="-linux-x86-release-64-instal" chunk="Search_Chunk293.xml" /><stem n="x86-release-64-instal" chunk="Search_Chunk293.xml" /><stem n="release-64-instal" chunk="Search_Chunk293.xml" /><stem n="64-instal" chunk="Search_Chunk293.xml" /><stem n="didn" chunk="Search_Chunk293.xml" /><stem n="now" chunk="Search_Chunk293.xml" /><stem n="unzip" chunk="Search_Chunk294.xml" /><stem n="properli" chunk="Search_Chunk294.xml" /><stem n="log" chunk="Search_Chunk294.xml" /><stem n="root" chunk="Search_Chunk294.xml" /><stem n="ssh" chunk="Search_Chunk294.xml" /><stem n="render_machin" chunk="Search_Chunk294.xml" /><stem n="mkdir" chunk="Search_Chunk294.xml" /><stem n="scp" chunk="Search_Chunk294.xml" /><stem n="download_machin" chunk="Search_Chunk294.xml" /><stem n="tmp" chunk="Search_Chunk294.xml" /><stem n="unpack" chunk="Search_Chunk294.xml" /><stem n="repeat" chunk="Search_Chunk294.xml" /><stem n="3-6" chunk="Search_Chunk294.xml" /><stem n="shell" chunk="Search_Chunk294.xml" /><stem n="bin" chunk="Search_Chunk294.xml" /><stem n="systemid" chunk="Search_Chunk295.xml" /><stem n="timeline-bas" chunk="Search_Chunk295.xml" /><stem n="review" chunk="Search_Chunk295.xml" /><stem n="info" chunk="Search_Chunk295.xml" /><stem n="spreadsheet" chunk="Search_Chunk295.xml" /><stem n="mirror" chunk="Search_Chunk295.xml" /><stem n="item" chunk="Search_Chunk295.xml" /><stem n="choic" chunk="Search_Chunk296.xml" /><stem n="lower-left" chunk="Search_Chunk296.xml" /><stem n="corner" chunk="Search_Chunk296.xml" /><stem n="top-left" chunk="Search_Chunk296.xml" /><stem n="togeth" chunk="Search_Chunk296.xml" /><stem n="quick" chunk="Search_Chunk297.xml" /><stem n="toolbar" chunk="Search_Chunk297.xml" /><stem n="spread" chunk="Search_Chunk297.xml" /><stem n="sheet" chunk="Search_Chunk298.xml" /><stem n="preced" chunk="Search_Chunk298.xml" /><stem n="unshar" chunk="Search_Chunk298.xml" /><stem n="dope" chunk="Search_Chunk298.xml" /><stem n="analyz" chunk="Search_Chunk298.xml" /><stem n="slightli" chunk="Search_Chunk299.xml" /><stem n="workspace-specif" chunk="Search_Chunk299.xml" /><stem n="keyfram" chunk="Search_Chunk299.xml" /><stem n="focu" chunk="Search_Chunk300.xml" /><stem n="keyboard" chunk="Search_Chunk300.xml" /><stem n="shortcut" chunk="Search_Chunk300.xml" /><stem n="deal" chunk="Search_Chunk300.xml" /><stem n="mouse-ov" chunk="Search_Chunk300.xml" /><stem n="event" chunk="Search_Chunk300.xml" /><stem n="regist" chunk="Search_Chunk301.xml" /><stem n="temporarili" chunk="Search_Chunk301.xml" /><stem n="overrid" chunk="Search_Chunk301.xml" /><stem n="center" chunk="Search_Chunk301.xml" /><stem n="good" chunk="Search_Chunk302.xml" /><stem n="versu" chunk="Search_Chunk302.xml" /><stem n="blue" chunk="Search_Chunk302.xml" /><stem n="resid" chunk="Search_Chunk303.xml" /><stem n="overridden" chunk="Search_Chunk303.xml" /><stem n="comma" chunk="Search_Chunk303.xml" /><stem n="gain" chunk="Search_Chunk303.xml" /><stem n="reduc" chunk="Search_Chunk303.xml" /><stem n="equival" chunk="Search_Chunk303.xml" /><stem n="area" chunk="Search_Chunk303.xml" /><stem n="retain" chunk="Search_Chunk304.xml" /><stem n="matter" chunk="Search_Chunk304.xml" /><stem n="filter" chunk="Search_Chunk304.xml" /><stem n="shown" chunk="Search_Chunk305.xml" /><stem n="bright" chunk="Search_Chunk305.xml" /><stem n="orang" chunk="Search_Chunk305.xml" /><stem n="mute" chunk="Search_Chunk305.xml" /><stem n="six" chunk="Search_Chunk305.xml" /><stem n="finish" chunk="Search_Chunk305.xml" /><stem n="shift+f1" chunk="Search_Chunk306.xml" /><stem n="shift+f2" chunk="Search_Chunk306.xml" /><stem n="largenodegraph" chunk="Search_Chunk306.xml" /><stem n="shift+f3" chunk="Search_Chunk306.xml" /><stem n="largeview" chunk="Search_Chunk306.xml" /><stem n="shift+f4" chunk="Search_Chunk306.xml" /><stem n="shift+f5" chunk="Search_Chunk306.xml" /><stem n="shift+f6" chunk="Search_Chunk306.xml" /><stem n="resiz" chunk="Search_Chunk306.xml" /><stem n="room" chunk="Search_Chunk306.xml" /><stem n="divid" chunk="Search_Chunk306.xml" /><stem n="vertic" chunk="Search_Chunk306.xml" /><stem n="horizont" chunk="Search_Chunk307.xml" /><stem n="hold" chunk="Search_Chunk307.xml" /><stem n="spacebar" chunk="Search_Chunk307.xml" /><stem n="bring" chunk="Search_Chunk307.xml" /><stem n="right-click" chunk="Search_Chunk308.xml" /><stem n="posit" chunk="Search_Chunk308.xml" /><stem n="hide" chunk="Search_Chunk309.xml" /><stem n="fit" chunk="Search_Chunk309.xml" /><stem n="insid" chunk="Search_Chunk309.xml" /><stem n="close" chunk="Search_Chunk310.xml" /><stem n="top-right" chunk="Search_Chunk310.xml" /><stem n="alt" chunk="Search_Chunk310.xml" /><stem n="solo" chunk="Search_Chunk311.xml" /><stem n="chosen" chunk="Search_Chunk311.xml" /><stem n="turn" chunk="Search_Chunk311.xml" /><stem n="ctrl" chunk="Search_Chunk312.xml" /><stem n="cmd" chunk="Search_Chunk313.xml" /><stem n="+click" chunk="Search_Chunk314.xml" /><stem n="maxim" chunk="Search_Chunk314.xml" /><stem n="fullscreen" chunk="Search_Chunk314.xml" /><stem n="border" chunk="Search_Chunk314.xml" /><stem n="cursor" chunk="Search_Chunk314.xml" /><stem n="edg" chunk="Search_Chunk314.xml" /><stem n="happi" chunk="Search_Chunk315.xml" /><stem n="ask" chunk="Search_Chunk315.xml" /><stem n="vari" chunk="Search_Chunk315.xml" /><stem n="platform" chunk="Search_Chunk315.xml" /><stem n="startup" chunk="Search_Chunk315.xml" /><stem n="do" chunk="Search_Chunk315.xml" /><stem n="immedi" chunk="Search_Chunk315.xml" /><stem n="login" chunk="Search_Chunk315.xml" /><stem n="userprofil" chunk="Search_Chunk316.xml" /><stem n="maintain" chunk="Search_Chunk316.xml" /><stem n="ok" chunk="Search_Chunk316.xml" /><stem n="cancel" chunk="Search_Chunk316.xml" /><stem n="xp" chunk="Search_Chunk316.xml" /><stem n="subsequ" chunk="Search_Chunk316.xml" /><stem n="reset" chunk="Search_Chunk316.xml" /><stem n="restor" chunk="Search_Chunk316.xml" /><stem n="bottom-left" chunk="Search_Chunk317.xml" /><stem n="bottom" chunk="Search_Chunk317.xml" /><stem n="delet" chunk="Search_Chunk317.xml" /><stem n="rebuild" chunk="Search_Chunk318.xml" /><stem n="left-hand" chunk="Search_Chunk318.xml" /><stem n="hand" chunk="Search_Chunk318.xml" /><stem n="side" chunk="Search_Chunk318.xml" /><stem n="action" chunk="Search_Chunk319.xml" /><stem n="rather" chunk="Search_Chunk319.xml" /><stem n="individu" chunk="Search_Chunk319.xml" /><stem n="familiar" chunk="Search_Chunk320.xml" /><stem n="yourself" chunk="Search_Chunk320.xml" /><stem n="checker" chunk="Search_Chunk320.xml" /><stem n="box" chunk="Search_Chunk320.xml" /><stem n="grain" chunk="Search_Chunk321.xml" /><stem n="len" chunk="Search_Chunk321.xml" /><stem n="flare" chunk="Search_Chunk322.xml" /><stem n="sparkl" chunk="Search_Chunk322.xml" /><stem n="vector-bas" chunk="Search_Chunk322.xml" /><stem n="vector" chunk="Search_Chunk322.xml" /><stem n="retim" chunk="Search_Chunk323.xml" /><stem n="convolv" chunk="Search_Chunk323.xml" /><stem n="sharpen" chunk="Search_Chunk323.xml" /><stem n="detect" chunk="Search_Chunk324.xml" /><stem n="erod" chunk="Search_Chunk324.xml" /><stem n="procedur" chunk="Search_Chunk324.xml" /><stem n="layer" chunk="Search_Chunk324.xml" /><stem n="translat" chunk="Search_Chunk325.xml" /><stem n="stabil" chunk="Search_Chunk326.xml" /><stem n="spawn" chunk="Search_Chunk326.xml" /><stem n="deep" chunk="Search_Chunk326.xml" /><stem n="stereoscop" chunk="Search_Chunk327.xml" /><stem n="multi-view" chunk="Search_Chunk327.xml" /><stem n="materi" chunk="Search_Chunk327.xml" /><stem n="toolset" chunk="Search_Chunk327.xml" /><stem n="concaten" chunk="Search_Chunk327.xml" /><stem n="middle-mous" chunk="Search_Chunk327.xml" /><stem n="middl" chunk="Search_Chunk327.xml" /><stem n="match" chunk="Search_Chunk328.xml" /><stem n="arrow" chunk="Search_Chunk329.xml" /><stem n="relev" chunk="Search_Chunk329.xml" /><stem n="marque" chunk="Search_Chunk329.xml" /><stem n="upstream" chunk="Search_Chunk329.xml" /><stem n="feed" chunk="Search_Chunk329.xml" /><stem n="clear" chunk="Search_Chunk330.xml" /><stem n="forward" chunk="Search_Chunk330.xml" /><stem n="slash" chunk="Search_Chunk330.xml" /><stem n="alphanumer" chunk="Search_Chunk330.xml" /><stem n="wish" chunk="Search_Chunk330.xml" /><stem n="asterisk" chunk="Search_Chunk331.xml" /><stem n="mark" chunk="Search_Chunk331.xml" /><stem n="wild" chunk="Search_Chunk331.xml" /><stem n="stand" chunk="Search_Chunk331.xml" /><stem n="charact" chunk="Search_Chunk331.xml" /><stem n="manner" chunk="Search_Chunk331.xml" /><stem n="renam" chunk="Search_Chunk331.xml" /><stem n="coupl" chunk="Search_Chunk331.xml" /><stem n="titl" chunk="Search_Chunk331.xml" /><stem n="n" chunk="Search_Chunk331.xml" /><stem n="v" chunk="Search_Chunk332.xml" /><stem n="inherit" chunk="Search_Chunk332.xml" /><stem n="parent" chunk="Search_Chunk332.xml" /><stem n="unlik" chunk="Search_Chunk332.xml" /><stem n="clone" chunk="Search_Chunk332.xml" /><stem n="origin" chunk="Search_Chunk332.xml" /><stem n="blank" chunk="Search_Chunk333.xml" /><stem n="deselect" chunk="Search_Chunk333.xml" /><stem n="preform" chunk="Search_Chunk333.xml" /><stem n="pathwai" chunk="Search_Chunk333.xml" /><stem n="cut" chunk="Search_Chunk333.xml" /><stem n="prepar" chunk="Search_Chunk333.xml" /><stem n="elsewher" chunk="Search_Chunk333.xml" /><stem n="ident" chunk="Search_Chunk333.xml" /><stem n="stock" chunk="Search_Chunk333.xml" /><stem n="rippl" chunk="Search_Chunk333.xml" /><stem n="facil" chunk="Search_Chunk334.xml" /><stem n="fact" chunk="Search_Chunk334.xml" /><stem n="lightwrap" chunk="Search_Chunk334.xml" /><stem n="ibk" chunk="Search_Chunk334.xml" /><stem n="indic" chunk="Search_Chunk334.xml" /><stem n="k" chunk="Search_Chunk334.xml" /><stem n="declon" chunk="Search_Chunk334.xml" /><stem n="re-enab" chunk="Search_Chunk334.xml" /><stem n="enab" chunk="Search_Chunk334.xml" /><stem n="d" chunk="Search_Chunk334.xml" /><stem n="disbal" chunk="Search_Chunk335.xml" /><stem n="re-en" chunk="Search_Chunk335.xml" /><stem n="modif" chunk="Search_Chunk335.xml" /><stem n="arrowhead" chunk="Search_Chunk335.xml" /><stem n="disconnect" chunk="Search_Chunk335.xml" /><stem n="head" chunk="Search_Chunk335.xml" /><stem n="tail" chunk="Search_Chunk335.xml" /><stem n="empti" chunk="Search_Chunk335.xml" /><stem n="reconnect" chunk="Search_Chunk335.xml" /><stem n="distinguish" chunk="Search_Chunk335.xml" /><stem n="dual" chunk="Search_Chunk335.xml" /><stem n="label" chunk="Search_Chunk335.xml" /><stem n="decid" chunk="Search_Chunk336.xml" /><stem n="flow" chunk="Search_Chunk336.xml" /><stem n="duplic" chunk="Search_Chunk336.xml" /><stem n="leav" chunk="Search_Chunk336.xml" /><stem n="untouch" chunk="Search_Chunk336.xml" /><stem n="happen" chunk="Search_Chunk336.xml" /><stem n="bend" chunk="Search_Chunk336.xml" /><stem n="connector" chunk="Search_Chunk336.xml" /><stem n="necessari" chunk="Search_Chunk337.xml" /><stem n="reposit" chunk="Search_Chunk337.xml" /><stem n="yellow" chunk="Search_Chunk337.xml" /><stem n="wide" chunk="Search_Chunk337.xml" /><stem n="thin" chunk="Search_Chunk337.xml" /><stem n="primari" chunk="Search_Chunk337.xml" /><stem n="child" chunk="Search_Chunk337.xml" /><stem n="be" chunk="Search_Chunk337.xml" /><stem n="driven" chunk="Search_Chunk338.xml" /><stem n="off" chunk="Search_Chunk338.xml" /><stem n="slider" chunk="Search_Chunk339.xml" /><stem n="i" chunk="Search_Chunk339.xml" /><stem n="troubleshoot" chunk="Search_Chunk340.xml" /><stem n="easier" chunk="Search_Chunk340.xml" /><stem n="deciph" chunk="Search_Chunk340.xml" /><stem n="intent" chunk="Search_Chunk340.xml" /><stem n="green" chunk="Search_Chunk340.xml" /><stem n="characterist" chunk="Search_Chunk341.xml" /><stem n="attribut" chunk="Search_Chunk341.xml" /><stem n="checkbox" chunk="Search_Chunk341.xml" /><stem n="conceal" chunk="Search_Chunk342.xml" /><stem n="incom" chunk="Search_Chunk342.xml" /><stem n="enhanc" chunk="Search_Chunk342.xml" /><stem n="readabl" chunk="Search_Chunk342.xml" /><stem n="postag" chunk="Search_Chunk342.xml" /><stem n="stamp" chunk="Search_Chunk342.xml" /><stem n="thumbnail" chunk="Search_Chunk342.xml" /><stem n="surfac" chunk="Search_Chunk342.xml" /><stem n="p" chunk="Search_Chunk343.xml" /><stem n="static" chunk="Search_Chunk343.xml" /><stem n="clamp" chunk="Search_Chunk343.xml" /><stem n="code" chunk="Search_Chunk343.xml" /><stem n="repeatedli" chunk="Search_Chunk344.xml" /><stem n="quickli" chunk="Search_Chunk344.xml" /><stem n="easili" chunk="Search_Chunk344.xml" /><stem n="central" chunk="Search_Chunk344.xml" /><stem n="goe" chunk="Search_Chunk344.xml" /><stem n="subfold" chunk="Search_Chunk344.xml" /><stem n="basicroto" chunk="Search_Chunk344.xml" /><stem n="confus" chunk="Search_Chunk344.xml" /><stem n="clariti" chunk="Search_Chunk344.xml" /><stem n="grow" chunk="Search_Chunk344.xml" /><stem n="cluster" chunk="Search_Chunk344.xml" /><stem n="map" chunk="Search_Chunk344.xml" /><stem n="+drag" chunk="Search_Chunk345.xml" /><stem n="super" chunk="Search_Chunk345.xml" /><stem n="logo" chunk="Search_Chunk345.xml" /><stem n="larger" chunk="Search_Chunk345.xml" /><stem n="visibl" chunk="Search_Chunk345.xml" /><stem n="bottom-right" chunk="Search_Chunk346.xml" /><stem n="miniatur" chunk="Search_Chunk346.xml" /><stem n="entir" chunk="Search_Chunk346.xml" /><stem n="pink" chunk="Search_Chunk346.xml" /><stem n="portion" chunk="Search_Chunk346.xml" /><stem n="whole" chunk="Search_Chunk346.xml" /><stem n="upper-left" chunk="Search_Chunk347.xml" /><stem n="upper" chunk="Search_Chunk347.xml" /><stem n="small" chunk="Search_Chunk347.xml" /><stem n="zoom" chunk="Search_Chunk347.xml" /><stem n="subtract" chunk="Search_Chunk348.xml" /><stem n="f" chunk="Search_Chunk348.xml" /><stem n="bookmark" chunk="Search_Chunk348.xml" /><stem n="f7" chunk="Search_Chunk348.xml" /><stem n="three" chunk="Search_Chunk348.xml" /><stem n="f8" chunk="Search_Chunk348.xml" /><stem n="f9" chunk="Search_Chunk348.xml" /><stem n="f10" chunk="Search_Chunk348.xml" /><stem n="location1" chunk="Search_Chunk348.xml" /><stem n="extrem" chunk="Search_Chunk348.xml" /><stem n="act" chunk="Search_Chunk348.xml" /><stem n="jump-to" chunk="Search_Chunk349.xml" /><stem n="jump" chunk="Search_Chunk349.xml" /><stem n="j" chunk="Search_Chunk349.xml" /><stem n="accord" chunk="Search_Chunk349.xml" /><stem n="squar" chunk="Search_Chunk349.xml" /><stem n="bracket" chunk="Search_Chunk349.xml" /><stem n="bl" chunk="Search_Chunk349.xml" /><stem n="|" chunk="Search_Chunk349.xml" /><stem n="focus" chunk="Search_Chunk349.xml" /><stem n="colorcorrect" chunk="Search_Chunk349.xml" /><stem n="row" chunk="Search_Chunk349.xml" /><stem n="alphabet" chunk="Search_Chunk350.xml" /><stem n="rememb" chunk="Search_Chunk350.xml" /><stem n="backslash" chunk="Search_Chunk350.xml" /><stem n="clean" chunk="Search_Chunk350.xml" /><stem n="disorgan" chunk="Search_Chunk350.xml" /><stem n="tidi" chunk="Search_Chunk350.xml" /><stem n="rearrang" chunk="Search_Chunk350.xml" /><stem n="autoplac" chunk="Search_Chunk350.xml" /><stem n="altern" chunk="Search_Chunk350.xml" /><stem n="l" chunk="Search_Chunk350.xml" /><stem n="neat" chunk="Search_Chunk351.xml" /><stem n="determin" chunk="Search_Chunk351.xml" /><stem n="sensibl" chunk="Search_Chunk351.xml" /><stem n="overlap" chunk="Search_Chunk351.xml" /><stem n="preset" chunk="Search_Chunk351.xml" /><stem n="blur1" chunk="Search_Chunk351.xml" /><stem n="revert" chunk="Search_Chunk352.xml" /><stem n="unset" chunk="Search_Chunk352.xml" /><stem n="undo" chunk="Search_Chunk352.xml" /><stem n="redo" chunk="Search_Chunk352.xml" /><stem n="undon" chunk="Search_Chunk352.xml" /><stem n="unavail" chunk="Search_Chunk352.xml" /><stem n="hit" chunk="Search_Chunk352.xml" /><stem n="bold" chunk="Search_Chunk352.xml" /><stem n="&lt;b&gt;my" chunk="Search_Chunk352.xml" /><stem n="comment&lt;" chunk="Search_Chunk352.xml" /><stem n="b&gt;" chunk="Search_Chunk352.xml" /><stem n="myicon" chunk="Search_Chunk352.xml" /><stem n="png" chunk="Search_Chunk352.xml" /><stem n="&lt;img" chunk="Search_Chunk352.xml" /><stem n="src" chunk="Search_Chunk352.xml" /><stem n="non-standard" chunk="Search_Chunk352.xml" /><stem n="newlin" chunk="Search_Chunk352.xml" /><stem n="signific" chunk="Search_Chunk352.xml" /><stem n="font" chunk="Search_Chunk352.xml" /><stem n="emphas" chunk="Search_Chunk353.xml" /><stem n="size" chunk="Search_Chunk353.xml" /><stem n="uncheck" chunk="Search_Chunk354.xml" /><stem n="lifetem" chunk="Search_Chunk354.xml" /><stem n="lifetim" chunk="Search_Chunk354.xml" /><stem n="presenc" chunk="Search_Chunk354.xml" /><stem n="decrement" chunk="Search_Chunk354.xml" /><stem n="programmat" chunk="Search_Chunk354.xml" /><stem n="formula" chunk="Search_Chunk354.xml" /><stem n="halv" chunk="Search_Chunk354.xml" /><stem n="378" chunk="Search_Chunk354.xml" /><stem n="189" chunk="Search_Chunk354.xml" /><stem n="hundr" chunk="Search_Chunk354.xml" /><stem n="ten" chunk="Search_Chunk354.xml" /><stem n="tenth" chunk="Search_Chunk354.xml" /><stem n="hundredth" chunk="Search_Chunk354.xml" /><stem n="magnitud" chunk="Search_Chunk354.xml" /><stem n="initi" chunk="Search_Chunk354.xml" /><stem n="51" chunk="Search_Chunk354.xml" /><stem n="prior" chunk="Search_Chunk354.xml" /><stem n="unit" chunk="Search_Chunk355.xml" /><stem n="wheel" chunk="Search_Chunk355.xml" /><stem n="latter" chunk="Search_Chunk355.xml" /><stem n="tablet" chunk="Search_Chunk355.xml" /><stem n="hover" chunk="Search_Chunk355.xml" /><stem n="numer" chunk="Search_Chunk355.xml" /><stem n="four" chunk="Search_Chunk355.xml" /><stem n="swatch" chunk="Search_Chunk355.xml" /><stem n="picker" chunk="Search_Chunk355.xml" /><stem n="selector" chunk="Search_Chunk356.xml" /><stem n="ey" chunk="Search_Chunk356.xml" /><stem n="dropper" chunk="Search_Chunk356.xml" /><stem n="in-panel" chunk="Search_Chunk356.xml" /><stem n="color-pick" chunk="Search_Chunk356.xml" /><stem n="sampl" chunk="Search_Chunk356.xml" /><stem n="region" chunk="Search_Chunk357.xml" /><stem n="instead" chunk="Search_Chunk358.xml" /><stem n="averag" chunk="Search_Chunk358.xml" /><stem n="discard" chunk="Search_Chunk358.xml" /><stem n="+right-click" chunk="Search_Chunk358.xml" /><stem n="+right" chunk="Search_Chunk358.xml" /><stem n="in-pan" chunk="Search_Chunk358.xml" /><stem n="hue" chunk="Search_Chunk358.xml" /><stem n="marker" chunk="Search_Chunk358.xml" /><stem n="satur" chunk="Search_Chunk359.xml" /><stem n="affect" chunk="Search_Chunk359.xml" /><stem n="rel" chunk="Search_Chunk360.xml" /><stem n="offset" chunk="Search_Chunk360.xml" /><stem n="fine" chunk="Search_Chunk361.xml" /><stem n="absolut" chunk="Search_Chunk361.xml" /><stem n="less" chunk="Search_Chunk361.xml" /><stem n="neg" chunk="Search_Chunk361.xml" /><stem n="01" chunk="Search_Chunk362.xml" /><stem n="left-click" chunk="Search_Chunk362.xml" /><stem n="001" chunk="Search_Chunk362.xml" /><stem n="scrub" chunk="Search_Chunk362.xml" /><stem n="slowli" chunk="Search_Chunk362.xml" /><stem n="enough" chunk="Search_Chunk362.xml" /><stem n="tmi" chunk="Search_Chunk362.xml" /><stem n="state" chunk="Search_Chunk362.xml" /><stem n="cycl" chunk="Search_Chunk362.xml" /><stem n="dyn" chunk="Search_Chunk362.xml" /><stem n="exactli" chunk="Search_Chunk362.xml" /><stem n="middle-click" chunk="Search_Chunk363.xml" /><stem n="r" chunk="Search_Chunk363.xml" /><stem n="g" chunk="Search_Chunk363.xml" /><stem n="assum" chunk="Search_Chunk363.xml" /><stem n="rgba" chunk="Search_Chunk363.xml" /><stem n="besid" chunk="Search_Chunk364.xml" /><stem n="alpha" chunk="Search_Chunk364.xml" /><stem n="fourth" chunk="Search_Chunk365.xml" /><stem n="temperatur" chunk="Search_Chunk365.xml" /><stem n="appar" chunk="Search_Chunk365.xml" /><stem n="invers" chunk="Search_Chunk365.xml" /><stem n="magenta" chunk="Search_Chunk365.xml" /><stem n="m" chunk="Search_Chunk365.xml" /><stem n="decreas" chunk="Search_Chunk365.xml" /><stem n="violet" chunk="Search_Chunk366.xml" /><stem n="puriti" chunk="Search_Chunk366.xml" /><stem n="aren" chunk="Search_Chunk366.xml" /><stem n="frequent" chunk="Search_Chunk366.xml" /><stem n="explicitli" chunk="Search_Chunk366.xml" /><stem n="interpol" chunk="Search_Chunk366.xml" /><stem n="autokei" chunk="Search_Chunk366.xml" /><stem n="moment" chunk="Search_Chunk366.xml" /><stem n="continu" chunk="Search_Chunk366.xml" /><stem n="scrubber" chunk="Search_Chunk366.xml" /><stem n="preview" chunk="Search_Chunk366.xml" /><stem n="notic" chunk="Search_Chunk367.xml" /><stem n="confirm" chunk="Search_Chunk367.xml" /><stem n="ye" chunk="Search_Chunk367.xml" /><stem n="syntax" chunk="Search_Chunk367.xml" /><stem n="clip" chunk="Search_Chunk367.xml" /><stem n="trim" chunk="Search_Chunk368.xml" /><stem n="slip" chunk="Search_Chunk368.xml" /><stem n="well" chunk="Search_Chunk368.xml" /><stem n="timeclip" chunk="Search_Chunk368.xml" /><stem n="unwant" chunk="Search_Chunk369.xml" /><stem n="seen" chunk="Search_Chunk369.xml" /><stem n="appendclip" chunk="Search_Chunk369.xml" /><stem n="sent" chunk="Search_Chunk369.xml" /><stem n="flipbook" chunk="Search_Chunk369.xml" /><stem n="frameoffset" chunk="Search_Chunk369.xml" /><stem n="pop" chunk="Search_Chunk369.xml" /><stem n="begin" chunk="Search_Chunk369.xml" /><stem n="constrain" chunk="Search_Chunk369.xml" /><stem n="handl" chunk="Search_Chunk369.xml" /><stem n="unus" chunk="Search_Chunk370.xml" /><stem n="pictur" chunk="Search_Chunk370.xml" /><stem n="loop" chunk="Search_Chunk370.xml" /><stem n="span" chunk="Search_Chunk370.xml" /><stem n="bounc" chunk="Search_Chunk370.xml" /><stem n="plai" chunk="Search_Chunk370.xml" /><stem n="backward" chunk="Search_Chunk371.xml" /><stem n="black" chunk="Search_Chunk371.xml" /><stem n="synchron" chunk="Search_Chunk372.xml" /><stem n="anywher" chunk="Search_Chunk372.xml" /><stem n="too" chunk="Search_Chunk372.xml" /><stem n="physic" chunk="Search_Chunk372.xml" /><stem n="reveal" chunk="Search_Chunk372.xml" /><stem n="whose" chunk="Search_Chunk372.xml" /><stem n="y" chunk="Search_Chunk373.xml" /><stem n="axi" chunk="Search_Chunk374.xml" /><stem n="denot" chunk="Search_Chunk374.xml" /><stem n="hierarchi" chunk="Search_Chunk375.xml" /><stem n="consecut" chunk="Search_Chunk375.xml" /><stem n="audioread" chunk="Search_Chunk375.xml" /><stem n="audio" chunk="Search_Chunk375.xml" /><stem n="style" chunk="Search_Chunk375.xml" /><stem n="sketch" chunk="Search_Chunk375.xml" /><stem n="smooth" chunk="Search_Chunk375.xml" /><stem n="revers" chunk="Search_Chunk376.xml" /><stem n="negat" chunk="Search_Chunk376.xml" /><stem n="drawn" chunk="Search_Chunk376.xml" /><stem n="along" chunk="Search_Chunk376.xml" /><stem n="direct" chunk="Search_Chunk377.xml" /><stem n="nudg" chunk="Search_Chunk377.xml" /><stem n="keypad" chunk="Search_Chunk377.xml" /><stem n="round" chunk="Search_Chunk377.xml" /><stem n="nearest" chunk="Search_Chunk378.xml" /><stem n="integ" chunk="Search_Chunk378.xml" /><stem n="snap" chunk="Search_Chunk378.xml" /><stem n="momentarili" chunk="Search_Chunk378.xml" /><stem n="narrow" chunk="Search_Chunk378.xml" /><stem n="dimens" chunk="Search_Chunk378.xml" /><stem n="flat" chunk="Search_Chunk378.xml" /><stem n="accident" chunk="Search_Chunk378.xml" /><stem n="slope" chunk="Search_Chunk378.xml" /><stem n="tangent" chunk="Search_Chunk379.xml" /><stem n="movement" chunk="Search_Chunk379.xml" /><stem n="ax" chunk="Search_Chunk379.xml" /><stem n="x+10" chunk="Search_Chunk379.xml" /><stem n="neighbor" chunk="Search_Chunk379.xml" /><stem n="smoother" chunk="Search_Chunk379.xml" /><stem n="sharp" chunk="Search_Chunk380.xml" /><stem n="straight" chunk="Search_Chunk380.xml" /><stem n="equal" chunk="Search_Chunk380.xml" /><stem n="smaller" chunk="Search_Chunk380.xml" /><stem n="never" chunk="Search_Chunk380.xml" /><stem n="exce" chunk="Search_Chunk380.xml" /><stem n="catmull-rom" chunk="Search_Chunk380.xml" /><stem n="catmul" chunk="Search_Chunk380.xml" /><stem n="rom" chunk="Search_Chunk380.xml" /><stem n="regardless" chunk="Search_Chunk380.xml" /><stem n="cubic" chunk="Search_Chunk381.xml" /><stem n="deriv" chunk="Search_Chunk381.xml" /><stem n="zero" chunk="Search_Chunk381.xml" /><stem n="break" chunk="Search_Chunk381.xml" /><stem n="predefin" chunk="Search_Chunk381.xml" /><stem n="dialogu" chunk="Search_Chunk381.xml" /><stem n="rest" chunk="Search_Chunk381.xml" /><stem n="solid" chunk="Search_Chunk381.xml" /><stem n="actual" chunk="Search_Chunk382.xml" /><stem n="-5." chunk="Search_Chunk382.xml" /><stem n="sin" chunk="Search_Chunk382.xml" /><stem n="variou" chunk="Search_Chunk382.xml" /><stem n="64k" chunk="Search_Chunk382.xml" /><stem n="though" chunk="Search_Chunk382.xml" /><stem n="suffici" chunk="Search_Chunk382.xml" /><stem n="correspond" chunk="Search_Chunk382.xml" /><stem n="slot" chunk="Search_Chunk383.xml" /><stem n="depict" chunk="Search_Chunk383.xml" /><stem n="re-cent" chunk="Search_Chunk383.xml" /><stem n="attain" chunk="Search_Chunk383.xml" /><stem n="minu" chunk="Search_Chunk383.xml" /><stem n="100" chunk="Search_Chunk383.xml" /><stem n="handi" chunk="Search_Chunk383.xml" /><stem n="backtick" chunk="Search_Chunk383.xml" /><stem n="alt+z" chunk="Search_Chunk383.xml" /><stem n="overscan" chunk="Search_Chunk383.xml" /><stem n="extend" chunk="Search_Chunk383.xml" /><stem n="wipe" chunk="Search_Chunk383.xml" /><stem n="cue" chunk="Search_Chunk383.xml" /><stem n="accept" chunk="Search_Chunk383.xml" /><stem n="mathemat" chunk="Search_Chunk383.xml" /><stem n="global" chunk="Search_Chunk383.xml" /><stem n="accordingli" chunk="Search_Chunk384.xml" /><stem n="mmb" chunk="Search_Chunk384.xml" /><stem n="click+drag" chunk="Search_Chunk384.xml" /><stem n="frames-p" chunk="Search_Chunk384.xml" /><stem n="frames-per-second" chunk="Search_Chunk384.xml" /><stem n="per-second" chunk="Search_Chunk384.xml" /><stem n="although" chunk="Search_Chunk384.xml" /><stem n="imageri" chunk="Search_Chunk384.xml" /><stem n="forth" chunk="Search_Chunk384.xml" /><stem n="ignor" chunk="Search_Chunk384.xml" /><stem n="suit" chunk="Search_Chunk384.xml" /><stem n="cu" chunk="Search_Chunk384.xml" /><stem n="paus" chunk="Search_Chunk384.xml" /><stem n="reactiv" chunk="Search_Chunk384.xml" /><stem n="refresh" chunk="Search_Chunk384.xml" /><stem n="u" chunk="Search_Chunk385.xml" /><stem n="rbg" chunk="Search_Chunk385.xml" /><stem n="superimpos" chunk="Search_Chunk385.xml" /><stem n="overlai" chunk="Search_Chunk385.xml" /><stem n="underli" chunk="Search_Chunk385.xml" /><stem n="bound" chunk="Search_Chunk385.xml" /><stem n="magnif" chunk="Search_Chunk386.xml" /><stem n="factor" chunk="Search_Chunk386.xml" /><stem n="low-r" chunk="Search_Chunk386.xml" /><stem n="low" chunk="Search_Chunk386.xml" /><stem n="full-r" chunk="Search_Chunk386.xml" /><stem n="multipli" chunk="Search_Chunk386.xml" /><stem n="50" chunk="Search_Chunk387.xml" /><stem n="full-siz" chunk="Search_Chunk387.xml" /><stem n="have" chunk="Search_Chunk387.xml" /><stem n="touch" chunk="Search_Chunk387.xml" /><stem n="come" chunk="Search_Chunk387.xml" /><stem n="down-rez" chunk="Search_Chunk387.xml" /><stem n="rez" chunk="Search_Chunk387.xml" /><stem n="even" chunk="Search_Chunk387.xml" /><stem n="1k" chunk="Search_Chunk388.xml" /><stem n="accur" chunk="Search_Chunk388.xml" /><stem n="feedback" chunk="Search_Chunk388.xml" /><stem n="ratio" chunk="Search_Chunk388.xml" /><stem n="rectangular" chunk="Search_Chunk388.xml" /><stem n="anamorph" chunk="Search_Chunk388.xml" /><stem n="footag" chunk="Search_Chunk388.xml" /><stem n="full-fram" chunk="Search_Chunk389.xml" /><stem n="scanlin" chunk="Search_Chunk389.xml" /><stem n="÷4" chunk="Search_Chunk389.xml" /><stem n="constantli" chunk="Search_Chunk389.xml" /><stem n="longer" chunk="Search_Chunk389.xml" /><stem n="roi" chunk="Search_Chunk389.xml" /><stem n="process-heavi" chunk="Search_Chunk389.xml" /><stem n="heavi" chunk="Search_Chunk389.xml" /><stem n="free-draw" chunk="Search_Chunk389.xml" /><stem n="w" chunk="Search_Chunk389.xml" /><stem n="spot" chunk="Search_Chunk389.xml" /><stem n="hole" chunk="Search_Chunk389.xml" /><stem n="boost" chunk="Search_Chunk389.xml" /><stem n="exposur" chunk="Search_Chunk389.xml" /><stem n="f-stop" chunk="Search_Chunk389.xml" /><stem n="stripe" chunk="Search_Chunk390.xml" /><stem n="safe" chunk="Search_Chunk390.xml" /><stem n="audienc" chunk="Search_Chunk390.xml" /><stem n="guidelin" chunk="Search_Chunk390.xml" /><stem n="won" chunk="Search_Chunk390.xml" /><stem n="zone" chunk="Search_Chunk390.xml" /><stem n="visual" chunk="Search_Chunk390.xml" /><stem n="crosshair" chunk="Search_Chunk390.xml" /><stem n="simul" chunk="Search_Chunk390.xml" /><stem n="none" chunk="Search_Chunk390.xml" /><stem n="pair" chunk="Search_Chunk391.xml" /><stem n="semi-transpar" chunk="Search_Chunk391.xml" /><stem n="semi" chunk="Search_Chunk391.xml" /><stem n="transpar" chunk="Search_Chunk391.xml" /><stem n="shade" chunk="Search_Chunk391.xml" /><stem n="custom_guid" chunk="Search_Chunk391.xml" /><stem n="py" chunk="Search_Chunk391.xml" /><stem n="kept" chunk="Search_Chunk391.xml" /><stem n="&lt;installation_directory&gt;" chunk="Search_Chunk391.xml" /><stem n="pythonextens" chunk="Search_Chunk391.xml" /><stem n="site" chunk="Search_Chunk391.xml" /><stem n="site-packag" chunk="Search_Chunk391.xml" /><stem n="append" chunk="Search_Chunk391.xml" /><stem n="myguid" chunk="Search_Chunk392.xml" /><stem n="kguidemask" chunk="Search_Chunk392.xml" /><stem n="maskguid" chunk="Search_Chunk392.xml" /><stem n="split-screen" chunk="Search_Chunk392.xml" /><stem n="comparison" chunk="Search_Chunk392.xml" /><stem n="keystrok" chunk="Search_Chunk392.xml" /><stem n="long" chunk="Search_Chunk392.xml" /><stem n="rotat" chunk="Search_Chunk392.xml" /><stem n="arc" chunk="Search_Chunk393.xml" /><stem n="cross-dissolv" chunk="Search_Chunk393.xml" /><stem n="cross" chunk="Search_Chunk393.xml" /><stem n="wirefram" chunk="Search_Chunk393.xml" /><stem n="thank" chunk="Search_Chunk393.xml" /><stem n="orthograph" chunk="Search_Chunk393.xml" /><stem n="non-perspect" chunk="Search_Chunk393.xml" /><stem n="perspect" chunk="Search_Chunk393.xml" /><stem n="legaci" chunk="Search_Chunk393.xml" /><stem n="instanti" chunk="Search_Chunk393.xml" /><stem n="script-specif" chunk="Search_Chunk393.xml" /><stem n="experiment" chunk="Search_Chunk393.xml" /><stem n="prone" chunk="Search_Chunk393.xml" /><stem n="due" chunk="Search_Chunk393.xml" /><stem n="compil" chunk="Search_Chunk393.xml" /><stem n="languag" chunk="Search_Chunk393.xml" /><stem n="danger" chunk="Search_Chunk394.xml" /><stem n="conjunct" chunk="Search_Chunk394.xml" /><stem n="profil" chunk="Search_Chunk394.xml" /><stem n="great" chunk="Search_Chunk394.xml" /><stem n="flexibl" chunk="Search_Chunk394.xml" /><stem n="ip" chunk="Search_Chunk394.xml" /><stem n="whenev" chunk="Search_Chunk394.xml" /><stem n="1d" chunk="Search_Chunk394.xml" /><stem n="vectorfield" chunk="Search_Chunk394.xml" /><stem n="implement" chunk="Search_Chunk394.xml" /><stem n="unless" chunk="Search_Chunk394.xml" /><stem n="gl" chunk="Search_Chunk394.xml" /><stem n="buffer" chunk="Search_Chunk395.xml" /><stem n="byte" chunk="Search_Chunk395.xml" /><stem n="viewergain" chunk="Search_Chunk395.xml" /><stem n="viewergamma" chunk="Search_Chunk395.xml" /><stem n="viewercliptest" chunk="Search_Chunk395.xml" /><stem n="entri" chunk="Search_Chunk395.xml" /><stem n="templat" chunk="Search_Chunk395.xml" /><stem n="lost" chunk="Search_Chunk395.xml" /><stem n="previous" chunk="Search_Chunk395.xml" /><stem n="unlimit" chunk="Search_Chunk395.xml" /><stem n="non-crit" chunk="Search_Chunk395.xml" /><stem n="critic" chunk="Search_Chunk395.xml" /><stem n="conveni" chunk="Search_Chunk395.xml" /><stem n="chart" chunk="Search_Chunk395.xml" /><stem n="shot-by-shot" chunk="Search_Chunk395.xml" /><stem n="shot-bi" chunk="Search_Chunk395.xml" /><stem n="by-shot" chunk="Search_Chunk395.xml" /><stem n="basi" chunk="Search_Chunk395.xml" /><stem n="pipelin" chunk="Search_Chunk395.xml" /><stem n="dither" chunk="Search_Chunk395.xml" /><stem n="cliptest" chunk="Search_Chunk395.xml" /><stem n="itself" chunk="Search_Chunk395.xml" /><stem n="whatev" chunk="Search_Chunk396.xml" /><stem n="diffus" chunk="Search_Chunk396.xml" /><stem n="round-off" chunk="Search_Chunk396.xml" /><stem n="convers" chunk="Search_Chunk396.xml" /><stem n="viewer_input" chunk="Search_Chunk396.xml" /><stem n="pre" chunk="Search_Chunk396.xml" /><stem n="pre-5" chunk="Search_Chunk396.xml" /><stem n="rec1886" chunk="Search_Chunk396.xml" /><stem n="best-guess" chunk="Search_Chunk396.xml" /><stem n="guess" chunk="Search_Chunk396.xml" /><stem n="bake" chunk="Search_Chunk396.xml" /><stem n="broadcast" chunk="Search_Chunk396.xml" /><stem n="structur" chunk="Search_Chunk397.xml" /><stem n="favorit" chunk="Search_Chunk397.xml" /><stem n="closer" chunk="Search_Chunk397.xml" /><stem n="ascend" chunk="Search_Chunk397.xml" /><stem n="administr" chunk="Search_Chunk397.xml" /><stem n="fgelement" chunk="Search_Chunk397.xml" /><stem n="cin" chunk="Search_Chunk397.xml" /><stem n="1-50" chunk="Search_Chunk397.xml" /><stem n="0001" chunk="Search_Chunk397.xml" /><stem n="0002" chunk="Search_Chunk397.xml" /><stem n="0003" chunk="Search_Chunk397.xml" /><stem n="cext" chunk="Search_Chunk397.xml" /><stem n="init" chunk="Search_Chunk397.xml" /><stem n="addsequencefileextens" chunk="Search_Chunk397.xml" /><stem n="incomplet" chunk="Search_Chunk397.xml" /><stem n="seq" chunk="Search_Chunk397.xml" /><stem n="histori" chunk="Search_Chunk397.xml" /><stem n="z" chunk="Search_Chunk397.xml" /><stem n="pop-up" chunk="Search_Chunk398.xml" /><stem n="futur" chunk="Search_Chunk398.xml" /><stem n="plan" chunk="Search_Chunk398.xml" /><stem n="face" chunk="Search_Chunk398.xml" /><stem n="consol" chunk="Search_Chunk398.xml" /><stem n="miss" chunk="Search_Chunk398.xml" /><stem n="isn" chunk="Search_Chunk398.xml" /><stem n="natur" chunk="Search_Chunk398.xml" /><stem n="ingest" chunk="Search_Chunk398.xml" /><stem n="sort" chunk="Search_Chunk399.xml" /><stem n="broad" chunk="Search_Chunk399.xml" /><stem n="categori" chunk="Search_Chunk399.xml" /><stem n="treat" chunk="Search_Chunk399.xml" /><stem n="premultipli" chunk="Search_Chunk399.xml" /><stem n="un-premultipli" chunk="Search_Chunk399.xml" /><stem n="un" chunk="Search_Chunk399.xml" /><stem n="schedul" chunk="Search_Chunk399.xml" /><stem n="motion" chunk="Search_Chunk399.xml" /><stem n="preserv" chunk="Search_Chunk400.xml" /><stem n="symbol" chunk="Search_Chunk400.xml" /><stem n="consolid" chunk="Search_Chunk400.xml" /><stem n="movi" chunk="Search_Chunk400.xml" /><stem n="mov" chunk="Search_Chunk400.xml" /><stem n="ulimit" chunk="Search_Chunk400.xml" /><stem n="sn" chunk="Search_Chunk400.xml" /><stem n="-sn" chunk="Search_Chunk400.xml" /><stem n="2048" chunk="Search_Chunk400.xml" /><stem n="inher" chunk="Search_Chunk400.xml" /><stem n="timecod" chunk="Search_Chunk400.xml" /><stem n="sub-menu" chunk="Search_Chunk400.xml" /><stem n="sub" chunk="Search_Chunk400.xml" /><stem n="header" chunk="Search_Chunk400.xml" /><stem n="max" chunk="Search_Chunk400.xml" /><stem n="timebas" chunk="Search_Chunk401.xml" /><stem n="lead" chunk="Search_Chunk401.xml" /><stem n="spurious" chunk="Search_Chunk401.xml" /><stem n="high" chunk="Search_Chunk401.xml" /><stem n="srcout" chunk="Search_Chunk401.xml" /><stem n="dstout" chunk="Search_Chunk401.xml" /><stem n="convent" chunk="Search_Chunk401.xml" /><stem n="scan" chunk="Search_Chunk401.xml" /><stem n="1-5" chunk="Search_Chunk401.xml" /><stem n="11-20" chunk="Search_Chunk401.xml" /><stem n="11" chunk="Search_Chunk401.xml" /><stem n="distinct" chunk="Search_Chunk401.xml" /><stem n="inclus" chunk="Search_Chunk401.xml" /><stem n="pattern" chunk="Search_Chunk401.xml" /><stem n="supportedfil" chunk="Search_Chunk402.xml" /><stem n="ext" chunk="Search_Chunk402.xml" /><stem n="post" chunk="Search_Chunk402.xml" /><stem n="inevit" chunk="Search_Chunk402.xml" /><stem n="reload" chunk="Search_Chunk402.xml" /><stem n="rescan" chunk="Search_Chunk402.xml" /><stem n="redirect" chunk="Search_Chunk402.xml" /><stem n="filepath" chunk="Search_Chunk402.xml" /><stem n="offlin" chunk="Search_Chunk402.xml" /><stem n="alt+f5" chunk="Search_Chunk402.xml" /><stem n="nuke_temp_dir" chunk="Search_Chunk402.xml" /><stem n="guarante" chunk="Search_Chunk402.xml" /><stem n="clip-by-clip" chunk="Search_Chunk402.xml" /><stem n="clip-bi" chunk="Search_Chunk402.xml" /><stem n="by-clip" chunk="Search_Chunk402.xml" /><stem n="auto-" chunk="Search_Chunk402.xml" /><stem n="sub-directori" chunk="Search_Chunk402.xml" /><stem n="reserv" chunk="Search_Chunk402.xml" /><stem n="2000" chunk="Search_Chunk402.xml" /><stem n="-2000" chunk="Search_Chunk402.xml" /><stem n="polici" chunk="Search_Chunk402.xml" /><stem n="breach" chunk="Search_Chunk402.xml" /><stem n="auto-loc" chunk="Search_Chunk402.xml" /><stem n="reach" chunk="Search_Chunk402.xml" /><stem n="purg" chunk="Search_Chunk402.xml" /><stem n="notifi" chunk="Search_Chunk402.xml" /><stem n="tag" chunk="Search_Chunk402.xml" /><stem n="unaffect" chunk="Search_Chunk403.xml" /><stem n="record" chunk="Search_Chunk403.xml" /><stem n="overwrit" chunk="Search_Chunk403.xml" /><stem n="3-point" chunk="Search_Chunk403.xml" /><stem n="backspac" chunk="Search_Chunk403.xml" /><stem n="00002000" chunk="Search_Chunk403.xml" /><stem n="rapid" chunk="Search_Chunk403.xml" /><stem n="retriev" chunk="Search_Chunk403.xml" /><stem n="resum" chunk="Search_Chunk403.xml" /><stem n="playhead" chunk="Search_Chunk403.xml" /><stem n="flush" chunk="Search_Chunk403.xml" /><stem n="occur" chunk="Search_Chunk403.xml" /><stem n="half-gb" chunk="Search_Chunk403.xml" /><stem n="lose" chunk="Search_Chunk403.xml" /><stem n="pick" chunk="Search_Chunk404.xml" /><stem n="transcod" chunk="Search_Chunk404.xml" /><stem n="purpl" chunk="Search_Chunk404.xml" /><stem n="o" chunk="Search_Chunk404.xml" /><stem n="popup" chunk="Search_Chunk404.xml" /><stem n="alt+i" chunk="Search_Chunk404.xml" /><stem n="alt+o" chunk="Search_Chunk404.xml" /><stem n="reappli" chunk="Search_Chunk404.xml" /><stem n="jog" chunk="Search_Chunk404.xml" /><stem n="frame-bi" chunk="Search_Chunk404.xml" /><stem n="frame-by-fram" chunk="Search_Chunk404.xml" /><stem n="by-fram" chunk="Search_Chunk404.xml" /><stem n="rotari" chunk="Search_Chunk404.xml" /><stem n="clockwis" chunk="Search_Chunk404.xml" /><stem n="anti-clockwis" chunk="Search_Chunk404.xml" /><stem n="anti" chunk="Search_Chunk404.xml" /><stem n="shuttl" chunk="Search_Chunk404.xml" /><stem n="toward" chunk="Search_Chunk404.xml" /><stem n="skip" chunk="Search_Chunk405.xml" /><stem n="disparityl" chunk="Search_Chunk405.xml" /><stem n="glanc" chunk="Search_Chunk405.xml" /><stem n="dispar" chunk="Search_Chunk405.xml" /><stem n="pgup" chunk="Search_Chunk405.xml" /><stem n="pgdn" chunk="Search_Chunk405.xml" /><stem n="luma" chunk="Search_Chunk405.xml" /><stem n="opencolorio" chunk="Search_Chunk405.xml" /><stem n="blend" chunk="Search_Chunk405.xml" /><stem n="onion" chunk="Search_Chunk406.xml" /><stem n="skin" chunk="Search_Chunk406.xml" /><stem n="format-depend" chunk="Search_Chunk406.xml" /><stem n="multi-format" chunk="Search_Chunk406.xml" /><stem n="85" chunk="Search_Chunk406.xml" /><stem n="expos" chunk="Search_Chunk406.xml" /><stem n="re-cach" chunk="Search_Chunk406.xml" /><stem n="premium" chunk="Search_Chunk406.xml" /><stem n="rt" chunk="Search_Chunk406.xml" /><stem n="underneath" chunk="Search_Chunk406.xml" /><stem n="obei" chunk="Search_Chunk406.xml" /><stem n="latenc" chunk="Search_Chunk406.xml" /><stem n="millisecond" chunk="Search_Chunk406.xml" /><stem n="ycbcr" chunk="Search_Chunk406.xml" /><stem n="matrix" chunk="Search_Chunk406.xml" /><stem n="arriraw" chunk="Search_Chunk407.xml" /><stem n="sdk" chunk="Search_Chunk407.xml" /><stem n="16-bit" chunk="Search_Chunk407.xml" /><stem n="half-float" chunk="Search_Chunk407.xml" /><stem n="custompdlogblackpoint" chunk="Search_Chunk407.xml" /><stem n="custompdlogwhitepoint" chunk="Search_Chunk407.xml" /><stem n="custompdloggamma" chunk="Search_Chunk407.xml" /><stem n="subject" chunk="Search_Chunk407.xml" /><stem n="logc" chunk="Search_Chunk407.xml" /><stem n="unsqueez" chunk="Search_Chunk407.xml" /><stem n="tick" chunk="Search_Chunk407.xml" /><stem n="redspac" chunk="Search_Chunk407.xml" /><stem n="cameran" chunk="Search_Chunk407.xml" /><stem n="firewir" chunk="Search_Chunk407.xml" /><stem n="architectur" chunk="Search_Chunk407.xml" /><stem n="aja" chunk="Search_Chunk407.xml" /><stem n="blackmag" chunk="Search_Chunk407.xml" /><stem n="unifi" chunk="Search_Chunk407.xml" /><stem n="decklink" chunk="Search_Chunk407.xml" /><stem n="pci" chunk="Search_Chunk407.xml" /><stem n="ultrastudio" chunk="Search_Chunk407.xml" /><stem n="sdi" chunk="Search_Chunk407.xml" /><stem n="thunderbolt" chunk="Search_Chunk407.xml" /><stem n="kona" chunk="Search_Chunk407.xml" /><stem n="3g" chunk="Search_Chunk407.xml" /><stem n="lhi" chunk="Search_Chunk407.xml" /><stem n="lhe" chunk="Search_Chunk407.xml" /><stem n="ioxt" chunk="Search_Chunk407.xml" /><stem n="io4k" chunk="Search_Chunk407.xml" /><stem n="taken" chunk="Search_Chunk407.xml" /><stem n="pseudo" chunk="Search_Chunk407.xml" /><stem n="full-screen" chunk="Search_Chunk407.xml" /><stem n="flip" chunk="Search_Chunk407.xml" /><stem n="full-rang" chunk="Search_Chunk408.xml" /><stem n="0-255" chunk="Search_Chunk408.xml" /><stem n="255" chunk="Search_Chunk408.xml" /><stem n="16-236" chunk="Search_Chunk408.xml" /><stem n="236" chunk="Search_Chunk408.xml" /><stem n="itu-r" chunk="Search_Chunk408.xml" /><stem n="itu" chunk="Search_Chunk408.xml" /><stem n="bt" chunk="Search_Chunk408.xml" /><stem n="610" chunk="Search_Chunk408.xml" /><stem n="610-4" chunk="Search_Chunk408.xml" /><stem n="config" chunk="Search_Chunk408.xml" /><stem n="evalu" chunk="Search_Chunk408.xml" /><stem n="chroma" chunk="Search_Chunk408.xml" /><stem n="encod" chunk="Search_Chunk408.xml" /><stem n="rec601" chunk="Search_Chunk408.xml" /><stem n="slow" chunk="Search_Chunk408.xml" /><stem n="histogram" chunk="Search_Chunk408.xml" /><stem n="mid" chunk="Search_Chunk408.xml" /><stem n="tone" chunk="Search_Chunk408.xml" /><stem n="gang" chunk="Search_Chunk408.xml" /><stem n="customiz" chunk="Search_Chunk408.xml" /><stem n="white" chunk="Search_Chunk408.xml" /><stem n="waveform" chunk="Search_Chunk409.xml" /><stem n="lumin" chunk="Search_Chunk409.xml" /><stem n="trace" chunk="Search_Chunk409.xml" /><stem n="spectrum" chunk="Search_Chunk409.xml" /><stem n="brighter" chunk="Search_Chunk409.xml" /><stem n="measur" chunk="Search_Chunk409.xml" /><stem n="consid" chunk="Search_Chunk410.xml" /><stem n="opposit" chunk="Search_Chunk410.xml" /><stem n="true" chunk="Search_Chunk410.xml" /><stem n="vectorscop" chunk="Search_Chunk410.xml" /><stem n="outward" chunk="Search_Chunk410.xml" /><stem n="farther" chunk="Search_Chunk410.xml" /><stem n="mostli" chunk="Search_Chunk410.xml" /><stem n="cyan" chunk="Search_Chunk410.xml" /><stem n="oversatur" chunk="Search_Chunk410.xml" /><stem n="badli" chunk="Search_Chunk410.xml" /><stem n="spill" chunk="Search_Chunk410.xml" /><stem n="reason" chunk="Search_Chunk411.xml" /><stem n="unpredict" chunk="Search_Chunk411.xml" /><stem n="nclc" chunk="Search_Chunk411.xml" /><stem n="atom" chunk="Search_Chunk411.xml" /><stem n="gama" chunk="Search_Chunk411.xml" /><stem n="prore" chunk="Search_Chunk411.xml" /><stem n="codec" chunk="Search_Chunk411.xml" /><stem n="media-specif" chunk="Search_Chunk411.xml" /><stem n="cbcr" chunk="Search_Chunk411.xml" /><stem n="rec" chunk="Search_Chunk411.xml" /><stem n="601" chunk="Search_Chunk411.xml" /><stem n="709" chunk="Search_Chunk411.xml" /><stem n="declar" chunk="Search_Chunk411.xml" /><stem n="pack" chunk="Search_Chunk411.xml" /><stem n="unknown" chunk="Search_Chunk411.xml" /><stem n="reli" chunk="Search_Chunk411.xml" /><stem n="non-rgb" chunk="Search_Chunk411.xml" /><stem n="myriad" chunk="Search_Chunk411.xml" /><stem n="potenti" chunk="Search_Chunk411.xml" /><stem n="worst" chunk="Search_Chunk411.xml" /><stem n="scenario" chunk="Search_Chunk411.xml" /><stem n="class" chunk="Search_Chunk411.xml" /><stem n="significantli" chunk="Search_Chunk411.xml" /><stem n="inact" chunk="Search_Chunk411.xml" /><stem n="answer" chunk="Search_Chunk411.xml" /><stem n="teach" chunk="Search_Chunk411.xml" /><stem n="nois" chunk="Search_Chunk412.xml" /><stem n="denois" chunk="Search_Chunk412.xml" /><stem n="spatial" chunk="Search_Chunk413.xml" /><stem n="greenscreen" chunk="Search_Chunk413.xml" /><stem n="keylight" chunk="Search_Chunk413.xml" /><stem n="orient" chunk="Search_Chunk413.xml" /><stem n="skew" chunk="Search_Chunk413.xml" /><stem n="warp" chunk="Search_Chunk414.xml" /><stem n="gridwarp" chunk="Search_Chunk415.xml" /><stem n="splinewarp" chunk="Search_Chunk415.xml" /><stem n="morph" chunk="Search_Chunk415.xml" /><stem n="tempor" chunk="Search_Chunk415.xml" /><stem n="time-bas" chunk="Search_Chunk415.xml" /><stem n="editori" chunk="Search_Chunk415.xml" /><stem n="star" chunk="Search_Chunk415.xml" /><stem n="curvetool" chunk="Search_Chunk415.xml" /><stem n="embed" chunk="Search_Chunk416.xml" /><stem n="meaning" chunk="Search_Chunk416.xml" /><stem n="involv" chunk="Search_Chunk416.xml" /><stem n="firstcomp" chunk="Search_Chunk416.xml" /><stem n="length" chunk="Search_Chunk416.xml" /><stem n="film-bas" chunk="Search_Chunk416.xml" /><stem n="jpg" chunk="Search_Chunk416.xml" /><stem n="script-gener" chunk="Search_Chunk416.xml" /><stem n="pad" chunk="Search_Chunk416.xml" /><stem n="height" chunk="Search_Chunk416.xml" /><stem n="fraction" chunk="Search_Chunk417.xml" /><stem n="discuss" chunk="Search_Chunk417.xml" /><stem n="proportion" chunk="Search_Chunk417.xml" /><stem n="relationship" chunk="Search_Chunk417.xml" /><stem n="4096" chunk="Search_Chunk417.xml" /><stem n="fly" chunk="Search_Chunk417.xml" /><stem n="otherwis" chunk="Search_Chunk417.xml" /><stem n="closest" chunk="Search_Chunk417.xml" /><stem n="worth" chunk="Search_Chunk417.xml" /><stem n="mention" chunk="Search_Chunk417.xml" /><stem n="enlarg" chunk="Search_Chunk417.xml" /><stem n="probabl" chunk="Search_Chunk417.xml" /><stem n="did" chunk="Search_Chunk417.xml" /><stem n="re-run" chunk="Search_Chunk417.xml" /><stem n="re-rend" chunk="Search_Chunk417.xml" /><stem n="everyth" chunk="Search_Chunk417.xml" /><stem n="scaled-up" chunk="Search_Chunk418.xml" /><stem n="written" chunk="Search_Chunk418.xml" /><stem n="smart" chunk="Search_Chunk418.xml" /><stem n="effici" chunk="Search_Chunk418.xml" /><stem n="low-" chunk="Search_Chunk418.xml" /><stem n="high-resolut" chunk="Search_Chunk418.xml" /><stem n="pull" chunk="Search_Chunk418.xml" /><stem n="b-spline" chunk="Search_Chunk418.xml" /><stem n="spline" chunk="Search_Chunk418.xml" /><stem n="garbag" chunk="Search_Chunk419.xml" /><stem n="placement" chunk="Search_Chunk419.xml" /><stem n="full-" chunk="Search_Chunk419.xml" /><stem n="proxy-resolut" chunk="Search_Chunk419.xml" /><stem n="ahead" chunk="Search_Chunk419.xml" /><stem n="highest" chunk="Search_Chunk419.xml" /><stem n="myfil" chunk="Search_Chunk419.xml" /><stem n="a003_c007_071105_" chunk="Search_Chunk419.xml" /><stem n="v01" chunk="Search_Chunk419.xml" /><stem n="_001" chunk="Search_Chunk419.xml" /><stem n="v02" chunk="Search_Chunk419.xml" /><stem n="v03" chunk="Search_Chunk419.xml" /><stem n="tri" chunk="Search_Chunk419.xml" /><stem n="scheme" chunk="Search_Chunk419.xml" /><stem n="2^28" chunk="Search_Chunk419.xml" /><stem n="268" chunk="Search_Chunk419.xml" /><stem n="435" chunk="Search_Chunk419.xml" /><stem n="456" chunk="Search_Chunk419.xml" /><stem n="16k" chunk="Search_Chunk419.xml" /><stem n="32k" chunk="Search_Chunk419.xml" /><stem n="8k" chunk="Search_Chunk419.xml" /><stem n="128k" chunk="Search_Chunk419.xml" /><stem n="&lt;size&gt;" chunk="Search_Chunk419.xml" /><stem n="60" chunk="Search_Chunk419.xml" /><stem n="000" chunk="Search_Chunk419.xml" /><stem n="4473" chunk="Search_Chunk419.xml" /><stem n="4474" chunk="Search_Chunk419.xml" /><stem n="59998" chunk="Search_Chunk419.xml" /><stem n="wherea" chunk="Search_Chunk419.xml" /><stem n="mov32" chunk="Search_Chunk419.xml" /><stem n="mov64" chunk="Search_Chunk419.xml" /><stem n="sub-set" chunk="Search_Chunk419.xml" /><stem n="fastest" chunk="Search_Chunk419.xml" /><stem n="fallback" chunk="Search_Chunk419.xml" /><stem n="cbcr-base" chunk="Search_Chunk419.xml" /><stem n="bc" chunk="Search_Chunk419.xml" /><stem n="whilst" chunk="Search_Chunk419.xml" /><stem n="mpeg" chunk="Search_Chunk419.xml" /><stem n="yuv" chunk="Search_Chunk420.xml" /><stem n="format-bas" chunk="Search_Chunk420.xml" /><stem n="avid" chunk="Search_Chunk420.xml" /><stem n="dnxhd" chunk="Search_Chunk420.xml" /><stem n="avdn" chunk="Search_Chunk420.xml" /><stem n="r408" chunk="Search_Chunk420.xml" /><stem n="darken" chunk="Search_Chunk420.xml" /><stem n="govern" chunk="Search_Chunk420.xml" /><stem n="compens" chunk="Search_Chunk420.xml" /><stem n="assumpt" chunk="Search_Chunk420.xml" /><stem n="prefix" chunk="Search_Chunk420.xml" /><stem n="john" chunk="Search_Chunk420.xml" /><stem n="job" chunk="Search_Chunk420.xml" /><stem n="mg" chunk="Search_Chunk420.xml" /><stem n="final_comp_v01" chunk="Search_Chunk420.xml" /><stem n="ffmpeg" chunk="Search_Chunk420.xml" /><stem n="emploi" chunk="Search_Chunk420.xml" /><stem n="avi" chunk="Search_Chunk420.xml" /><stem n="img" chunk="Search_Chunk420.xml" /><stem n="multi-part" chunk="Search_Chunk420.xml" /><stem n="single-part" chunk="Search_Chunk420.xml" /><stem n="unfortun" chunk="Search_Chunk420.xml" /><stem n="coordin" chunk="Search_Chunk420.xml" /><stem n="exropt" chunk="Search_Chunk421.xml" /><stem n="tell" chunk="Search_Chunk421.xml" /><stem n="shrink" chunk="Search_Chunk421.xml" /><stem n="word" chunk="Search_Chunk421.xml" /><stem n="mismatch" chunk="Search_Chunk421.xml" /><stem n="memory-map" chunk="Search_Chunk421.xml" /><stem n="improv" chunk="Search_Chunk421.xml" /><stem n="piz-compress" chunk="Search_Chunk421.xml" /><stem n="piz" chunk="Search_Chunk421.xml" /><stem n="experienc" chunk="Search_Chunk421.xml" /><stem n="hang" chunk="Search_Chunk421.xml" /><stem n="nf" chunk="Search_Chunk421.xml" /><stem n="experi" chunk="Search_Chunk421.xml" /><stem n="mmap" chunk="Search_Chunk421.xml" /><stem n="case-by-cas" chunk="Search_Chunk421.xml" /><stem n="case-bi" chunk="Search_Chunk421.xml" /><stem n="by-cas" chunk="Search_Chunk421.xml" /><stem n="knobdefault" chunk="Search_Chunk421.xml" /><stem n="psd" chunk="Search_Chunk421.xml" /><stem n="breakout" chunk="Search_Chunk421.xml" /><stem n="recombin" chunk="Search_Chunk421.xml" /><stem n="psdmerg" chunk="Search_Chunk421.xml" /><stem n="photoshop®" chunk="Search_Chunk421.xml" /><stem n="approxim" chunk="Search_Chunk421.xml" /><stem n="image0001" chunk="Search_Chunk422.xml" /><stem n="image0002" chunk="Search_Chunk422.xml" /><stem n="image0003" chunk="Search_Chunk422.xml" /><stem n="4-digit" chunk="Search_Chunk422.xml" /><stem n="3-digit" chunk="Search_Chunk422.xml" /><stem n="image001" chunk="Search_Chunk422.xml" /><stem n="unpad" chunk="Search_Chunk422.xml" /><stem n="image1" chunk="Search_Chunk422.xml" /><stem n="image2" chunk="Search_Chunk422.xml" /><stem n="image3" chunk="Search_Chunk422.xml" /><stem n="exact" chunk="Search_Chunk422.xml" /><stem n="0015" chunk="Search_Chunk422.xml" /><stem n="0500" chunk="Search_Chunk422.xml" /><stem n="1000" chunk="Search_Chunk422.xml" /><stem n="500" chunk="Search_Chunk422.xml" /><stem n="frame+499" chunk="Search_Chunk422.xml" /><stem n="499" chunk="Search_Chunk422.xml" /><stem n="0501" chunk="Search_Chunk422.xml" /><stem n="0004" chunk="Search_Chunk422.xml" /><stem n="0006" chunk="Search_Chunk422.xml" /><stem n="image0500" chunk="Search_Chunk422.xml" /><stem n="similarli" chunk="Search_Chunk422.xml" /><stem n="-10," chunk="Search_Chunk422.xml" /><stem n="0010" chunk="Search_Chunk422.xml" /><stem n="21" chunk="Search_Chunk422.xml" /><stem n="0011" chunk="Search_Chunk422.xml" /><stem n="scratch" chunk="Search_Chunk422.xml" /><stem n="diskcach" chunk="Search_Chunk422.xml" /><stem n="pre-rend" chunk="Search_Chunk422.xml" /><stem n="dispos" chunk="Search_Chunk422.xml" /><stem n="intermedi" chunk="Search_Chunk422.xml" /><stem n="stage" chunk="Search_Chunk422.xml" /><stem n="f12" chunk="Search_Chunk422.xml" /><stem n="smoothli" chunk="Search_Chunk422.xml" /><stem n="speedier" chunk="Search_Chunk422.xml" /><stem n="consum" chunk="Search_Chunk422.xml" /><stem n="nuke_disk_cach" chunk="Search_Chunk422.xml" /><stem n="nuke_disk_cache_gb" chunk="Search_Chunk422.xml" /><stem n="old" chunk="Search_Chunk422.xml" /><stem n="wrong" chunk="Search_Chunk422.xml" /><stem n="necessarili" chunk="Search_Chunk422.xml" /><stem n="strateg" chunk="Search_Chunk422.xml" /><stem n="expens" chunk="Search_Chunk422.xml" /><stem n="recalcul" chunk="Search_Chunk422.xml" /><stem n="precach" chunk="Search_Chunk423.xml" /><stem n="partli" chunk="Search_Chunk423.xml" /><stem n="commonli" chunk="Search_Chunk423.xml" /><stem n="construct" chunk="Search_Chunk423.xml" /><stem n="underscor" chunk="Search_Chunk423.xml" /><stem n="windowspath" chunk="Search_Chunk423.xml" /><stem n="my" chunk="Search_Chunk423.xml" /><stem n="dpx" chunk="Search_Chunk424.xml" /><stem n="__windowspath" chunk="Search_Chunk424.xml" /><stem n="signifi" chunk="Search_Chunk424.xml" /><stem n="colon" chunk="Search_Chunk424.xml" /><stem n="t_" chunk="Search_Chunk424.xml" /><stem n="readgeo" chunk="Search_Chunk424.xml" /><stem n="rule" chunk="Search_Chunk424.xml" /><stem n="back-up" chunk="Search_Chunk424.xml" /><stem n="mantra" chunk="Search_Chunk424.xml" /><stem n="backup" chunk="Search_Chunk424.xml" /><stem n="feel" chunk="Search_Chunk424.xml" /><stem n="brave" chunk="Search_Chunk424.xml" /><stem n="upgrad" chunk="Search_Chunk424.xml" /><stem n="firstscript_v01" chunk="Search_Chunk424.xml" /><stem n="_v01" chunk="Search_Chunk424.xml" /><stem n="_v02" chunk="Search_Chunk424.xml" /><stem n="_v03" chunk="Search_Chunk424.xml" /><stem n="autosav" chunk="Search_Chunk424.xml" /><stem n="idl" chunk="Search_Chunk424.xml" /><stem n="wait" chunk="Search_Chunk424.xml" /><stem n="filenam" chunk="Search_Chunk424.xml" /><stem n="hate" chunk="Search_Chunk424.xml" /><stem n="failur" chunk="Search_Chunk424.xml" /><stem n="relaunch" chunk="Search_Chunk424.xml" /><stem n="situat" chunk="Search_Chunk424.xml" /><stem n="commit" chunk="Search_Chunk424.xml" /><stem n="exit" chunk="Search_Chunk424.xml" /><stem n="likelihood" chunk="Search_Chunk425.xml" /><stem n="breakpad" chunk="Search_Chunk425.xml" /><stem n="crash" chunk="Search_Chunk425.xml" /><stem n="submit" chunk="Search_Chunk425.xml" /><stem n="dump" chunk="Search_Chunk425.xml" /><stem n="gui" chunk="Search_Chunk425.xml" /><stem n="crashhandl" chunk="Search_Chunk425.xml" /><stem n="--crashhandl" chunk="Search_Chunk425.xml" /><stem n="nuke_crash_handl" chunk="Search_Chunk425.xml" /><stem n="nocrashprompt" chunk="Search_Chunk425.xml" /><stem n="--nocrashprompt" chunk="Search_Chunk425.xml" /><stem n="no_crash_prompt" chunk="Search_Chunk425.xml" /><stem n="unsav" chunk="Search_Chunk425.xml" /><stem n="ran" chunk="Search_Chunk425.xml" /><stem n="splash" chunk="Search_Chunk425.xml" /><stem n="reread" chunk="Search_Chunk425.xml" /><stem n="firstscript" chunk="Search_Chunk425.xml" /><stem n="likewis" chunk="Search_Chunk425.xml" /><stem n="dash" chunk="Search_Chunk425.xml" /><stem n="-3" chunk="Search_Chunk425.xml" /><stem n="1-10" chunk="Search_Chunk425.xml" /><stem n="3-4" chunk="Search_Chunk425.xml" /><stem n="-3-4" chunk="Search_Chunk425.xml" /><stem n="-3," chunk="Search_Chunk425.xml" /><stem n="-2," chunk="Search_Chunk425.xml" /><stem n="-1," chunk="Search_Chunk425.xml" /><stem n="8--5" chunk="Search_Chunk425.xml" /><stem n="-8--5" chunk="Search_Chunk425.xml" /><stem n="-8," chunk="Search_Chunk425.xml" /><stem n="-7," chunk="Search_Chunk425.xml" /><stem n="-6," chunk="Search_Chunk425.xml" /><stem n="-5" chunk="Search_Chunk425.xml" /><stem n="1-10×2" chunk="Search_Chunk425.xml" /><stem n="10×2" chunk="Search_Chunk425.xml" /><stem n="1-10×3" chunk="Search_Chunk425.xml" /><stem n="10×3" chunk="Search_Chunk425.xml" /><stem n="1-4×1" chunk="Search_Chunk425.xml" /><stem n="4×1" chunk="Search_Chunk425.xml" /><stem n="8-10×1" chunk="Search_Chunk425.xml" /><stem n="10×1" chunk="Search_Chunk425.xml" /><stem n="12-14×1" chunk="Search_Chunk425.xml" /><stem n="14×1" chunk="Search_Chunk425.xml" /><stem n="everywher" chunk="Search_Chunk425.xml" /><stem n="-f" chunk="Search_Chunk425.xml" /><stem n="statement" chunk="Search_Chunk425.xml" /><stem n="minim" chunk="Search_Chunk425.xml" /><stem n="regard" chunk="Search_Chunk425.xml" /><stem n="storyboard" chunk="Search_Chunk425.xml" /><stem n="overal" chunk="Search_Chunk425.xml" /><stem n="boundari" chunk="Search_Chunk425.xml" /><stem n="destin" chunk="Search_Chunk426.xml" /><stem n="non-squar" chunk="Search_Chunk426.xml" /><stem n="addformat" chunk="Search_Chunk426.xml" /><stem n="720" chunk="Search_Chunk426.xml" /><stem n="486" chunk="Search_Chunk426.xml" /><stem n="ntsc_video" chunk="Search_Chunk426.xml" /><stem n="smallest" chunk="Search_Chunk426.xml" /><stem n="longest" chunk="Search_Chunk426.xml" /><stem n="shorter" chunk="Search_Chunk426.xml" /><stem n="distort" chunk="Search_Chunk426.xml" /><stem n="algorithm" chunk="Search_Chunk427.xml" /><stem n="simon" chunk="Search_Chunk427.xml" /><stem n="rifmen" chunk="Search_Chunk427.xml" /><stem n="halo" chunk="Search_Chunk427.xml" /><stem n="vignett" chunk="Search_Chunk427.xml" /><stem n="occasion" chunk="Search_Chunk427.xml" /><stem n="adjbbox" chunk="Search_Chunk427.xml" /><stem n="copybbox" chunk="Search_Chunk427.xml" /><stem n="blackoutsid" chunk="Search_Chunk427.xml" /><stem n="wast" chunk="Search_Chunk427.xml" /><stem n="adjustbbox" chunk="Search_Chunk427.xml" /><stem n="replic" chunk="Search_Chunk427.xml" /><stem n="expans" chunk="Search_Chunk427.xml" /><stem n="onto" chunk="Search_Chunk427.xml" /><stem n="introduct" chunk="Search_Chunk428.xml" /><stem n="z-depth" chunk="Search_Chunk428.xml" /><stem n="referenc" chunk="Search_Chunk428.xml" /><stem n="overview" chunk="Search_Chunk428.xml" /><stem n="swap" chunk="Search_Chunk428.xml" /><stem n="think" chunk="Search_Chunk428.xml" /><stem n="els" chunk="Search_Chunk428.xml" /><stem n="belong" chunk="Search_Chunk428.xml" /><stem n="layer_nam" chunk="Search_Chunk428.xml" /><stem n="channel_nam" chunk="Search_Chunk428.xml" /><stem n="four-channel" chunk="Search_Chunk428.xml" /><stem n="unchang" chunk="Search_Chunk428.xml" /><stem n="mechan" chunk="Search_Chunk429.xml" /><stem n="almost" chunk="Search_Chunk429.xml" /><stem n="clarifi" chunk="Search_Chunk429.xml" /><stem n="six-channel" chunk="Search_Chunk429.xml" /><stem n="hard" chunk="Search_Chunk429.xml" /><stem n="suppos" chunk="Search_Chunk429.xml" /><stem n="huecorrect" chunk="Search_Chunk429.xml" /><stem n="thereaft" chunk="Search_Chunk429.xml" /><stem n="non-black" chunk="Search_Chunk429.xml" /><stem n="triangl" chunk="Search_Chunk429.xml" /><stem n="inject" chunk="Search_Chunk429.xml" /><stem n="harsh" chunk="Search_Chunk430.xml" /><stem n="sinc" chunk="Search_Chunk430.xml" /><stem n="nor" chunk="Search_Chunk430.xml" /><stem n="convei" chunk="Search_Chunk430.xml" /><stem n="treatment" chunk="Search_Chunk430.xml" /><stem n="cours" chunk="Search_Chunk430.xml" /><stem n="sake" chunk="Search_Chunk430.xml" /><stem n="perman" chunk="Search_Chunk430.xml" /><stem n="eight" chunk="Search_Chunk430.xml" /><stem n="outgo" chunk="Search_Chunk430.xml" /><stem n="protect" chunk="Search_Chunk430.xml" /><stem n="unintent" chunk="Search_Chunk430.xml" /><stem n="twice" chunk="Search_Chunk430.xml" /><stem n="contactsheet" chunk="Search_Chunk430.xml" /><stem n="copyrectangl" chunk="Search_Chunk430.xml" /><stem n="unpremultipli" chunk="Search_Chunk430.xml" /><stem n="got" chunk="Search_Chunk430.xml" /><stem n="a2" chunk="Search_Chunk430.xml" /><stem n="a1" chunk="Search_Chunk430.xml" /><stem n="fring" chunk="Search_Chunk430.xml" /><stem n="erron" chunk="Search_Chunk431.xml" /><stem n="bbox" chunk="Search_Chunk431.xml" /><stem n="union" chunk="Search_Chunk431.xml" /><stem n="intersect" chunk="Search_Chunk431.xml" /><stem n="afterward" chunk="Search_Chunk431.xml" /><stem n="math" chunk="Search_Chunk431.xml" /><stem n="non-linear" chunk="Search_Chunk431.xml" /><stem n="adobe®" chunk="Search_Chunk431.xml" /><stem n="svg" chunk="Search_Chunk431.xml" /><stem n="hard-light" chunk="Search_Chunk431.xml" /><stem n="a+b" chunk="Search_Chunk431.xml" /><stem n="ab" chunk="Search_Chunk431.xml" /><stem n="hous" chunk="Search_Chunk431.xml" /><stem n="difficult" chunk="Search_Chunk431.xml" /><stem n="luckili" chunk="Search_Chunk431.xml" /><stem n="soft-light" chunk="Search_Chunk431.xml" /><stem n="illustr" chunk="Search_Chunk431.xml" /><stem n="fire" chunk="Search_Chunk431.xml" /><stem n="spend" chunk="Search_Chunk431.xml" /><stem n="atop" chunk="Search_Chunk431.xml" /><stem n="ab+b" chunk="Search_Chunk431.xml" /><stem n="1-a" chunk="Search_Chunk431.xml" /><stem n="darker" chunk="Search_Chunk431.xml" /><stem n="color-burn" chunk="Search_Chunk431.xml" /><stem n="burn" chunk="Search_Chunk431.xml" /><stem n="color-dodg" chunk="Search_Chunk432.xml" /><stem n="dodg" chunk="Search_Chunk432.xml" /><stem n="brighten" chunk="Search_Chunk432.xml" /><stem n="conjoint-ov" chunk="Search_Chunk432.xml" /><stem n="conjoint" chunk="Search_Chunk432.xml" /><stem n="a&gt;b" chunk="Search_Chunk432.xml" /><stem n="partial" chunk="Search_Chunk432.xml" /><stem n="seam" chunk="Search_Chunk432.xml" /><stem n="a-b" chunk="Search_Chunk432.xml" /><stem n="absminu" chunk="Search_Chunk432.xml" /><stem n="disjoint-ov" chunk="Search_Chunk432.xml" /><stem n="disjoint" chunk="Search_Chunk432.xml" /><stem n="a+b&lt;1" chunk="Search_Chunk432.xml" /><stem n="held" chunk="Search_Chunk432.xml" /><stem n="cloth" chunk="Search_Chunk432.xml" /><stem n="hold-out" chunk="Search_Chunk432.xml" /><stem n="a&lt;0" chunk="Search_Chunk432.xml" /><stem n="b&lt;0" chunk="Search_Chunk432.xml" /><stem n="photograph" chunk="Search_Chunk432.xml" /><stem n="a+b-2ab" chunk="Search_Chunk432.xml" /><stem n="2ab" chunk="Search_Chunk432.xml" /><stem n="b-a" chunk="Search_Chunk432.xml" /><stem n="geometr" chunk="Search_Chunk432.xml" /><stem n="a&gt;0" chunk="Search_Chunk432.xml" /><stem n="lit" chunk="Search_Chunk432.xml" /><stem n="hypot" chunk="Search_Chunk432.xml" /><stem n="sqrt" chunk="Search_Chunk432.xml" /><stem n="resembl" chunk="Search_Chunk432.xml" /><stem n="ba" chunk="Search_Chunk432.xml" /><stem n="aa+b" chunk="Search_Chunk432.xml" /><stem n="min" chunk="Search_Chunk432.xml" /><stem n="smoke" chunk="Search_Chunk432.xml" /><stem n="regrain" chunk="Search_Chunk432.xml" /><stem n="f_regrain" chunk="Search_Chunk433.xml" /><stem n="1-b" chunk="Search_Chunk433.xml" /><stem n="b&gt;0" chunk="Search_Chunk433.xml" /><stem n="sum" chunk="Search_Chunk433.xml" /><stem n="laser" chunk="Search_Chunk433.xml" /><stem n="beam" chunk="Search_Chunk433.xml" /><stem n="≤1" chunk="Search_Chunk433.xml" /><stem n="a+b-ab" chunk="Search_Chunk433.xml" /><stem n="2a+" chunk="Search_Chunk433.xml" /><stem n="1-ab" chunk="Search_Chunk433.xml" /><stem n="ab&lt;1" chunk="Search_Chunk433.xml" /><stem n="stencil" chunk="Search_Chunk433.xml" /><stem n="+b" chunk="Search_Chunk433.xml" /><stem n="xor" chunk="Search_Chunk433.xml" /><stem n="older" chunk="Search_Chunk433.xml" /><stem n="diagon" chunk="Search_Chunk433.xml" /><stem n="nl_over" chunk="Search_Chunk433.xml" /><stem n="nl_under" chunk="Search_Chunk433.xml" /><stem n="demonstr" chunk="Search_Chunk433.xml" /><stem n="column" chunk="Search_Chunk433.xml" /><stem n="gap" chunk="Search_Chunk433.xml" /><stem n="topbottom" chunk="Search_Chunk433.xml" /><stem n="leftright" chunk="Search_Chunk433.xml" /><stem n="rightleft" chunk="Search_Chunk433.xml" /><stem n="snake" chunk="Search_Chunk433.xml" /><stem n="bottomtop" chunk="Search_Chunk433.xml" /><stem n="seem" chunk="Search_Chunk433.xml" /><stem n="softer" chunk="Search_Chunk433.xml" /><stem n="analysi" chunk="Search_Chunk433.xml" /><stem n="suitabl" chunk="Search_Chunk434.xml" /><stem n="tune" chunk="Search_Chunk434.xml" /><stem n="frequenc" chunk="Search_Chunk434.xml" /><stem n="bit-wis" chunk="Search_Chunk434.xml" /><stem n="wise" chunk="Search_Chunk434.xml" /><stem n="--gpu" chunk="Search_Chunk434.xml" /><stem n="variat" chunk="Search_Chunk434.xml" /><stem n="modul" chunk="Search_Chunk434.xml" /><stem n="poor" chunk="Search_Chunk434.xml" /><stem n="80x80" chunk="Search_Chunk435.xml" /><stem n="reoccur" chunk="Search_Chunk435.xml" /><stem n="reanalyz" chunk="Search_Chunk435.xml" /><stem n="realli" chunk="Search_Chunk435.xml" /><stem n="txt" chunk="Search_Chunk435.xml" /><stem n="roll" chunk="Search_Chunk435.xml" /><stem n="threshold" chunk="Search_Chunk435.xml" /><stem n="tweak" chunk="Search_Chunk435.xml" /><stem n="estim" chunk="Search_Chunk436.xml" /><stem n="midton" chunk="Search_Chunk436.xml" /><stem n="lighter" chunk="Search_Chunk436.xml" /><stem n="medium" chunk="Search_Chunk436.xml" /><stem n="altogeth" chunk="Search_Chunk436.xml" /><stem n="chromin" chunk="Search_Chunk436.xml" /><stem n="rare" chunk="Search_Chunk436.xml" /><stem n="auto-comput" chunk="Search_Chunk436.xml" /><stem n="cleanup" chunk="Search_Chunk436.xml" /><stem n="phase" chunk="Search_Chunk436.xml" /><stem n="bg" chunk="Search_Chunk436.xml" /><stem n="bluescreen" chunk="Search_Chunk437.xml" /><stem n="fg" chunk="Search_Chunk437.xml" /><stem n="explan" chunk="Search_Chunk437.xml" /><stem n="sens" chunk="Search_Chunk437.xml" /><stem n="rid" chunk="Search_Chunk437.xml" /><stem n="somewher" chunk="Search_Chunk437.xml" /><stem n="ideal" chunk="Search_Chunk437.xml" /><stem n="shoot" chunk="Search_Chunk437.xml" /><stem n="condit" chunk="Search_Chunk437.xml" /><stem n="90-95" chunk="Search_Chunk437.xml" /><stem n="95" chunk="Search_Chunk437.xml" /><stem n="unevenli" chunk="Search_Chunk437.xml" /><stem n="multi-pixel" chunk="Search_Chunk437.xml" /><stem n="difficulti" chunk="Search_Chunk437.xml" /><stem n="snail" chunk="Search_Chunk437.xml" /><stem n="trail" chunk="Search_Chunk437.xml" /><stem n="ctrl+shift+" chunk="Search_Chunk437.xml" /><stem n="pen" chunk="Search_Chunk437.xml" /><stem n="invis" chunk="Search_Chunk438.xml" /><stem n="consequ" chunk="Search_Chunk438.xml" /><stem n="meticul" chunk="Search_Chunk438.xml" /><stem n="loos" chunk="Search_Chunk438.xml" /><stem n="transit" chunk="Search_Chunk438.xml" /><stem n="care" chunk="Search_Chunk438.xml" /><stem n="littl" chunk="Search_Chunk438.xml" /><stem n="techniqu" chunk="Search_Chunk438.xml" /><stem n="sacrif" chunk="Search_Chunk438.xml" /><stem n="tackl" chunk="Search_Chunk438.xml" /><stem n="hybrid" chunk="Search_Chunk438.xml" /><stem n="gone" chunk="Search_Chunk438.xml" /><stem n="tint" chunk="Search_Chunk438.xml" /><stem n="cheek" chunk="Search_Chunk438.xml" /><stem n="arm" chunk="Search_Chunk438.xml" /><stem n="chest" chunk="Search_Chunk438.xml" /><stem n="quickest" chunk="Search_Chunk438.xml" /><stem n="spong" chunk="Search_Chunk438.xml" /><stem n="awai" chunk="Search_Chunk438.xml" /><stem n="bluish" chunk="Search_Chunk439.xml" /><stem n="complement" chunk="Search_Chunk439.xml" /><stem n="brought" chunk="Search_Chunk439.xml" /><stem n="defocus" chunk="Search_Chunk439.xml" /><stem n="flesh" chunk="Search_Chunk439.xml" /><stem n="blond" chunk="Search_Chunk439.xml" /><stem n="blous" chunk="Search_Chunk439.xml" /><stem n="artifact" chunk="Search_Chunk439.xml" /><stem n="fals" chunk="Search_Chunk439.xml" /><stem n="subtl" chunk="Search_Chunk439.xml" /><stem n="sophist" chunk="Search_Chunk439.xml" /><stem n="g&gt;" chunk="Search_Chunk439.xml" /><stem n="r+b" chunk="Search_Chunk439.xml" /><stem n="despil" chunk="Search_Chunk439.xml" /><stem n="r+g" chunk="Search_Chunk439.xml" /><stem n="l-poli" chunk="Search_Chunk439.xml" /><stem n="poli" chunk="Search_Chunk439.xml" /><stem n="major" chunk="Search_Chunk439.xml" /><stem n="s-poli" chunk="Search_Chunk439.xml" /><stem n="m-poli" chunk="Search_Chunk439.xml" /><stem n="tran" chunk="Search_Chunk439.xml" /><stem n="thick" chunk="Search_Chunk439.xml" /><stem n="opaqu" chunk="Search_Chunk439.xml" /><stem n="dramat" chunk="Search_Chunk439.xml" /><stem n="off-color" chunk="Search_Chunk439.xml" /><stem n="idea" chunk="Search_Chunk439.xml" /><stem n="spill-suppress" chunk="Search_Chunk439.xml" /><stem n="intact" chunk="Search_Chunk439.xml" /><stem n="solv" chunk="Search_Chunk439.xml" /><stem n="balanc" chunk="Search_Chunk440.xml" /><stem n="gradual" chunk="Search_Chunk440.xml" /><stem n="finer" chunk="Search_Chunk440.xml" /><stem n="thicken" chunk="Search_Chunk440.xml" /><stem n="attenu" chunk="Search_Chunk440.xml" /><stem n="thinner" chunk="Search_Chunk440.xml" /><stem n="thicker" chunk="Search_Chunk440.xml" /><stem n="refin" chunk="Search_Chunk440.xml" /><stem n="dilut" chunk="Search_Chunk440.xml" /><stem n="proper" chunk="Search_Chunk440.xml" /><stem n="seriou" chunk="Search_Chunk440.xml" /><stem n="assuag" chunk="Search_Chunk440.xml" /><stem n="user-defin" chunk="Search_Chunk440.xml" /><stem n="strength" chunk="Search_Chunk440.xml" /><stem n="tend" chunk="Search_Chunk440.xml" /><stem n="frost" chunk="Search_Chunk440.xml" /><stem n="glass" chunk="Search_Chunk440.xml" /><stem n="transluc" chunk="Search_Chunk440.xml" /><stem n="align" chunk="Search_Chunk440.xml" /><stem n="multi-facet" chunk="Search_Chunk441.xml" /><stem n="facet" chunk="Search_Chunk441.xml" /><stem n="polyhedron" chunk="Search_Chunk441.xml" /><stem n="computation" chunk="Search_Chunk441.xml" /><stem n="planar" chunk="Search_Chunk441.xml" /><stem n="carefulli" chunk="Search_Chunk441.xml" /><stem n="disadvantag" chunk="Search_Chunk441.xml" /><stem n="rt+" chunk="Search_Chunk441.xml" /><stem n="clean-up" chunk="Search_Chunk441.xml" /><stem n="evenli" chunk="Search_Chunk441.xml" /><stem n="well-satur" chunk="Search_Chunk441.xml" /><stem n="represent" chunk="Search_Chunk441.xml" /><stem n="passiv" chunk="Search_Chunk441.xml" /><stem n="prove" chunk="Search_Chunk441.xml" /><stem n="triangular" chunk="Search_Chunk441.xml" /><stem n="unselect" chunk="Search_Chunk441.xml" /><stem n="hollow" chunk="Search_Chunk441.xml" /><stem n="de-select" chunk="Search_Chunk441.xml" /><stem n="de" chunk="Search_Chunk441.xml" /><stem n="sprai" chunk="Search_Chunk441.xml" /><stem n="slice" chunk="Search_Chunk441.xml" /><stem n="inner" chunk="Search_Chunk441.xml" /><stem n="largest" chunk="Search_Chunk441.xml" /><stem n="shaded-surfac" chunk="Search_Chunk441.xml" /><stem n="quad" chunk="Search_Chunk441.xml" /><stem n="degrain" chunk="Search_Chunk442.xml" /><stem n="highli" chunk="Search_Chunk442.xml" /><stem n="compromis" chunk="Search_Chunk442.xml" /><stem n="jag" chunk="Search_Chunk442.xml" /><stem n="hopefulli" chunk="Search_Chunk442.xml" /><stem n="graini" chunk="Search_Chunk442.xml" /><stem n="induc" chunk="Search_Chunk442.xml" /><stem n="short" chunk="Search_Chunk442.xml" /><stem n="dens" chunk="Search_Chunk442.xml" /><stem n="medium-s" chunk="Search_Chunk442.xml" /><stem n="toler" chunk="Search_Chunk442.xml" /><stem n="noisi" chunk="Search_Chunk442.xml" /><stem n="over-adjust" chunk="Search_Chunk442.xml" /><stem n="defocu" chunk="Search_Chunk442.xml" /><stem n="sparingli" chunk="Search_Chunk442.xml" /><stem n="perfectli" chunk="Search_Chunk442.xml" /><stem n="routin" chunk="Search_Chunk442.xml" /><stem n="newli" chunk="Search_Chunk442.xml" /><stem n="outer" chunk="Search_Chunk442.xml" /><stem n="strai" chunk="Search_Chunk442.xml" /><stem n="chromakei" chunk="Search_Chunk442.xml" /><stem n="cloud" chunk="Search_Chunk442.xml" /><stem n="wisp" chunk="Search_Chunk443.xml" /><stem n="nullifi" chunk="Search_Chunk443.xml" /><stem n="dent" chunk="Search_Chunk443.xml" /><stem n="densiti" chunk="Search_Chunk443.xml" /><stem n="artifici" chunk="Search_Chunk443.xml" /><stem n="chip" chunk="Search_Chunk443.xml" /><stem n="uneven" chunk="Search_Chunk443.xml" /><stem n="chunki" chunk="Search_Chunk443.xml" /><stem n="grid" chunk="Search_Chunk443.xml" /><stem n="extrapol" chunk="Search_Chunk444.xml" /><stem n="light-adjust" chunk="Search_Chunk444.xml" /><stem n="pure" chunk="Search_Chunk444.xml" /><stem n="suffer" chunk="Search_Chunk444.xml" /><stem n="bad" chunk="Search_Chunk444.xml" /><stem n="eros" chunk="Search_Chunk444.xml" /><stem n="radiu" chunk="Search_Chunk444.xml" /><stem n="re-sampl" chunk="Search_Chunk444.xml" /><stem n="bulg" chunk="Search_Chunk444.xml" /><stem n="un-optim" chunk="Search_Chunk444.xml" /><stem n="segment" chunk="Search_Chunk444.xml" /><stem n="essenti" chunk="Search_Chunk444.xml" /><stem n="concentr" chunk="Search_Chunk444.xml" /><stem n="globe" chunk="Search_Chunk444.xml" /><stem n="water" chunk="Search_Chunk444.xml" /><stem n="pale" chunk="Search_Chunk444.xml" /><stem n="in-between" chunk="Search_Chunk444.xml" /><stem n="milki" chunk="Search_Chunk444.xml" /><stem n="right-hand" chunk="Search_Chunk444.xml" /><stem n="enclos" chunk="Search_Chunk444.xml" /><stem n="undisturb" chunk="Search_Chunk444.xml" /><stem n="grayish" chunk="Search_Chunk444.xml" /><stem n="pre-select" chunk="Search_Chunk444.xml" /><stem n="photographi" chunk="Search_Chunk444.xml" /><stem n="timesav" chunk="Search_Chunk444.xml" /><stem n="one-step" chunk="Search_Chunk444.xml" /><stem n="pre-calcul" chunk="Search_Chunk444.xml" /><stem n="128-facet" chunk="Search_Chunk444.xml" /><stem n="128" chunk="Search_Chunk444.xml" /><stem n="simpler" chunk="Search_Chunk444.xml" /><stem n="well-lit" chunk="Search_Chunk444.xml" /><stem n="photron" chunk="Search_Chunk444.xml" /><stem n="usa" chunk="Search_Chunk444.xml" /><stem n="inc" chunk="Search_Chunk444.xml" /><stem n="9520" chunk="Search_Chunk444.xml" /><stem n="padgett" chunk="Search_Chunk444.xml" /><stem n="street" chunk="Search_Chunk444.xml" /><stem n="san" chunk="Search_Chunk444.xml" /><stem n="diego" chunk="Search_Chunk444.xml" /><stem n="ca" chunk="Search_Chunk444.xml" /><stem n="92126" chunk="Search_Chunk444.xml" /><stem n="3113" chunk="Search_Chunk444.xml" /><stem n="woodleigh" chunk="Search_Chunk444.xml" /><stem n="lane" chunk="Search_Chunk444.xml" /><stem n="cameron" chunk="Search_Chunk444.xml" /><stem n="park" chunk="Search_Chunk444.xml" /><stem n="95682" chunk="Search_Chunk444.xml" /><stem n="phone" chunk="Search_Chunk444.xml" /><stem n="1-530" chunk="Search_Chunk444.xml" /><stem n="1-530-677" chunk="Search_Chunk444.xml" /><stem n="1-530-677-9980" chunk="Search_Chunk444.xml" /><stem n="530" chunk="Search_Chunk444.xml" /><stem n="530-677" chunk="Search_Chunk444.xml" /><stem n="530-677-9980" chunk="Search_Chunk444.xml" /><stem n="677" chunk="Search_Chunk444.xml" /><stem n="677-9980" chunk="Search_Chunk444.xml" /><stem n="9980" chunk="Search_Chunk444.xml" /><stem n="fax" chunk="Search_Chunk444.xml" /><stem n="1-530-677-9981" chunk="Search_Chunk444.xml" /><stem n="530-677-9981" chunk="Search_Chunk444.xml" /><stem n="677-9981" chunk="Search_Chunk444.xml" /><stem n="9981" chunk="Search_Chunk444.xml" /><stem n="cell" chunk="Search_Chunk444.xml" /><stem n="1-530-613" chunk="Search_Chunk444.xml" /><stem n="1-530-613-3212" chunk="Search_Chunk444.xml" /><stem n="530-613" chunk="Search_Chunk444.xml" /><stem n="530-613-3212" chunk="Search_Chunk444.xml" /><stem n="613" chunk="Search_Chunk444.xml" /><stem n="613-3212" chunk="Search_Chunk444.xml" /><stem n="3212" chunk="Search_Chunk444.xml" /><stem n="sgross" chunk="Search_Chunk444.xml" /><stem n="imagica" chunk="Search_Chunk444.xml" /><stem n="corp" chunk="Search_Chunk445.xml" /><stem n="tokyo" chunk="Search_Chunk445.xml" /><stem n="japan" chunk="Search_Chunk445.xml" /><stem n="trademark" chunk="Search_Chunk445.xml" /><stem n="digix" chunk="Search_Chunk445.xml" /><stem n="saint" chunk="Search_Chunk445.xml" /><stem n="courtesi" chunk="Search_Chunk445.xml" /><stem n="cfc" chunk="Search_Chunk445.xml" /><stem n="british" chunk="Search_Chunk445.xml" /><stem n="ltd" chunk="Search_Chunk445.xml" /><stem n="figur" chunk="Search_Chunk445.xml" /><stem n="cmd+shift+alt" chunk="Search_Chunk445.xml" /><stem n="complic" chunk="Search_Chunk445.xml" /><stem n="curtain" chunk="Search_Chunk445.xml" /><stem n="behind" chunk="Search_Chunk445.xml" /><stem n="bia" chunk="Search_Chunk445.xml" /><stem n="decent" chunk="Search_Chunk445.xml" /><stem n="actor" chunk="Search_Chunk445.xml" /><stem n="fine-tun" chunk="Search_Chunk445.xml" /><stem n="exagger" chunk="Search_Chunk445.xml" /><stem n="decis" chunk="Search_Chunk445.xml" /><stem n="99" chunk="Search_Chunk445.xml" /><stem n="firm" chunk="Search_Chunk445.xml" /><stem n="clearer" chunk="Search_Chunk446.xml" /><stem n="overdo" chunk="Search_Chunk446.xml" /><stem n="hood" chunk="Search_Chunk446.xml" /><stem n="minor" chunk="Search_Chunk446.xml" /><stem n="clearli" chunk="Search_Chunk446.xml" /><stem n="multi-pass" chunk="Search_Chunk446.xml" /><stem n="soften" chunk="Search_Chunk446.xml" /><stem n="ed" chunk="Search_Chunk446.xml" /><stem n="strong" chunk="Search_Chunk446.xml" /><stem n="semi-opaqu" chunk="Search_Chunk446.xml" /><stem n="bias" chunk="Search_Chunk446.xml" /><stem n="reddish" chunk="Search_Chunk446.xml" /><stem n="brown" chunk="Search_Chunk446.xml" /><stem n="led" chunk="Search_Chunk446.xml" /><stem n="pilot" chunk="Search_Chunk446.xml" /><stem n="pressur" chunk="Search_Chunk446.xml" /><stem n="lowli" chunk="Search_Chunk446.xml" /><stem n="programm" chunk="Search_Chunk446.xml" /><stem n="un-correct" chunk="Search_Chunk446.xml" /><stem n="strongli" chunk="Search_Chunk446.xml" /><stem n="cast" chunk="Search_Chunk446.xml" /><stem n="neutral" chunk="Search_Chunk446.xml" /><stem n="essenc" chunk="Search_Chunk446.xml" /><stem n="autom" chunk="Search_Chunk446.xml" /><stem n="far" chunk="Search_Chunk446.xml" /><stem n="everydai" chunk="Search_Chunk446.xml" /><stem n="discrimin" chunk="Search_Chunk446.xml" /><stem n="why" chunk="Search_Chunk446.xml" /><stem n="tv" chunk="Search_Chunk447.xml" /><stem n="merlin" chunk="Search_Chunk447.xml" /><stem n="framestor" chunk="Search_Chunk447.xml" /><stem n="love" chunk="Search_Chunk447.xml" /><stem n="nice" chunk="Search_Chunk447.xml" /><stem n="destroi" chunk="Search_Chunk447.xml" /><stem n="sole" chunk="Search_Chunk447.xml" /><stem n="miranda" chunk="Search_Chunk447.xml" /><stem n="richardson" chunk="Search_Chunk447.xml" /><stem n="harden" chunk="Search_Chunk447.xml" /><stem n="rollback" chunk="Search_Chunk447.xml" /><stem n="faint" chunk="Search_Chunk447.xml" /><stem n="05" chunk="Search_Chunk447.xml" /><stem n="show-through" chunk="Search_Chunk447.xml" /><stem n="steer" chunk="Search_Chunk447.xml" /><stem n="weight" chunk="Search_Chunk447.xml" /><stem n="speak" chunk="Search_Chunk447.xml" /><stem n="preblur" chunk="Search_Chunk447.xml" /><stem n="dv" chunk="Search_Chunk447.xml" /><stem n="differenti" chunk="Search_Chunk447.xml" /><stem n="grown" chunk="Search_Chunk447.xml" /><stem n="despot" chunk="Search_Chunk447.xml" /><stem n="two-stag" chunk="Search_Chunk447.xml" /><stem n="ruin" chunk="Search_Chunk447.xml" /><stem n="see-through" chunk="Search_Chunk447.xml" /><stem n="inm" chunk="Search_Chunk447.xml" /><stem n="dilat" chunk="Search_Chunk447.xml" /><stem n="sub-pixel" chunk="Search_Chunk447.xml" /><stem n="simplifi" chunk="Search_Chunk447.xml" /><stem n="coagul" chunk="Search_Chunk447.xml" /><stem n="speck" chunk="Search_Chunk447.xml" /><stem n="absorb" chunk="Search_Chunk447.xml" /><stem n="surround" chunk="Search_Chunk447.xml" /><stem n="isol" chunk="Search_Chunk448.xml" /><stem n="definit" chunk="Search_Chunk448.xml" /><stem n="rig" chunk="Search_Chunk448.xml" /><stem n="outm" chunk="Search_Chunk448.xml" /><stem n="adequ" chunk="Search_Chunk448.xml" /><stem n="multipass" chunk="Search_Chunk448.xml" /><stem n="reintroduc" chunk="Search_Chunk448.xml" /><stem n="cp" chunk="Search_Chunk448.xml" /><stem n="gm" chunk="Search_Chunk448.xml" /><stem n="holdout" chunk="Search_Chunk448.xml" /><stem n="hm" chunk="Search_Chunk448.xml" /><stem n="obscur" chunk="Search_Chunk448.xml" /><stem n="undercut" chunk="Search_Chunk448.xml" /><stem n="anomali" chunk="Search_Chunk448.xml" /><stem n="smudg" chunk="Search_Chunk448.xml" /><stem n="piec" chunk="Search_Chunk448.xml" /><stem n="boom" chunk="Search_Chunk448.xml" /><stem n="problemat" chunk="Search_Chunk448.xml" /><stem n="omit" chunk="Search_Chunk448.xml" /><stem n="flaw" chunk="Search_Chunk448.xml" /><stem n="synthet" chunk="Search_Chunk448.xml" /><stem n="reproduc" chunk="Search_Chunk448.xml" /><stem n="princip" chunk="Search_Chunk449.xml" /><stem n="screen-correct" chunk="Search_Chunk449.xml" /><stem n="accumul" chunk="Search_Chunk449.xml" /><stem n="conflict" chunk="Search_Chunk449.xml" /><stem n="circumst" chunk="Search_Chunk449.xml" /><stem n="resampl" chunk="Search_Chunk449.xml" /><stem n="unsuccess" chunk="Search_Chunk449.xml" /><stem n="retent" chunk="Search_Chunk449.xml" /><stem n="addition" chunk="Search_Chunk449.xml" /><stem n="exclud" chunk="Search_Chunk449.xml" /><stem n="non-video" chunk="Search_Chunk449.xml" /><stem n="letterbox" chunk="Search_Chunk449.xml" /><stem n="inaccur" chunk="Search_Chunk449.xml" /><stem n="debug" chunk="Search_Chunk449.xml" /><stem n="preliminari" chunk="Search_Chunk449.xml" /><stem n="monochrom" chunk="Search_Chunk449.xml" /><stem n="grayscal" chunk="Search_Chunk449.xml" /><stem n="opac" chunk="Search_Chunk449.xml" /><stem n="orphan" chunk="Search_Chunk449.xml" /><stem n="rogu" chunk="Search_Chunk449.xml" /><stem n="print-through" chunk="Search_Chunk449.xml" /><stem n="exhibit" chunk="Search_Chunk449.xml" /><stem n="remaind" chunk="Search_Chunk449.xml" /><stem n="aid" chunk="Search_Chunk449.xml" /><stem n="extent" chunk="Search_Chunk449.xml" /><stem n="glossi" chunk="Search_Chunk449.xml" /><stem n="kernel" chunk="Search_Chunk449.xml" /><stem n="over-dens" chunk="Search_Chunk450.xml" /><stem n="warm" chunk="Search_Chunk450.xml" /><stem n="cool" chunk="Search_Chunk450.xml" /><stem n="excess" chunk="Search_Chunk450.xml" /><stem n="over-suppress" chunk="Search_Chunk450.xml" /><stem n="mid-rang" chunk="Search_Chunk450.xml" /><stem n="ambienc" chunk="Search_Chunk450.xml" /><stem n="subtli" chunk="Search_Chunk450.xml" /><stem n="influenc" chunk="Search_Chunk450.xml" /><stem n="veil" chunk="Search_Chunk450.xml" /><stem n="haze" chunk="Search_Chunk450.xml" /><stem n="mis-color" chunk="Search_Chunk450.xml" /><stem n="mi" chunk="Search_Chunk450.xml" /><stem n="eras" chunk="Search_Chunk450.xml" /><stem n="darkest" chunk="Search_Chunk450.xml" /><stem n="loss" chunk="Search_Chunk450.xml" /><stem n="imperfect" chunk="Search_Chunk450.xml" /><stem n="unnatur" chunk="Search_Chunk450.xml" /><stem n="choke" chunk="Search_Chunk450.xml" /><stem n="cleaned-up" chunk="Search_Chunk450.xml" /><stem n="greatest" chunk="Search_Chunk450.xml" /><stem n="brightest" chunk="Search_Chunk450.xml" /><stem n="300" chunk="Search_Chunk450.xml" /><stem n="-300" chunk="Search_Chunk450.xml" /><stem n="+300" chunk="Search_Chunk450.xml" /><stem n="200" chunk="Search_Chunk450.xml" /><stem n="emuls" chunk="Search_Chunk450.xml" /><stem n="phenomenon" chunk="Search_Chunk450.xml" /><stem n="smear" chunk="Search_Chunk450.xml" /><stem n="slower" chunk="Search_Chunk450.xml" /><stem n="unaccept" chunk="Search_Chunk450.xml" /><stem n="mat" chunk="Search_Chunk450.xml" /><stem n="dustbust" chunk="Search_Chunk450.xml" /><stem n="per-point" chunk="Search_Chunk450.xml" /><stem n="feather" chunk="Search_Chunk450.xml" /><stem n="hierarch" chunk="Search_Chunk451.xml" /><stem n="stroke" chunk="Search_Chunk451.xml" /><stem n="brush" chunk="Search_Chunk451.xml" /><stem n="broader" chunk="Search_Chunk452.xml" /><stem n="shape-specif" chunk="Search_Chunk452.xml" /><stem n="cusp" chunk="Search_Chunk452.xml" /><stem n="bg1" chunk="Search_Chunk452.xml" /><stem n="curli" chunk="Search_Chunk452.xml" /><stem n="newest" chunk="Search_Chunk452.xml" /><stem n="bezier1" chunk="Search_Chunk452.xml" /><stem n="smear2" chunk="Search_Chunk452.xml" /><stem n="reorder" chunk="Search_Chunk452.xml" /><stem n="layer1" chunk="Search_Chunk452.xml" /><stem n="uninvert" chunk="Search_Chunk452.xml" /><stem n="life" chunk="Search_Chunk452.xml" /><stem n="stretch" chunk="Search_Chunk452.xml" /><stem n="lighten" chunk="Search_Chunk452.xml" /><stem n="toolbox" chunk="Search_Chunk452.xml" /><stem n="tie" chunk="Search_Chunk452.xml" /><stem n="freehand" chunk="Search_Chunk452.xml" /><stem n="circl" chunk="Search_Chunk452.xml" /><stem n="diamet" chunk="Search_Chunk452.xml" /><stem n="breadth" chunk="Search_Chunk452.xml" /><stem n="decim" chunk="Search_Chunk452.xml" /><stem n="ellips" chunk="Search_Chunk452.xml" /><stem n="kind" chunk="Search_Chunk452.xml" /><stem n="ellipse-shap" chunk="Search_Chunk452.xml" /><stem n="rectangle-shap" chunk="Search_Chunk452.xml" /><stem n="planar-track" chunk="Search_Chunk452.xml" /><stem n="angl" chunk="Search_Chunk452.xml" /><stem n="anywai" chunk="Search_Chunk453.xml" /><stem n="de-smooth" chunk="Search_Chunk453.xml" /><stem n="tension" chunk="Search_Chunk453.xml" /><stem n="distanc" chunk="Search_Chunk453.xml" /><stem n="cmd+shift" chunk="Search_Chunk453.xml" /><stem n="bspline" chunk="Search_Chunk453.xml" /><stem n="ellipse-" chunk="Search_Chunk453.xml" /><stem n="perfect" chunk="Search_Chunk453.xml" /><stem n="creatur" chunk="Search_Chunk453.xml" /><stem n="spline-specif" chunk="Search_Chunk453.xml" /><stem n="selectal" chunk="Search_Chunk453.xml" /><stem n="selectcurv" chunk="Search_Chunk453.xml" /><stem n="selectpoint" chunk="Search_Chunk453.xml" /><stem n="selectfeatherpoint" chunk="Search_Chunk453.xml" /><stem n="addpoint" chunk="Search_Chunk453.xml" /><stem n="removepoint" chunk="Search_Chunk453.xml" /><stem n="cusppoint" chunk="Search_Chunk453.xml" /><stem n="curvepoint" chunk="Search_Chunk453.xml" /><stem n="removefeath" chunk="Search_Chunk453.xml" /><stem n="closecurv" chunk="Search_Chunk453.xml" /><stem n="createbezi" chunk="Search_Chunk453.xml" /><stem n="createbeziercusp" chunk="Search_Chunk453.xml" /><stem n="createbsplin" chunk="Search_Chunk453.xml" /><stem n="createellips" chunk="Search_Chunk453.xml" /><stem n="createrectangl" chunk="Search_Chunk453.xml" /><stem n="createrectanglecusp" chunk="Search_Chunk453.xml" /><stem n="280" chunk="Search_Chunk453.xml" /><stem n="bs" chunk="Search_Chunk453.xml" /><stem n="str" chunk="Search_Chunk453.xml" /><stem n="toolbar_brush_hard" chunk="Search_Chunk453.xml" /><stem n="ltt" chunk="Search_Chunk453.xml" /><stem n="throw" chunk="Search_Chunk453.xml" /><stem n="absenc" chunk="Search_Chunk453.xml" /><stem n="q" chunk="Search_Chunk453.xml" /><stem n="jack" chunk="Search_Chunk453.xml" /><stem n="click-and-drag" chunk="Search_Chunk453.xml" /><stem n="click-and" chunk="Search_Chunk454.xml" /><stem n="and-drag" chunk="Search_Chunk454.xml" /><stem n="secondari" chunk="Search_Chunk454.xml" /><stem n="substitut" chunk="Search_Chunk454.xml" /><stem n="interact" chunk="Search_Chunk454.xml" /><stem n="slide" chunk="Search_Chunk454.xml" /><stem n="stack" chunk="Search_Chunk454.xml" /><stem n="impact" chunk="Search_Chunk454.xml" /><stem n="spin" chunk="Search_Chunk454.xml" /><stem n="pivot" chunk="Search_Chunk454.xml" /><stem n="xy" chunk="Search_Chunk455.xml" /><stem n="yx" chunk="Search_Chunk455.xml" /><stem n="shouldn" chunk="Search_Chunk455.xml" /><stem n="unexpect" chunk="Search_Chunk455.xml" /><stem n="pin" chunk="Search_Chunk455.xml" /><stem n="mainli" chunk="Search_Chunk455.xml" /><stem n="inward" chunk="Search_Chunk455.xml" /><stem n="falloff" chunk="Search_Chunk455.xml" /><stem n="smooth0" chunk="Search_Chunk456.xml" /><stem n="smooth1" chunk="Search_Chunk456.xml" /><stem n="unlock" chunk="Search_Chunk456.xml" /><stem n="shutter" chunk="Search_Chunk456.xml" /><stem n="stai" chunk="Search_Chunk457.xml" /><stem n="stroke-specif" chunk="Search_Chunk457.xml" /><stem n="bg2" chunk="Search_Chunk457.xml" /><stem n="bg3" chunk="Search_Chunk457.xml" /><stem n="dab" chunk="Search_Chunk457.xml" /><stem n="shift+z" chunk="Search_Chunk457.xml" /><stem n="lowest" chunk="Search_Chunk457.xml" /><stem n="non-anim" chunk="Search_Chunk457.xml" /><stem n="destruct" chunk="Search_Chunk457.xml" /><stem n="spline-kei" chunk="Search_Chunk457.xml" /><stem n="amend" chunk="Search_Chunk457.xml" /><stem n="timeblur" chunk="Search_Chunk457.xml" /><stem n="per-shap" chunk="Search_Chunk457.xml" /><stem n="ocula" chunk="Search_Chunk457.xml" /><stem n="o_disparitygener" chunk="Search_Chunk457.xml" /><stem n="correl" chunk="Search_Chunk457.xml" /><stem n="chose" chunk="Search_Chunk457.xml" /><stem n="unsplit" chunk="Search_Chunk457.xml" /><stem n="hero" chunk="Search_Chunk457.xml" /><stem n="pre-6" chunk="Search_Chunk457.xml" /><stem n="deprec" chunk="Search_Chunk457.xml" /><stem n="favor" chunk="Search_Chunk457.xml" /><stem n="backwards-compat" chunk="Search_Chunk457.xml" /><stem n="nostalg" chunk="Search_Chunk457.xml" /><stem n="tb" chunk="Search_Chunk457.xml" /><stem n="addcommand" chunk="Search_Chunk457.xml" /><stem n="match-mov" chunk="Search_Chunk457.xml" /><stem n="identifi" chunk="Search_Chunk458.xml" /><stem n="occlus" chunk="Search_Chunk458.xml" /><stem n="success" chunk="Search_Chunk458.xml" /><stem n="anchor" chunk="Search_Chunk458.xml" /><stem n="fast-add" chunk="Search_Chunk458.xml" /><stem n="track_x" chunk="Search_Chunk458.xml" /><stem n="track_i" chunk="Search_Chunk458.xml" /><stem n="blob" chunk="Search_Chunk458.xml" /><stem n="asymmetr" chunk="Search_Chunk458.xml" /><stem n="irrespect" chunk="Search_Chunk458.xml" /><stem n="pre-track" chunk="Search_Chunk458.xml" /><stem n="median" chunk="Search_Chunk458.xml" /><stem n="pre-filt" chunk="Search_Chunk458.xml" /><stem n="jitteri" chunk="Search_Chunk458.xml" /><stem n="vital" chunk="Search_Chunk458.xml" /><stem n="super-whit" chunk="Search_Chunk458.xml" /><stem n="sub-zero" chunk="Search_Chunk458.xml" /><stem n="0-1" chunk="Search_Chunk458.xml" /><stem n="dynam" chunk="Search_Chunk458.xml" /><stem n="max_error" chunk="Search_Chunk458.xml" /><stem n="40" chunk="Search_Chunk458.xml" /><stem n="real-est" chunk="Search_Chunk459.xml" /><stem n="estat" chunk="Search_Chunk459.xml" /><stem n="widget" chunk="Search_Chunk459.xml" /><stem n="mag" chunk="Search_Chunk459.xml" /><stem n="vs" chunk="Search_Chunk459.xml" /><stem n="auto-track" chunk="Search_Chunk459.xml" /><stem n="grab" chunk="Search_Chunk459.xml" /><stem n="clutter" chunk="Search_Chunk459.xml" /><stem n="recognit" chunk="Search_Chunk459.xml" /><stem n="stick" chunk="Search_Chunk459.xml" /><stem n="esc" chunk="Search_Chunk459.xml" /><stem n="ceas" chunk="Search_Chunk459.xml" /><stem n="reanalysi" chunk="Search_Chunk459.xml" /><stem n="wayward" chunk="Search_Chunk459.xml" /><stem n="troublesom" chunk="Search_Chunk459.xml" /><stem n="occlud" chunk="Search_Chunk459.xml" /><stem n="iter" chunk="Search_Chunk459.xml" /><stem n="epsilon" chunk="Search_Chunk459.xml" /><stem n="predict" chunk="Search_Chunk459.xml" /><stem n="re-track" chunk="Search_Chunk459.xml" /><stem n="affin" chunk="Search_Chunk459.xml" /><stem n="easiest" chunk="Search_Chunk459.xml" /><stem n="sheer" chunk="Search_Chunk459.xml" /><stem n="interv" chunk="Search_Chunk459.xml" /><stem n="re-grab" chunk="Search_Chunk459.xml" /><stem n="equidist" chunk="Search_Chunk459.xml" /><stem n="reliabl" chunk="Search_Chunk459.xml" /><stem n="magnifi" chunk="Search_Chunk460.xml" /><stem n="fewer" chunk="Search_Chunk460.xml" /><stem n="satisfi" chunk="Search_Chunk460.xml" /><stem n="encount" chunk="Search_Chunk460.xml" /><stem n="unreli" chunk="Search_Chunk460.xml" /><stem n="seed" chunk="Search_Chunk460.xml" /><stem n="color-cod" chunk="Search_Chunk460.xml" /><stem n="traffic" chunk="Search_Chunk460.xml" /><stem n="couldn" chunk="Search_Chunk460.xml" /><stem n="met" chunk="Search_Chunk460.xml" /><stem n="examin" chunk="Search_Chunk460.xml" /><stem n="trigger" chunk="Search_Chunk460.xml" /><stem n="jitter" chunk="Search_Chunk460.xml" /><stem n="shake" chunk="Search_Chunk460.xml" /><stem n="1-pt" chunk="Search_Chunk460.xml" /><stem n="pt" chunk="Search_Chunk460.xml" /><stem n="ranslat" chunk="Search_Chunk460.xml" /><stem n="otat" chunk="Search_Chunk460.xml" /><stem n="cale" chunk="Search_Chunk460.xml" /><stem n="tracker2" chunk="Search_Chunk460.xml" /><stem n="tracker1" chunk="Search_Chunk460.xml" /><stem n="period" chunk="Search_Chunk460.xml" /><stem n="instabl" chunk="Search_Chunk460.xml" /><stem n="3-7" chunk="Search_Chunk460.xml" /><stem n="cornerpin2d" chunk="Search_Chunk460.xml" /><stem n="stabilize2d" chunk="Search_Chunk460.xml" /><stem n="vertex" chunk="Search_Chunk460.xml" /><stem n="track_x-tracker1" chunk="Search_Chunk461.xml" /><stem n="live-link" chunk="Search_Chunk461.xml" /><stem n="live" chunk="Search_Chunk461.xml" /><stem n="time-consum" chunk="Search_Chunk461.xml" /><stem n="serv" chunk="Search_Chunk461.xml" /><stem n="track_z" chunk="Search_Chunk461.xml" /><stem n="four-corn" chunk="Search_Chunk461.xml" /><stem n="fast-pan" chunk="Search_Chunk461.xml" /><stem n="remap" chunk="Search_Chunk461.xml" /><stem n="summar" chunk="Search_Chunk461.xml" /><stem n="ref" chunk="Search_Chunk461.xml" /><stem n="outermost" chunk="Search_Chunk461.xml" /><stem n="5d" chunk="Search_Chunk461.xml" /><stem n="uniformli" chunk="Search_Chunk461.xml" /><stem n="high-contrast" chunk="Search_Chunk461.xml" /><stem n="45" chunk="Search_Chunk461.xml" /><stem n="degre" chunk="Search_Chunk461.xml" /><stem n="alias" chunk="Search_Chunk462.xml" /><stem n="solut" chunk="Search_Chunk462.xml" /><stem n="fashion" chunk="Search_Chunk462.xml" /><stem n="plot" chunk="Search_Chunk462.xml" /><stem n="rise" chunk="Search_Chunk462.xml" /><stem n="rifman" chunk="Search_Chunk462.xml" /><stem n="lanczo" chunk="Search_Chunk462.xml" /><stem n="impuls" chunk="Search_Chunk462.xml" /><stem n="-y" chunk="Search_Chunk462.xml" /><stem n="mitchel" chunk="Search_Chunk462.xml" /><stem n="parzen" chunk="Search_Chunk462.xml" /><stem n="notch" chunk="Search_Chunk462.xml" /><stem n="moiré" chunk="Search_Chunk462.xml" /><stem n="lanczos4" chunk="Search_Chunk462.xml" /><stem n="lanczos6" chunk="Search_Chunk462.xml" /><stem n="sinc4" chunk="Search_Chunk462.xml" /><stem n="sharper" chunk="Search_Chunk462.xml" /><stem n="prman" chunk="Search_Chunk462.xml" /><stem n="renderman" chunk="Search_Chunk462.xml" /><stem n="org" chunk="Search_Chunk463.xml" /><stem n="rmr" chunk="Search_Chunk463.xml" /><stem n="st" chunk="Search_Chunk463.xml" /><stem n="prman_filt" chunk="Search_Chunk463.xml" /><stem n="filtering_in_prman" chunk="Search_Chunk463.xml" /><stem n="adjac" chunk="Search_Chunk463.xml" /><stem n="unavoid" chunk="Search_Chunk463.xml" /><stem n="thumb" chunk="Search_Chunk463.xml" /><stem n="noop" chunk="Search_Chunk463.xml" /><stem n="band" chunk="Search_Chunk463.xml" /><stem n="awar" chunk="Search_Chunk463.xml" /><stem n="interspers" chunk="Search_Chunk463.xml" /><stem n="card3d" chunk="Search_Chunk463.xml" /><stem n="basicmateri" chunk="Search_Chunk463.xml" /><stem n="reconcile3d" chunk="Search_Chunk463.xml" /><stem n="displacegeo" chunk="Search_Chunk463.xml" /><stem n="displac" chunk="Search_Chunk463.xml" /><stem n="emiss" chunk="Search_Chunk463.xml" /><stem n="pointsto3d" chunk="Search_Chunk463.xml" /><stem n="tviscal" chunk="Search_Chunk463.xml" /><stem n="idistort" chunk="Search_Chunk463.xml" /><stem n="motionblur2d" chunk="Search_Chunk463.xml" /><stem n="phong" chunk="Search_Chunk463.xml" /><stem n="spark" chunk="Search_Chunk464.xml" /><stem n="sphericaltransform" chunk="Search_Chunk464.xml" /><stem n="stmap" chunk="Search_Chunk464.xml" /><stem n="breviti" chunk="Search_Chunk464.xml" /><stem n="bare-bon" chunk="Search_Chunk464.xml" /><stem n="bare" chunk="Search_Chunk464.xml" /><stem n="bone" chunk="Search_Chunk464.xml" /><stem n="transform2d" chunk="Search_Chunk464.xml" /><stem n="upsampl" chunk="Search_Chunk464.xml" /><stem n="primarili" chunk="Search_Chunk464.xml" /><stem n="circle-port" chunk="Search_Chunk464.xml" /><stem n="chooser" chunk="Search_Chunk464.xml" /><stem n="transform3d" chunk="Search_Chunk464.xml" /><stem n="truli" chunk="Search_Chunk464.xml" /><stem n="cheat" chunk="Search_Chunk464.xml" /><stem n="fake" chunk="Search_Chunk464.xml" /><stem n="outcom" chunk="Search_Chunk464.xml" /><stem n="axial" chunk="Search_Chunk464.xml" /><stem n="uniform" chunk="Search_Chunk464.xml" /><stem n="permit" chunk="Search_Chunk464.xml" /><stem n="random" chunk="Search_Chunk464.xml" /><stem n="smoother-look" chunk="Search_Chunk465.xml" /><stem n="chain" chunk="Search_Chunk465.xml" /><stem n="shutteroffset" chunk="Search_Chunk465.xml" /><stem n="-0.5" chunk="Search_Chunk465.xml" /><stem n="vectorblur" chunk="Search_Chunk465.xml" /><stem n="travel" chunk="Search_Chunk465.xml" /><stem n="donut" chunk="Search_Chunk465.xml" /><stem n="sgi" chunk="Search_Chunk465.xml" /><stem n="meanwhil" chunk="Search_Chunk465.xml" /><stem n="uv" chunk="Search_Chunk465.xml" /><stem n="targa" chunk="Search_Chunk465.xml" /><stem n="scaled-down" chunk="Search_Chunk465.xml" /><stem n="dst" chunk="Search_Chunk465.xml" /><stem n="warper" chunk="Search_Chunk465.xml" /><stem n="bigger" chunk="Search_Chunk465.xml" /><stem n="smile" chunk="Search_Chunk465.xml" /><stem n="wider" chunk="Search_Chunk465.xml" /><stem n="realist" chunk="Search_Chunk466.xml" /><stem n="lessen" chunk="Search_Chunk466.xml" /><stem n="creativ" chunk="Search_Chunk466.xml" /><stem n="lens" chunk="Search_Chunk466.xml" /><stem n="divis" chunk="Search_Chunk466.xml" /><stem n="subdivis" chunk="Search_Chunk466.xml" /><stem n="shift-click" chunk="Search_Chunk466.xml" /><stem n="subdivid" chunk="Search_Chunk466.xml" /><stem n="nearbi" chunk="Search_Chunk466.xml" /><stem n="shift+6" chunk="Search_Chunk466.xml" /><stem n="non-whit" chunk="Search_Chunk466.xml" /><stem n="unwarp" chunk="Search_Chunk466.xml" /><stem n="submesh" chunk="Search_Chunk466.xml" /><stem n="deform" chunk="Search_Chunk466.xml" /><stem n="mayb" chunk="Search_Chunk466.xml" /><stem n="prohibit" chunk="Search_Chunk466.xml" /><stem n="persist" chunk="Search_Chunk466.xml" /><stem n="overus" chunk="Search_Chunk466.xml" /><stem n="secur" chunk="Search_Chunk466.xml" /><stem n="unjoin" chunk="Search_Chunk466.xml" /><stem n="reselect" chunk="Search_Chunk466.xml" /><stem n="points+tang" chunk="Search_Chunk466.xml" /><stem n="sacrific" chunk="Search_Chunk466.xml" /><stem n="tear" chunk="Search_Chunk466.xml" /><stem n="rais" chunk="Search_Chunk466.xml" /><stem n="classic" chunk="Search_Chunk467.xml" /><stem n="quadrat" chunk="Search_Chunk467.xml" /><stem n="cope" chunk="Search_Chunk467.xml" /><stem n="mr" chunk="Search_Chunk467.xml" /><stem n="woman" chunk="Search_Chunk467.xml" /><stem n="stunt" chunk="Search_Chunk467.xml" /><stem n="monkei" chunk="Search_Chunk467.xml" /><stem n="nose" chunk="Search_Chunk467.xml" /><stem n="mouth" chunk="Search_Chunk467.xml" /><stem n="peopl" chunk="Search_Chunk467.xml" /><stem n="left_ey" chunk="Search_Chunk467.xml" /><stem n="right_ey" chunk="Search_Chunk467.xml" /><stem n="counterpart" chunk="Search_Chunk467.xml" /><stem n="cookie-cutt" chunk="Search_Chunk467.xml" /><stem n="cooki" chunk="Search_Chunk467.xml" /><stem n="cutter" chunk="Search_Chunk467.xml" /><stem n="monkey-lion" chunk="Search_Chunk467.xml" /><stem n="cookie-cut" chunk="Search_Chunk467.xml" /><stem n="m_head" chunk="Search_Chunk467.xml" /><stem n="l_head" chunk="Search_Chunk467.xml" /><stem n="mask_splinewarp" chunk="Search_Chunk467.xml" /><stem n="roughli" chunk="Search_Chunk467.xml" /><stem n="planartrackerlayer1" chunk="Search_Chunk467.xml" /><stem n="gridwarp3_1" chunk="Search_Chunk467.xml" /><stem n="destination_grid_col" chunk="Search_Chunk467.xml" /><stem n="po" chunk="Search_Chunk467.xml" /><stem n="index" chunk="Search_Chunk467.xml" /><stem n="north" chunk="Search_Chunk467.xml" /><stem n="south" chunk="Search_Chunk467.xml" /><stem n="east" chunk="Search_Chunk467.xml" /><stem n="west" chunk="Search_Chunk467.xml" /><stem n="l_left_nos" chunk="Search_Chunk467.xml" /><stem n="splice" chunk="Search_Chunk467.xml" /><stem n="freez" chunk="Search_Chunk467.xml" /><stem n="oflow" chunk="Search_Chunk467.xml" /><stem n="speed-up" chunk="Search_Chunk467.xml" /><stem n="geometri" chunk="Search_Chunk467.xml" /><stem n="frame-blend" chunk="Search_Chunk468.xml" /><stem n="collis" chunk="Search_Chunk468.xml" /><stem n="mere" chunk="Search_Chunk468.xml" /><stem n="frame-copi" chunk="Search_Chunk468.xml" /><stem n="ghost" chunk="Search_Chunk468.xml" /><stem n="desk" chunk="Search_Chunk468.xml" /><stem n="odd" chunk="Search_Chunk468.xml" /><stem n="high-qual" chunk="Search_Chunk468.xml" /><stem n="half-spe" chunk="Search_Chunk468.xml" /><stem n="quarter-spe" chunk="Search_Chunk468.xml" /><stem n="quarter" chunk="Search_Chunk468.xml" /><stem n="opticalflow" chunk="Search_Chunk468.xml" /><stem n="optiflow" chunk="Search_Chunk468.xml" /><stem n="20th" chunk="Search_Chunk468.xml" /><stem n="trade" chunk="Search_Chunk468.xml" /><stem n="spuriou" chunk="Search_Chunk468.xml" /><stem n="bilinear" chunk="Search_Chunk468.xml" /><stem n="flicker" chunk="Search_Chunk468.xml" /><stem n="metal" chunk="Search_Chunk468.xml" /><stem n="vehicl" chunk="Search_Chunk468.xml" /><stem n="bodi" chunk="Search_Chunk468.xml" /><stem n="colour" chunk="Search_Chunk468.xml" /><stem n="snowmobil" chunk="Search_Chunk469.xml" /><stem n="down-sampl" chunk="Search_Chunk469.xml" /><stem n="sculpt" chunk="Search_Chunk469.xml" /><stem n="timewarp" chunk="Search_Chunk469.xml" /><stem n="downward" chunk="Search_Chunk469.xml" /><stem n="dip" chunk="Search_Chunk469.xml" /><stem n="knot" chunk="Search_Chunk469.xml" /><stem n="fast-mov" chunk="Search_Chunk469.xml" /><stem n="obviou" chunk="Search_Chunk469.xml" /><stem n="convinc" chunk="Search_Chunk469.xml" /><stem n="steppi" chunk="Search_Chunk469.xml" /><stem n="180" chunk="Search_Chunk469.xml" /><stem n="analog" chunk="Search_Chunk469.xml" /><stem n="captur" chunk="Search_Chunk469.xml" /><stem n="unnecessari" chunk="Search_Chunk469.xml" /><stem n="notimeblur" chunk="Search_Chunk469.xml" /><stem n="nevertheless" chunk="Search_Chunk469.xml" /><stem n="mandatori" chunk="Search_Chunk469.xml" /><stem n="sphere" chunk="Search_Chunk469.xml" /><stem n="cube" chunk="Search_Chunk469.xml" /><stem n="fade" chunk="Search_Chunk470.xml" /><stem n="dopesheet" chunk="Search_Chunk470.xml" /><stem n="20-frame" chunk="Search_Chunk470.xml" /><stem n="17" chunk="Search_Chunk470.xml" /><stem n="18" chunk="Search_Chunk470.xml" /><stem n="-10" chunk="Search_Chunk470.xml" /><stem n="observ" chunk="Search_Chunk470.xml" /><stem n="head-to" chunk="Search_Chunk470.xml" /><stem n="head-to-tail" chunk="Search_Chunk470.xml" /><stem n="to-tail" chunk="Search_Chunk470.xml" /><stem n="instantan" chunk="Search_Chunk470.xml" /><stem n="upward" chunk="Search_Chunk470.xml" /><stem n="tonal" chunk="Search_Chunk470.xml" /><stem n="non-n" chunk="Search_Chunk470.xml" /><stem n="parad" chunk="Search_Chunk470.xml" /><stem n="blackpoint" chunk="Search_Chunk470.xml" /><stem n="whitepoint" chunk="Search_Chunk470.xml" /><stem n="gaug" chunk="Search_Chunk470.xml" /><stem n="leftmost" chunk="Search_Chunk470.xml" /><stem n="till" chunk="Search_Chunk470.xml" /><stem n="rightmost" chunk="Search_Chunk470.xml" /><stem n="mid-point" chunk="Search_Chunk470.xml" /><stem n="pen-up" chunk="Search_Chunk470.xml" /><stem n="hsvl" chunk="Search_Chunk470.xml" /><stem n="inf" chunk="Search_Chunk470.xml" /><stem n="infinit" chunk="Search_Chunk470.xml" /><stem n="nan" chunk="Search_Chunk470.xml" /><stem n="vice-versa" chunk="Search_Chunk470.xml" /><stem n="importantli" chunk="Search_Chunk470.xml" /><stem n="intuit" chunk="Search_Chunk470.xml" /><stem n="lightest" chunk="Search_Chunk470.xml" /><stem n="compris" chunk="Search_Chunk470.xml" /><stem n="bulk" chunk="Search_Chunk470.xml" /><stem n="colorlookup" chunk="Search_Chunk470.xml" /><stem n="master" chunk="Search_Chunk470.xml" /><stem n="ccorrect" chunk="Search_Chunk470.xml" /><stem n="mixtur" chunk="Search_Chunk470.xml" /><stem n="lookup" chunk="Search_Chunk470.xml" /><stem n="toe" chunk="Search_Chunk470.xml" /><stem n="lift" chunk="Search_Chunk470.xml" /><stem n="roll-off" chunk="Search_Chunk470.xml" /><stem n="anti-alias" chunk="Search_Chunk470.xml" /><stem n="egd" chunk="Search_Chunk470.xml" /><stem n="precomput" chunk="Search_Chunk470.xml" /><stem n="soak" chunk="Search_Chunk470.xml" /><stem n="collect" chunk="Search_Chunk470.xml" /><stem n="hsvtool" chunk="Search_Chunk470.xml" /><stem n="swath" chunk="Search_Chunk471.xml" /><stem n="punch" chunk="Search_Chunk471.xml" /><stem n="waterfront" chunk="Search_Chunk471.xml" /><stem n="diversifi" chunk="Search_Chunk471.xml" /><stem n="rooftop" chunk="Search_Chunk471.xml" /><stem n="ochre-color" chunk="Search_Chunk471.xml" /><stem n="ochr" chunk="Search_Chunk471.xml" /><stem n="srccolor" chunk="Search_Chunk471.xml" /><stem n="rolloff" chunk="Search_Chunk471.xml" /><stem n="360" chunk="Search_Chunk471.xml" /><stem n="-1" chunk="Search_Chunk471.xml" /><stem n="desatur" chunk="Search_Chunk471.xml" /><stem n="dstcolor" chunk="Search_Chunk471.xml" /><stem n="excel" chunk="Search_Chunk471.xml" /><stem n="obvious" chunk="Search_Chunk471.xml" /><stem n="diminish" chunk="Search_Chunk471.xml" /><stem n="redscreen" chunk="Search_Chunk471.xml" /><stem n="sat" chunk="Search_Chunk471.xml" /><stem n="lum" chunk="Search_Chunk471.xml" /><stem n="r_sup" chunk="Search_Chunk471.xml" /><stem n="g_sup" chunk="Search_Chunk471.xml" /><stem n="b_sup" chunk="Search_Chunk471.xml" /><stem n="river" chunk="Search_Chunk471.xml" /><stem n="multi-purpos" chunk="Search_Chunk471.xml" /><stem n="practically-cr" chunk="Search_Chunk471.xml" /><stem n="grainless" chunk="Search_Chunk471.xml" /><stem n="filmgrain" chunk="Search_Chunk471.xml" /><stem n="scannedgrain" chunk="Search_Chunk471.xml" /><stem n="crudest" chunk="Search_Chunk471.xml" /><stem n="backplat" chunk="Search_Chunk471.xml" /><stem n="statist" chunk="Search_Chunk471.xml" /><stem n="granul" chunk="Search_Chunk471.xml" /><stem n="irregular" chunk="Search_Chunk471.xml" /><stem n="per-channel" chunk="Search_Chunk471.xml" /><stem n="accomplish" chunk="Search_Chunk471.xml" /><stem n="crude" chunk="Search_Chunk471.xml" /><stem n="low_clip" chunk="Search_Chunk471.xml" /><stem n="blackest" chunk="Search_Chunk471.xml" /><stem n="whitest" chunk="Search_Chunk471.xml" /><stem n="legal" chunk="Search_Chunk471.xml" /><stem n="premultipl" chunk="Search_Chunk471.xml" /><stem n="defer" chunk="Search_Chunk471.xml" /><stem n="lin-to-log" chunk="Search_Chunk471.xml" /><stem n="lin" chunk="Search_Chunk471.xml" /><stem n="lin-to" chunk="Search_Chunk471.xml" /><stem n="to-log" chunk="Search_Chunk471.xml" /><stem n="kodak" chunk="Search_Chunk471.xml" /><stem n="kodak-recommend" chunk="Search_Chunk471.xml" /><stem n="ploglin" chunk="Search_Chunk471.xml" /><stem n="halt" chunk="Search_Chunk471.xml" /><stem n="log-to-lin" chunk="Search_Chunk471.xml" /><stem n="log-to" chunk="Search_Chunk471.xml" /><stem n="to-lin" chunk="Search_Chunk471.xml" /><stem n="lin2log" chunk="Search_Chunk471.xml" /><stem n="prioriti" chunk="Search_Chunk471.xml" /><stem n="josh" chunk="Search_Chunk471.xml" /><stem n="pine" chunk="Search_Chunk471.xml" /><stem n="respons" chunk="Search_Chunk471.xml" /><stem n="fidel" chunk="Search_Chunk471.xml" /><stem n="cmstestpattern" chunk="Search_Chunk471.xml" /><stem n="cie" chunk="Search_Chunk471.xml" /><stem n="cm" chunk="Search_Chunk471.xml" /><stem n="sub-format" chunk="Search_Chunk471.xml" /><stem n="d55" chunk="Search_Chunk471.xml" /><stem n="ociocolorspac" chunk="Search_Chunk471.xml" /><stem n="googl" chunk="Search_Chunk472.xml" /><stem n="pretti" chunk="Search_Chunk472.xml" /><stem n="pre-compil" chunk="Search_Chunk472.xml" /><stem n="pre-built" chunk="Search_Chunk472.xml" /><stem n="pyopencolorio" chunk="Search_Chunk472.xml" /><stem n="libopencolorio" chunk="Search_Chunk472.xml" /><stem n="pre-packag" chunk="Search_Chunk472.xml" /><stem n="install&gt;" chunk="Search_Chunk472.xml" /><stem n="dyld_library_path" chunk="Search_Chunk472.xml" /><stem n="myociolibraryloc" chunk="Search_Chunk472.xml" /><stem n="dyld" chunk="Search_Chunk472.xml" /><stem n="plist" chunk="Search_Chunk472.xml" /><stem n="kb" chunk="Search_Chunk472.xml" /><stem n="ts4267" chunk="Search_Chunk472.xml" /><stem n="dll" chunk="Search_Chunk472.xml" /><stem n="pyd" chunk="Search_Chunk472.xml" /><stem n="myocioconfigloc" chunk="Search_Chunk472.xml" /><stem n="recompil" chunk="Search_Chunk472.xml" /><stem n="display-onli" chunk="Search_Chunk472.xml" /><stem n="depth-of-field" chunk="Search_Chunk472.xml" /><stem n="depth-of" chunk="Search_Chunk472.xml" /><stem n="of-field" chunk="Search_Chunk472.xml" /><stem n="dof" chunk="Search_Chunk472.xml" /><stem n="zdefocu" chunk="Search_Chunk472.xml" /><stem n="convolut" chunk="Search_Chunk472.xml" /><stem n="bokeh" chunk="Search_Chunk472.xml" /><stem n="apertur" chunk="Search_Chunk472.xml" /><stem n="pentagon" chunk="Search_Chunk472.xml" /><stem n="hexagon" chunk="Search_Chunk472.xml" /><stem n="fourier" chunk="Search_Chunk472.xml" /><stem n="bloom" chunk="Search_Chunk472.xml" /><stem n="out-of-focu" chunk="Search_Chunk472.xml" /><stem n="out-of" chunk="Search_Chunk472.xml" /><stem n="of-focu" chunk="Search_Chunk472.xml" /><stem n="suggest" chunk="Search_Chunk473.xml" /><stem n="disc" chunk="Search_Chunk473.xml" /><stem n="blade" chunk="Search_Chunk473.xml" /><stem n="pre-nuk" chunk="Search_Chunk473.xml" /><stem n="compatibilti" chunk="Search_Chunk473.xml" /><stem n="infin" chunk="Search_Chunk473.xml" /><stem n="-direct" chunk="Search_Chunk473.xml" /><stem n="-depth" chunk="Search_Chunk473.xml" /><stem n="-distanc" chunk="Search_Chunk473.xml" /><stem n="-0" chunk="Search_Chunk473.xml" /><stem n="-1/distance." chunk="Search_Chunk473.xml" /><stem n="maya" chunk="Search_Chunk473.xml" /><stem n="-1." chunk="Search_Chunk473.xml" /><stem n="focal" chunk="Search_Chunk473.xml" /><stem n="car" chunk="Search_Chunk473.xml" /><stem n="undesir" chunk="Search_Chunk473.xml" /><stem n="artefact" chunk="Search_Chunk473.xml" /><stem n="blurri" chunk="Search_Chunk473.xml" /><stem n="overlaid" chunk="Search_Chunk473.xml" /><stem n="widen" chunk="Search_Chunk473.xml" /><stem n="theoret" chunk="Search_Chunk473.xml" /><stem n="in-focu" chunk="Search_Chunk473.xml" /><stem n="nearer" chunk="Search_Chunk473.xml" /><stem n="increasingli" chunk="Search_Chunk473.xml" /><stem n="widely-spac" chunk="Search_Chunk473.xml" /><stem n="gaussian" chunk="Search_Chunk473.xml" /><stem n="squeez" chunk="Search_Chunk473.xml" /><stem n="cat" chunk="Search_Chunk473.xml" /><stem n="vignet" chunk="Search_Chunk473.xml" /><stem n="iri" chunk="Search_Chunk473.xml" /><stem n="diaphragm" chunk="Search_Chunk473.xml" /><stem n="counter-clockwis" chunk="Search_Chunk473.xml" /><stem n="counter" chunk="Search_Chunk473.xml" /><stem n="percentag" chunk="Search_Chunk473.xml" /><stem n="catadioptr" chunk="Search_Chunk473.xml" /><stem n="annular" chunk="Search_Chunk473.xml" /><stem n="donut-shap" chunk="Search_Chunk473.xml" /><stem n="chromat" chunk="Search_Chunk473.xml" /><stem n="aberr" chunk="Search_Chunk474.xml" /><stem n="0v2" chunk="Search_Chunk474.xml" /><stem n="warmer" chunk="Search_Chunk474.xml" /><stem n="light-grai" chunk="Search_Chunk474.xml" /><stem n="glint" chunk="Search_Chunk474.xml" /><stem n="star-shap" chunk="Search_Chunk474.xml" /><stem n="credit" chunk="Search_Chunk474.xml" /><stem n="skirt" chunk="Search_Chunk474.xml" /><stem n="wrap" chunk="Search_Chunk474.xml" /><stem n="glow" chunk="Search_Chunk474.xml" /><stem n="fgblur" chunk="Search_Chunk474.xml" /><stem n="bgblur" chunk="Search_Chunk474.xml" /><stem n="rai" chunk="Search_Chunk474.xml" /><stem n="five-point" chunk="Search_Chunk474.xml" /><stem n="entiti" chunk="Search_Chunk474.xml" /><stem n="hmtl" chunk="Search_Chunk474.xml" /><stem n="hex" chunk="Search_Chunk474.xml" /><stem n="slate" chunk="Search_Chunk474.xml" /><stem n="bbox+format" chunk="Search_Chunk474.xml" /><stem n="overstep" chunk="Search_Chunk474.xml" /><stem n="xyrt" chunk="Search_Chunk474.xml" /><stem n="behav" chunk="Search_Chunk474.xml" /><stem n="unicod" chunk="Search_Chunk474.xml" /><stem n="foreign" chunk="Search_Chunk474.xml" /><stem n="lt" chunk="Search_Chunk474.xml" /><stem n="x3c" chunk="Search_Chunk474.xml" /><stem n="xa9" chunk="Search_Chunk474.xml" /><stem n="169" chunk="Search_Chunk474.xml" /><stem n="utf-8" chunk="Search_Chunk474.xml" /><stem n="utf" chunk="Search_Chunk474.xml" /><stem n="mark-up" chunk="Search_Chunk474.xml" /><stem n="mistak" chunk="Search_Chunk474.xml" /><stem n="week" chunk="Search_Chunk474.xml" /><stem n="month" chunk="Search_Chunk474.xml" /><stem n="hh" chunk="Search_Chunk474.xml" /><stem n="mm" chunk="Search_Chunk474.xml" /><stem n="ss" chunk="Search_Chunk474.xml" /><stem n="jan" chunk="Search_Chunk474.xml" /><stem n="gmt" chunk="Search_Chunk474.xml" /><stem n="abbrevi" chunk="Search_Chunk474.xml" /><stem n="thursdai" chunk="Search_Chunk474.xml" /><stem n="januari" chunk="Search_Chunk474.xml" /><stem n="01-31" chunk="Search_Chunk474.xml" /><stem n="dd" chunk="Search_Chunk474.xml" /><stem n="yy" chunk="Search_Chunk474.xml" /><stem n="00" chunk="Search_Chunk474.xml" /><stem n="00-23" chunk="Search_Chunk474.xml" /><stem n="01-12" chunk="Search_Chunk474.xml" /><stem n="minut" chunk="Search_Chunk474.xml" /><stem n="00-59" chunk="Search_Chunk474.xml" /><stem n="59" chunk="Search_Chunk474.xml" /><stem n="am" chunk="Search_Chunk474.xml" /><stem n="pm" chunk="Search_Chunk475.xml" /><stem n="12-hour" chunk="Search_Chunk475.xml" /><stem n="clock" chunk="Search_Chunk475.xml" /><stem n="04" chunk="Search_Chunk475.xml" /><stem n="07" chunk="Search_Chunk475.xml" /><stem n="24-hour" chunk="Search_Chunk475.xml" /><stem n="06" chunk="Search_Chunk475.xml" /><stem n="54" chunk="Search_Chunk475.xml" /><stem n="year" chunk="Search_Chunk475.xml" /><stem n="00-99" chunk="Search_Chunk475.xml" /><stem n="2010" chunk="Search_Chunk475.xml" /><stem n="0800" chunk="Search_Chunk475.xml" /><stem n="-0800" chunk="Search_Chunk475.xml" /><stem n="ctime" chunk="Search_Chunk475.xml" /><stem n="timestamp" chunk="Search_Chunk475.xml" /><stem n="_script" chunk="Search_Chunk475.xml" /><stem n="myscript" chunk="Search_Chunk475.xml" /><stem n="$env" chunk="Search_Chunk475.xml" /><stem n="environment_vari" chunk="Search_Chunk475.xml" /><stem n="_variabl" chunk="Search_Chunk475.xml" /><stem n="$version_long" chunk="Search_Chunk475.xml" /><stem n="$thread" chunk="Search_Chunk475.xml" /><stem n="amp" chunk="Search_Chunk475.xml" /><stem n="apo" chunk="Search_Chunk475.xml" /><stem n="ar" chunk="Search_Chunk475.xml" /><stem n="å" chunk="Search_Chunk475.xml" /><stem n="aacut" chunk="Search_Chunk475.xml" /><stem n="á" chunk="Search_Chunk475.xml" /><stem n="acirc" chunk="Search_Chunk475.xml" /><stem n="â" chunk="Search_Chunk475.xml" /><stem n="aelig" chunk="Search_Chunk475.xml" /><stem n="æ" chunk="Search_Chunk475.xml" /><stem n="agrav" chunk="Search_Chunk475.xml" /><stem n="à" chunk="Search_Chunk475.xml" /><stem n="ccedil" chunk="Search_Chunk475.xml" /><stem n="ç" chunk="Search_Chunk475.xml" /><stem n="eacut" chunk="Search_Chunk475.xml" /><stem n="é" chunk="Search_Chunk475.xml" /><stem n="ecirc" chunk="Search_Chunk475.xml" /><stem n="ê" chunk="Search_Chunk475.xml" /><stem n="egrav" chunk="Search_Chunk475.xml" /><stem n="è" chunk="Search_Chunk475.xml" /><stem n="euml" chunk="Search_Chunk475.xml" /><stem n="ë" chunk="Search_Chunk475.xml" /><stem n="euro" chunk="Search_Chunk475.xml" /><stem n="€" chunk="Search_Chunk475.xml" /><stem n="gt" chunk="Search_Chunk475.xml" /><stem n="ntild" chunk="Search_Chunk475.xml" /><stem n="ñ" chunk="Search_Chunk475.xml" /><stem n="oslash" chunk="Search_Chunk475.xml" /><stem n="ø" chunk="Search_Chunk475.xml" /><stem n="otild" chunk="Search_Chunk475.xml" /><stem n="õ" chunk="Search_Chunk475.xml" /><stem n="ouml" chunk="Search_Chunk475.xml" /><stem n="ö" chunk="Search_Chunk475.xml" /><stem n="quot" chunk="Search_Chunk475.xml" /><stem n="reg" chunk="Search_Chunk475.xml" /><stem n="®" chunk="Search_Chunk475.xml" /><stem n="szlig" chunk="Search_Chunk475.xml" /><stem n="ß" chunk="Search_Chunk475.xml" /><stem n="uuml" chunk="Search_Chunk475.xml" /><stem n="ü" chunk="Search_Chunk475.xml" /><stem n="x23" chunk="Search_Chunk475.xml" /><stem n="x25" chunk="Search_Chunk475.xml" /><stem n="x26" chunk="Search_Chunk475.xml" /><stem n="x2a" chunk="Search_Chunk475.xml" /><stem n="x40" chunk="Search_Chunk475.xml" /><stem n="x99" chunk="Search_Chunk475.xml" /><stem n="™" chunk="Search_Chunk475.xml" /><stem n="x153" chunk="Search_Chunk475.xml" /><stem n="œ" chunk="Search_Chunk475.xml" /><stem n="x161" chunk="Search_Chunk475.xml" /><stem n="š" chunk="Search_Chunk475.xml" /><stem n="x3e" chunk="Search_Chunk475.xml" /><stem n="xe9" chunk="Search_Chunk475.xml" /><stem n="163" chunk="Search_Chunk475.xml" /><stem n="£" chunk="Search_Chunk475.xml" /><stem n="174" chunk="Search_Chunk475.xml" /><stem n="191" chunk="Search_Chunk475.xml" /><stem n="234" chunk="Search_Chunk475.xml" /><stem n="223" chunk="Search_Chunk475.xml" /><stem n="224" chunk="Search_Chunk475.xml" /><stem n="-h" chunk="Search_Chunk475.xml" /><stem n="freetyp" chunk="Search_Chunk475.xml" /><stem n="truetyp" chunk="Search_Chunk475.xml" /><stem n="opentyp" chunk="Search_Chunk475.xml" /><stem n="postscript" chunk="Search_Chunk475.xml" /><stem n="fontmap" chunk="Search_Chunk475.xml" /><stem n="fcach" chunk="Search_Chunk475.xml" /><stem n="nuke_font_path" chunk="Search_Chunk475.xml" /><stem n="font1" chunk="Search_Chunk475.xml" /><stem n="font2" chunk="Search_Chunk475.xml" /><stem n="arial" chunk="Search_Chunk475.xml" /><stem n="cross-platform" chunk="Search_Chunk475.xml" /><stem n="hint" chunk="Search_Chunk475.xml" /><stem n="big" chunk="Search_Chunk475.xml" /><stem n="legibl" chunk="Search_Chunk475.xml" /><stem n="kern" chunk="Search_Chunk475.xml" /><stem n="baselin" chunk="Search_Chunk475.xml" /><stem n="imaginari" chunk="Search_Chunk475.xml" /><stem n="justifi" chunk="Search_Chunk475.xml" /><stem n="xjustifi" chunk="Search_Chunk475.xml" /><stem n="rag" chunk="Search_Chunk475.xml" /><stem n="justif" chunk="Search_Chunk475.xml" /><stem n="yjustifi" chunk="Search_Chunk475.xml" /><stem n="rescanfontfold" chunk="Search_Chunk475.xml" /><stem n="gradient" chunk="Search_Chunk475.xml" /><stem n="linearli" chunk="Search_Chunk475.xml" /><stem n="eas" chunk="Search_Chunk475.xml" /><stem n="p0" chunk="Search_Chunk475.xml" /><stem n="p1" chunk="Search_Chunk475.xml" /><stem n="225" chunk="Search_Chunk475.xml" /><stem n="dropshadow" chunk="Search_Chunk475.xml" /><stem n="analys" chunk="Search_Chunk475.xml" /><stem n="autocrop" chunk="Search_Chunk476.xml" /><stem n="avg" chunk="Search_Chunk476.xml" /><stem n="dimmest" chunk="Search_Chunk476.xml" /><stem n="night-tim" chunk="Search_Chunk476.xml" /><stem n="night" chunk="Search_Chunk476.xml" /><stem n="flashlight" chunk="Search_Chunk476.xml" /><stem n="pixelanalyz" chunk="Search_Chunk476.xml" /><stem n="deviat" chunk="Search_Chunk476.xml" /><stem n="autocropdata" chunk="Search_Chunk476.xml" /><stem n="intensitydata" chunk="Search_Chunk476.xml" /><stem n="maxlumadata" chunk="Search_Chunk476.xml" /><stem n="obj" chunk="Search_Chunk476.xml" /><stem n="scanlinerend" chunk="Search_Chunk476.xml" /><stem n="card1" chunk="Search_Chunk476.xml" /><stem n="card2" chunk="Search_Chunk476.xml" /><stem n="highest-level" chunk="Search_Chunk476.xml" /><stem n="scn" chunk="Search_Chunk476.xml" /><stem n="cam" chunk="Search_Chunk476.xml" /><stem n="ctrl+i" chunk="Search_Chunk476.xml" /><stem n="centimet" chunk="Search_Chunk476.xml" /><stem n="inch" chunk="Search_Chunk476.xml" /><stem n="shift+x" chunk="Search_Chunk476.xml" /><stem n="shift+c" chunk="Search_Chunk476.xml" /><stem n="three-quart" chunk="Search_Chunk476.xml" /><stem n="dolli" chunk="Search_Chunk476.xml" /><stem n="middle-mouse-button" chunk="Search_Chunk476.xml" /><stem n="mouse-button" chunk="Search_Chunk476.xml" /><stem n="left-mouse-button" chunk="Search_Chunk476.xml" /><stem n="left-mous" chunk="Search_Chunk476.xml" /><stem n="tilt" chunk="Search_Chunk476.xml" /><stem n="shift+" chunk="Search_Chunk476.xml" /><stem n="houdini" chunk="Search_Chunk476.xml" /><stem n="lightwav" chunk="Search_Chunk476.xml" /><stem n="pref" chunk="Search_Chunk476.xml" /><stem n="primit" chunk="Search_Chunk476.xml" /><stem n="cylind" chunk="Search_Chunk477.xml" /><stem n="wavefront" chunk="Search_Chunk477.xml" /><stem n="fbx" chunk="Search_Chunk477.xml" /><stem n="alemb" chunk="Search_Chunk477.xml" /><stem n="bicub" chunk="Search_Chunk477.xml" /><stem n="proceduralnois" chunk="Search_Chunk478.xml" /><stem n="radialdistort" chunk="Search_Chunk478.xml" /><stem n="mesh" chunk="Search_Chunk478.xml" /><stem n="reshap" chunk="Search_Chunk478.xml" /><stem n="bi" chunk="Search_Chunk478.xml" /><stem n="elast" chunk="Search_Chunk478.xml" /><stem n="exert" chunk="Search_Chunk478.xml" /><stem n="magnetic-lik" chunk="Search_Chunk478.xml" /><stem n="magnet" chunk="Search_Chunk478.xml" /><stem n="alon" chunk="Search_Chunk478.xml" /><stem n="six-sid" chunk="Search_Chunk478.xml" /><stem n="ub" chunk="Search_Chunk478.xml" /><stem n="therebi" chunk="Search_Chunk478.xml" /><stem n="circular" chunk="Search_Chunk478.xml" /><stem n="ellipt" chunk="Search_Chunk478.xml" /><stem n="ert" chunk="Search_Chunk478.xml" /><stem n="low-resolut" chunk="Search_Chunk478.xml" /><stem n="latitudin" chunk="Search_Chunk478.xml" /><stem n="longitudin" chunk="Search_Chunk478.xml" /><stem n="globe-shap" chunk="Search_Chunk478.xml" /><stem n="octahedron" chunk="Search_Chunk478.xml" /><stem n="boujou" chunk="Search_Chunk478.xml" /><stem n="abc" chunk="Search_Chunk478.xml" /><stem n="popular" chunk="Search_Chunk478.xml" /><stem n="obj-typ" chunk="Search_Chunk478.xml" /><stem n="ipul" chunk="Search_Chunk478.xml" /><stem n="non-uniform" chunk="Search_Chunk478.xml" /><stem n="ration" chunk="Search_Chunk478.xml" /><stem n="nurb" chunk="Search_Chunk478.xml" /><stem n="troubl" chunk="Search_Chunk478.xml" /><stem n="ascii" chunk="Search_Chunk478.xml" /><stem n="binari" chunk="Search_Chunk478.xml" /><stem n="autodesk" chunk="Search_Chunk478.xml" /><stem n="patch" chunk="Search_Chunk478.xml" /><stem n="octopu" chunk="Search_Chunk479.xml" /><stem n="soni" chunk="Search_Chunk479.xml" /><stem n="imagework" chunk="Search_Chunk479.xml" /><stem n="scenegraph" chunk="Search_Chunk479.xml" /><stem n="all-in-on" chunk="Search_Chunk479.xml" /><stem n="all-in" chunk="Search_Chunk479.xml" /><stem n="in-on" chunk="Search_Chunk479.xml" /><stem n="depthtoposit" chunk="Search_Chunk479.xml" /><stem n="positiontopoint" chunk="Search_Chunk479.xml" /><stem n="depthtopoint" chunk="Search_Chunk479.xml" /><stem n="xyz" chunk="Search_Chunk479.xml" /><stem n="ultim" chunk="Search_Chunk479.xml" /><stem n="recreat" chunk="Search_Chunk479.xml" /><stem n="norm" chunk="Search_Chunk479.xml" /><stem n="unnam" chunk="Search_Chunk479.xml" /><stem n="solid+wirefram" chunk="Search_Chunk479.xml" /><stem n="textured+wirefram" chunk="Search_Chunk479.xml" /><stem n="geoselect" chunk="Search_Chunk480.xml" /><stem n="editgeo" chunk="Search_Chunk480.xml" /><stem n="shift+alt" chunk="Search_Chunk480.xml" /><stem n="marquee-select" chunk="Search_Chunk480.xml" /><stem n="mergegeo" chunk="Search_Chunk480.xml" /><stem n="applymateri" chunk="Search_Chunk480.xml" /><stem n="perlin" chunk="Search_Chunk480.xml" /><stem n="trilinear" chunk="Search_Chunk480.xml" /><stem n="headlamp" chunk="Search_Chunk480.xml" /><stem n="crosstalkgeo" chunk="Search_Chunk480.xml" /><stem n="lookupgeo" chunk="Search_Chunk480.xml" /><stem n="squash" chunk="Search_Chunk480.xml" /><stem n="x-&gt;y" chunk="Search_Chunk480.xml" /><stem n="&gt;y" chunk="Search_Chunk480.xml" /><stem n="y-&gt;x" chunk="Search_Chunk480.xml" /><stem n="&gt;x" chunk="Search_Chunk480.xml" /><stem n="loggeo" chunk="Search_Chunk480.xml" /><stem n="principl" chunk="Search_Chunk480.xml" /><stem n="attrib" chunk="Search_Chunk480.xml" /><stem n="shader" chunk="Search_Chunk480.xml" /><stem n="tessel" chunk="Search_Chunk480.xml" /><stem n="30x30" chunk="Search_Chunk480.xml" /><stem n="1800" chunk="Search_Chunk480.xml" /><stem n="30x30x2" chunk="Search_Chunk480.xml" /><stem n="1x1" chunk="Search_Chunk480.xml" /><stem n="2x2" chunk="Search_Chunk480.xml" /><stem n="4x4" chunk="Search_Chunk480.xml" /><stem n="10x10" chunk="Search_Chunk480.xml" /><stem n="51200" chunk="Search_Chunk480.xml" /><stem n="occas" chunk="Search_Chunk480.xml" /><stem n="adapt" chunk="Search_Chunk480.xml" /><stem n="procgeo" chunk="Search_Chunk481.xml" /><stem n="seemingli" chunk="Search_Chunk481.xml" /><stem n="wave" chunk="Search_Chunk481.xml" /><stem n="terrain" chunk="Search_Chunk481.xml" /><stem n="turbul" chunk="Search_Chunk481.xml" /><stem n="fbm" chunk="Search_Chunk481.xml" /><stem n="fractal" chunk="Search_Chunk481.xml" /><stem n="brownian" chunk="Search_Chunk481.xml" /><stem n="octav" chunk="Search_Chunk481.xml" /><stem n="barrel" chunk="Search_Chunk481.xml" /><stem n="pin-cushion" chunk="Search_Chunk481.xml" /><stem n="cushion" chunk="Search_Chunk481.xml" /><stem n="squish" chunk="Search_Chunk481.xml" /><stem n="ball" chunk="Search_Chunk481.xml" /><stem n="p2" chunk="Search_Chunk481.xml" /><stem n="p7" chunk="Search_Chunk481.xml" /><stem n="src0" chunk="Search_Chunk481.xml" /><stem n="scr1" chunk="Search_Chunk481.xml" /><stem n="udim" chunk="Search_Chunk481.xml" /><stem n="unlabel" chunk="Search_Chunk481.xml" /><stem n="chair" chunk="Search_Chunk481.xml" /><stem n="seat" chunk="Search_Chunk481.xml" /><stem n="illumin" chunk="Search_Chunk481.xml" /><stem n="viewpoint" chunk="Search_Chunk481.xml" /><stem n="shinier" chunk="Search_Chunk481.xml" /><stem n="shini" chunk="Search_Chunk481.xml" /><stem n="mapsh" chunk="Search_Chunk481.xml" /><stem n="emit" chunk="Search_Chunk481.xml" /><stem n="lamp" chunk="Search_Chunk482.xml" /><stem n="non-illumin" chunk="Search_Chunk482.xml" /><stem n="mapd" chunk="Search_Chunk482.xml" /><stem n="mape" chunk="Search_Chunk482.xml" /><stem n="minshini" chunk="Search_Chunk482.xml" /><stem n="maxshini" chunk="Search_Chunk482.xml" /><stem n="mergemat" chunk="Search_Chunk482.xml" /><stem n="project3d" chunk="Search_Chunk482.xml" /><stem n="alay" chunk="Search_Chunk482.xml" /><stem n="blendmat" chunk="Search_Chunk482.xml" /><stem n="fillmat" chunk="Search_Chunk482.xml" /><stem n="uvproject" chunk="Search_Chunk482.xml" /><stem n="footbal" chunk="Search_Chunk482.xml" /><stem n="planet" chunk="Search_Chunk482.xml" /><stem n="spheric" chunk="Search_Chunk482.xml" /><stem n="yz" chunk="Search_Chunk482.xml" /><stem n="zx" chunk="Search_Chunk482.xml" /><stem n="furthest" chunk="Search_Chunk482.xml" /><stem n="frustum" chunk="Search_Chunk482.xml" /><stem n="cull" chunk="Search_Chunk482.xml" /><stem n="self" chunk="Search_Chunk482.xml" /><stem n="1001" chunk="Search_Chunk482.xml" /><stem n="1003" chunk="Search_Chunk482.xml" /><stem n="1011" chunk="Search_Chunk482.xml" /><stem n="tif" chunk="Search_Chunk482.xml" /><stem n="1002" chunk="Search_Chunk482.xml" /><stem n="1004" chunk="Search_Chunk482.xml" /><stem n="1005" chunk="Search_Chunk482.xml" /><stem n="notif" chunk="Search_Chunk482.xml" /><stem n="uvtil" chunk="Search_Chunk482.xml" /><stem n="multitextur" chunk="Search_Chunk482.xml" /><stem n="iop" chunk="Search_Chunk482.xml" /><stem n="multi-textur" chunk="Search_Chunk482.xml" /><stem n="pars" chunk="Search_Chunk482.xml" /><stem n="push" chunk="Search_Chunk482.xml" /><stem n="directlight" chunk="Search_Chunk482.xml" /><stem n="spotlight" chunk="Search_Chunk482.xml" /><stem n="relight" chunk="Search_Chunk482.xml" /><stem n="parallel" chunk="Search_Chunk482.xml" /><stem n="sun" chunk="Search_Chunk483.xml" /><stem n="sunlight" chunk="Search_Chunk483.xml" /><stem n="moonlight" chunk="Search_Chunk483.xml" /><stem n="bulb" chunk="Search_Chunk483.xml" /><stem n="candl" chunk="Search_Chunk483.xml" /><stem n="oint" chunk="Search_Chunk483.xml" /><stem n="exponenti" chunk="Search_Chunk483.xml" /><stem n="cone-shap" chunk="Search_Chunk483.xml" /><stem n="cone" chunk="Search_Chunk483.xml" /><stem n="penumbra" chunk="Search_Chunk483.xml" /><stem n="real-world" chunk="Search_Chunk483.xml" /><stem n="image-bas" chunk="Search_Chunk483.xml" /><stem n="hdr" chunk="Search_Chunk483.xml" /><stem n="realiz" chunk="Search_Chunk483.xml" /><stem n="wherev" chunk="Search_Chunk483.xml" /><stem n="raytrac" chunk="Search_Chunk483.xml" /><stem n="obstacl" chunk="Search_Chunk483.xml" /><stem n="non-opaqu" chunk="Search_Chunk483.xml" /><stem n="leaf" chunk="Search_Chunk483.xml" /><stem n="depthmap" chunk="Search_Chunk483.xml" /><stem n="crunchi" chunk="Search_Chunk483.xml" /><stem n="800" chunk="Search_Chunk483.xml" /><stem n="7400" chunk="Search_Chunk483.xml" /><stem n="dotti" chunk="Search_Chunk483.xml" /><stem n="percentage-clos" chunk="Search_Chunk483.xml" /><stem n="pcf" chunk="Search_Chunk483.xml" /><stem n="perceptu" chunk="Search_Chunk483.xml" /><stem n="self-shadow" chunk="Search_Chunk483.xml" /><stem n="proport" chunk="Search_Chunk483.xml" /><stem n="shallow" chunk="Search_Chunk483.xml" /><stem n="steep" chunk="Search_Chunk483.xml" /><stem n="shadow-cast" chunk="Search_Chunk483.xml" /><stem n="perpendicular" chunk="Search_Chunk483.xml" /><stem n="lookat" chunk="Search_Chunk483.xml" /><stem n="constitut" chunk="Search_Chunk483.xml" /><stem n="bypass" chunk="Search_Chunk483.xml" /><stem n="ambient" chunk="Search_Chunk483.xml" /><stem n="import_bouj" chunk="Search_Chunk483.xml" /><stem n="rearward" chunk="Search_Chunk483.xml" /><stem n="front-project" chunk="Search_Chunk483.xml" /><stem n="gather" chunk="Search_Chunk483.xml" /><stem n="scanner" chunk="Search_Chunk483.xml" /><stem n="pitch" chunk="Search_Chunk483.xml" /><stem n="horiz" chunk="Search_Chunk483.xml" /><stem n="36" chunk="Search_Chunk483.xml" /><stem n="synthey" chunk="Search_Chunk483.xml" /><stem n="realviz" chunk="Search_Chunk483.xml" /><stem n="vert" chunk="Search_Chunk483.xml" /><stem n="shift+2" chunk="Search_Chunk483.xml" /><stem n="transformgeo" chunk="Search_Chunk483.xml" /><stem n="x-axi" chunk="Search_Chunk483.xml" /><stem n="y-axi" chunk="Search_Chunk483.xml" /><stem n="z-axi" chunk="Search_Chunk483.xml" /><stem n="ring" chunk="Search_Chunk483.xml" /><stem n="null" chunk="Search_Chunk483.xml" /><stem n="nest" chunk="Search_Chunk483.xml" /><stem n="axis3" chunk="Search_Chunk484.xml" /><stem n="axis2" chunk="Search_Chunk484.xml" /><stem n="axis1" chunk="Search_Chunk484.xml" /><stem n="+z" chunk="Search_Chunk484.xml" /><stem n="+y" chunk="Search_Chunk484.xml" /><stem n="+x" chunk="Search_Chunk484.xml" /><stem n="-z" chunk="Search_Chunk484.xml" /><stem n="-x" chunk="Search_Chunk484.xml" /><stem n="quaternion" chunk="Search_Chunk484.xml" /><stem n="errat" chunk="Search_Chunk484.xml" /><stem n="cartesian" chunk="Search_Chunk484.xml" /><stem n="3d-equal" chunk="Search_Chunk484.xml" /><stem n="chan" chunk="Search_Chunk484.xml" /><stem n="realism" chunk="Search_Chunk484.xml" /><stem n="slowest" chunk="Search_Chunk484.xml" /><stem n="multisampl" chunk="Search_Chunk484.xml" /><stem n="regularli" chunk="Search_Chunk484.xml" /><stem n="antialias" chunk="Search_Chunk484.xml" /><stem n="multi-sampl" chunk="Search_Chunk484.xml" /><stem n="stochast" chunk="Search_Chunk484.xml" /><stem n="robert" chunk="Search_Chunk484.xml" /><stem n="cook" chunk="Search_Chunk484.xml" /><stem n="acm" chunk="Search_Chunk484.xml" /><stem n="transact" chunk="Search_Chunk484.xml" /><stem n="1996" chunk="Search_Chunk484.xml" /><stem n="motionblur3d" chunk="Search_Chunk484.xml" /><stem n="nearli" chunk="Search_Chunk484.xml" /><stem n="two-channel" chunk="Search_Chunk484.xml" /><stem n="pre-" chunk="Search_Chunk484.xml" /><stem n="veloc" chunk="Search_Chunk484.xml" /><stem n="abrupt" chunk="Search_Chunk485.xml" /><stem n="_fpc" chunk="Search_Chunk485.xml" /><stem n="storag" chunk="Search_Chunk485.xml" /><stem n="hdf" chunk="Search_Chunk485.xml" /><stem n="ogawa" chunk="Search_Chunk485.xml" /><stem n="z-buffer" chunk="Search_Chunk485.xml" /><stem n="texel" chunk="Search_Chunk485.xml" /><stem n="mip" chunk="Search_Chunk485.xml" /><stem n="blocki" chunk="Search_Chunk485.xml" /><stem n="mipmap" chunk="Search_Chunk485.xml" /><stem n="bilinearli" chunk="Search_Chunk485.xml" /><stem n="anisotrop" chunk="Search_Chunk485.xml" /><stem n="lobe" chunk="Search_Chunk485.xml" /><stem n="interpolatori" chunk="Search_Chunk485.xml" /><stem n="z-blend" chunk="Search_Chunk485.xml" /><stem n="360-degre" chunk="Search_Chunk485.xml" /><stem n="recurs" chunk="Search_Chunk485.xml" /><stem n="screen-spac" chunk="Search_Chunk485.xml" /><stem n="mislead" chunk="Search_Chunk485.xml" /><stem n="stereo-specif" chunk="Search_Chunk485.xml" /><stem n="re-adjust" chunk="Search_Chunk485.xml" /><stem n="converg" chunk="Search_Chunk485.xml" /><stem n="lefteyefilenam" chunk="Search_Chunk485.xml" /><stem n="testleft" chunk="Search_Chunk485.xml" /><stem n="testmiddl" chunk="Search_Chunk485.xml" /><stem n="testright" chunk="Search_Chunk485.xml" /><stem n="mydirectori" chunk="Search_Chunk485.xml" /><stem n="pathnam" chunk="Search_Chunk485.xml" /><stem n="semicolon" chunk="Search_Chunk485.xml" /><stem n="view1" chunk="Search_Chunk485.xml" /><stem n="view2" chunk="Search_Chunk485.xml" /><stem n="splitandjoin" chunk="Search_Chunk485.xml" /><stem n="2-color" chunk="Search_Chunk485.xml" /><stem n="amtcolor" chunk="Search_Chunk485.xml" /><stem n="viewerprocess" chunk="Search_Chunk485.xml" /><stem n="sight" chunk="Search_Chunk485.xml" /><stem n="perceiv" chunk="Search_Chunk485.xml" /><stem n="previ" chunk="Search_Chunk485.xml" /><stem n="wing" chunk="Search_Chunk485.xml" /><stem n="leopard" chunk="Search_Chunk485.xml" /><stem n="non-stereo" chunk="Search_Chunk485.xml" /><stem n="1-35" chunk="Search_Chunk485.xml" /><stem n="1-8" chunk="Search_Chunk485.xml" /><stem n="12-15" chunk="Search_Chunk485.xml" /><stem n="capit" chunk="Search_Chunk485.xml" /><stem n="lower-cas" chunk="Search_Chunk485.xml" /><stem n="per-pixel" chunk="Search_Chunk485.xml" /><stem n="camera-rel" chunk="Search_Chunk485.xml" /><stem n="deepread" chunk="Search_Chunk485.xml" /><stem n="deepmerg" chunk="Search_Chunk485.xml" /><stem n="deepholdout" chunk="Search_Chunk485.xml" /><stem n="flatten" chunk="Search_Chunk485.xml" /><stem n="deepsampl" chunk="Search_Chunk485.xml" /><stem n="deepcrop" chunk="Search_Chunk485.xml" /><stem n="deepreformat" chunk="Search_Chunk485.xml" /><stem n="deeptransform" chunk="Search_Chunk485.xml" /><stem n="deepfromfram" chunk="Search_Chunk485.xml" /><stem n="deepfromimag" chunk="Search_Chunk485.xml" /><stem n="deeprecolor" chunk="Search_Chunk485.xml" /><stem n="dtex" chunk="Search_Chunk485.xml" /><stem n="pixar" chunk="Search_Chunk485.xml" /><stem n="photorealist" chunk="Search_Chunk486.xml" /><stem n="subimag" chunk="Search_Chunk486.xml" /><stem n="deepopac" chunk="Search_Chunk486.xml" /><stem n="deepshad" chunk="Search_Chunk486.xml" /><stem n="point-sampl" chunk="Search_Chunk486.xml" /><stem n="recolor" chunk="Search_Chunk486.xml" /><stem n="1-9" chunk="Search_Chunk486.xml" /><stem n="deeptoimag" chunk="Search_Chunk486.xml" /><stem n="zmin" chunk="Search_Chunk486.xml" /><stem n="zmax" chunk="Search_Chunk486.xml" /><stem n="fog" chunk="Search_Chunk486.xml" /><stem n="amongst" chunk="Search_Chunk486.xml" /><stem n="remultipli" chunk="Search_Chunk486.xml" /><stem n="deeptopoint" chunk="Search_Chunk486.xml" /><stem n="inaccuraci" chunk="Search_Chunk486.xml" /><stem n="incorrectli" chunk="Search_Chunk486.xml" /><stem n="0000001" chunk="Search_Chunk486.xml" /><stem n="volumetr" chunk="Search_Chunk486.xml" /><stem n="005" chunk="Search_Chunk486.xml" /><stem n="deepcolorcorrect" chunk="Search_Chunk486.xml" /><stem n="limit_z" chunk="Search_Chunk486.xml" /><stem n="zmap" chunk="Search_Chunk486.xml" /><stem n="trapezoid" chunk="Search_Chunk486.xml" /><stem n="delimit" chunk="Search_Chunk486.xml" /><stem n="deepexpress" chunk="Search_Chunk486.xml" /><stem n="chans0" chunk="Search_Chunk486.xml" /><stem n="chans3" chunk="Search_Chunk486.xml" /><stem n="arbitrari" chunk="Search_Chunk486.xml" /><stem n="znear" chunk="Search_Chunk486.xml" /><stem n="zfar" chunk="Search_Chunk486.xml" /><stem n="zrang" chunk="Search_Chunk486.xml" /><stem n="flop" chunk="Search_Chunk486.xml" /><stem n="zscale" chunk="Search_Chunk486.xml" /><stem n="regul" chunk="Search_Chunk486.xml" /><stem n="deepwrit" chunk="Search_Chunk486.xml" /><stem n="datatyp" chunk="Search_Chunk486.xml" /><stem n="edgecod" chunk="Search_Chunk486.xml" /><stem n="inspect" chunk="Search_Chunk486.xml" /><stem n="placehold" chunk="Search_Chunk486.xml" /><stem n="meta" chunk="Search_Chunk486.xml" /><stem n="image+meta" chunk="Search_Chunk486.xml" /><stem n="meta+imag" chunk="Search_Chunk486.xml" /><stem n="97" chunk="Search_Chunk486.xml" /><stem n="ff" chunk="Search_Chunk486.xml" /><stem n="non-drop" chunk="Search_Chunk486.xml" /><stem n="startcod" chunk="Search_Chunk486.xml" /><stem n="wildcard" chunk="Search_Chunk486.xml" /><stem n="-s" chunk="Search_Chunk486.xml" /><stem n="-e" chunk="Search_Chunk486.xml" /><stem n="sound" chunk="Search_Chunk486.xml" /><stem n="wav" chunk="Search_Chunk486.xml" /><stem n="aiff" chunk="Search_Chunk486.xml" /><stem n="listen" chunk="Search_Chunk486.xml" /><stem n="ratesourc" chunk="Search_Chunk486.xml" /><stem n="superior" chunk="Search_Chunk486.xml" /><stem n="slowdown" chunk="Search_Chunk486.xml" /><stem n="engin" chunk="Search_Chunk486.xml" /><stem n="multi-thread" chunk="Search_Chunk486.xml" /><stem n="oppos" chunk="Search_Chunk486.xml" /><stem n="buffer-bas" chunk="Search_Chunk486.xml" /><stem n="peer" chunk="Search_Chunk486.xml" /><stem n="frompreview" chunk="Search_Chunk486.xml" /><stem n="signal" chunk="Search_Chunk486.xml" /><stem n="ram-buff" chunk="Search_Chunk486.xml" /><stem n="trade-off" chunk="Search_Chunk486.xml" /><stem n="gigabyt" chunk="Search_Chunk486.xml" /><stem n="framecycl" chunk="Search_Chunk486.xml" /><stem n="former" chunk="Search_Chunk486.xml" /><stem n="playblast" chunk="Search_Chunk486.xml" /><stem n="customis" chunk="Search_Chunk486.xml" /><stem n="forget" chunk="Search_Chunk486.xml" /><stem n="printf" chunk="Search_Chunk486.xml" /><stem n="hash" chunk="Search_Chunk486.xml" /><stem n="4d" chunk="Search_Chunk486.xml" /><stem n="phrase" chunk="Search_Chunk486.xml" /><stem n="overflow" chunk="Search_Chunk486.xml" /><stem n="unzoom" chunk="Search_Chunk487.xml" /><stem n="unpan" chunk="Search_Chunk487.xml" /><stem n="640x512" chunk="Search_Chunk487.xml" /><stem n="640x448" chunk="Search_Chunk487.xml" /><stem n="ntsc" chunk="Search_Chunk487.xml" /><stem n="rescal" chunk="Search_Chunk487.xml" /><stem n="cinema" chunk="Search_Chunk487.xml" /><stem n="verifi" chunk="Search_Chunk487.xml" /><stem n="concurr" chunk="Search_Chunk487.xml" /><stem n="customproject" chunk="Search_Chunk487.xml" /><stem n="resolutionoutput" chunk="Search_Chunk487.xml" /><stem n="formatformat" chunk="Search_Chunk487.xml" /><stem n="customrend" chunk="Search_Chunk487.xml" /><stem n="resolutionproxi" chunk="Search_Chunk487.xml" /><stem n="cmd+p" chunk="Search_Chunk487.xml" /><stem n="gave" chunk="Search_Chunk487.xml" /><stem n="1-100" chunk="Search_Chunk487.xml" /><stem n="22-25" chunk="Search_Chunk487.xml" /><stem n="ftiff" chunk="Search_Chunk487.xml" /><stem n="f5" chunk="Search_Chunk487.xml" /><stem n="occupi" chunk="Search_Chunk487.xml" /><stem n="interfer" chunk="Search_Chunk487.xml" /><stem n="4444" chunk="Search_Chunk487.xml" /><stem n="playabl" chunk="Search_Chunk487.xml" /><stem n="840" chunk="Search_Chunk487.xml" /><stem n="decompress" chunk="Search_Chunk487.xml" /><stem n="422" chunk="Search_Chunk487.xml" /><stem n="444" chunk="Search_Chunk487.xml" /><stem n="sub-sampl" chunk="Search_Chunk487.xml" /><stem n="headroom" chunk="Search_Chunk487.xml" /><stem n="4cc" chunk="Search_Chunk487.xml" /><stem n="colr" chunk="Search_Chunk487.xml" /><stem n="bitrat" chunk="Search_Chunk487.xml" /><stem n="mpeg-4" chunk="Search_Chunk487.xml" /><stem n="gop" chunk="Search_Chunk487.xml" /><stem n="caution" chunk="Search_Chunk487.xml" /><stem n="impos" chunk="Search_Chunk487.xml" /><stem n="viru" chunk="Search_Chunk487.xml" /><stem n="workaround" chunk="Search_Chunk487.xml" /><stem n="interleav" chunk="Search_Chunk487.xml" /><stem n="&lt;prefix&gt;" chunk="Search_Chunk487.xml" /><stem n="&lt;path&gt;" chunk="Search_Chunk487.xml" /><stem n="&lt;name&gt;" chunk="Search_Chunk487.xml" /><stem n="&lt;frame" chunk="Search_Chunk487.xml" /><stem n="variable&gt;" chunk="Search_Chunk487.xml" /><stem n="&lt;extension&gt;" chunk="Search_Chunk487.xml" /><stem n="two-digit" chunk="Search_Chunk487.xml" /><stem n="three-digit" chunk="Search_Chunk487.xml" /><stem n="five-digit" chunk="Search_Chunk487.xml" /><stem n="tiff16" chunk="Search_Chunk487.xml" /><stem n="final_comp_" chunk="Search_Chunk487.xml" /><stem n="frame-499" chunk="Search_Chunk487.xml" /><stem n="501" chunk="Search_Chunk487.xml" /><stem n="0100" chunk="Search_Chunk487.xml" /><stem n="-499" chunk="Search_Chunk487.xml" /><stem n="b1c9c0aff2012a8" chunk="Search_Chunk487.xml" /><stem n="-licens" chunk="Search_Chunk487.xml" /><stem n="retri" chunk="Search_Chunk487.xml" /><stem n="full-resolut" chunk="Search_Chunk487.xml" /><stem n="onscreen" chunk="Search_Chunk487.xml" /><stem n="bottleneck" chunk="Search_Chunk487.xml" /><stem n="spent" chunk="Search_Chunk487.xml" /><stem n="dev" chunk="Search_Chunk487.xml" /><stem n="-p" chunk="Search_Chunk487.xml" /><stem n="pf" chunk="Search_Chunk487.xml" /><stem n="-pf" chunk="Search_Chunk487.xml" /><stem n="overhead" chunk="Search_Chunk487.xml" /><stem n="cumul" chunk="Search_Chunk487.xml" /><stem n="startperformancetim" chunk="Search_Chunk487.xml" /><stem n="nuke9" chunk="Search_Chunk487.xml" /><stem n="0v1" chunk="Search_Chunk487.xml" /><stem n="resetperformancetim" chunk="Search_Chunk487.xml" /><stem n="timer" chunk="Search_Chunk487.xml" /><stem n="microsecond" chunk="Search_Chunk487.xml" /><stem n="aggreg" chunk="Search_Chunk487.xml" /><stem n="wall" chunk="Search_Chunk487.xml" /><stem n="perhap" chunk="Search_Chunk487.xml" /><stem n="op" chunk="Search_Chunk487.xml" /><stem n="terminolog" chunk="Search_Chunk487.xml" /><stem n="stopperformancetim" chunk="Search_Chunk487.xml" /><stem n="&lt;file" chunk="Search_Chunk487.xml" /><stem n="name&gt;" chunk="Search_Chunk487.xml" /><stem n="profiletest" chunk="Search_Chunk487.xml" /><stem n="getenv" chunk="Search_Chunk487.xml" /><stem n="alongsid" chunk="Search_Chunk487.xml" /><stem n="case-insensit" chunk="Search_Chunk487.xml" /><stem n="insensit" chunk="Search_Chunk487.xml" /><stem n="whitespac" chunk="Search_Chunk487.xml" /><stem n="layer-up" chunk="Search_Chunk487.xml" /><stem n="ungroup" chunk="Search_Chunk487.xml" /><stem n="copy-past" chunk="Search_Chunk487.xml" /><stem n="note&lt;" chunk="Search_Chunk487.xml" /><stem n="ital" chunk="Search_Chunk487.xml" /><stem n="&lt;i&gt;mi" chunk="Search_Chunk487.xml" /><stem n="i&gt;" chunk="Search_Chunk487.xml" /><stem n="firstli" chunk="Search_Chunk487.xml" /><stem n="secondli" chunk="Search_Chunk487.xml" /><stem n="collabor" chunk="Search_Chunk487.xml" /><stem n="multi-lay" chunk="Search_Chunk487.xml" /><stem n="precomp1_v01" chunk="Search_Chunk487.xml" /><stem n="precomp1_" chunk="Search_Chunk487.xml" /><stem n="precomp1_v01_" chunk="Search_Chunk487.xml" /><stem n="write1" chunk="Search_Chunk487.xml" /><stem n="successfulli" chunk="Search_Chunk487.xml" /><stem n="revis" chunk="Search_Chunk487.xml" /><stem n="precomp1_v02_" chunk="Search_Chunk487.xml" /><stem n="precomp1_v02" chunk="Search_Chunk487.xml" /><stem n="td" chunk="Search_Chunk487.xml" /><stem n="cg_v01" chunk="Search_Chunk487.xml" /><stem n="supervisor" chunk="Search_Chunk487.xml" /><stem n="ofx" chunk="Search_Chunk487.xml" /><stem n="indent" chunk="Search_Chunk488.xml" /><stem n="inter" chunk="Search_Chunk488.xml" /><stem n="pwd" chunk="Search_Chunk488.xml" /><stem n="ls" chunk="Search_Chunk488.xml" /><stem n="emul" chunk="Search_Chunk488.xml" /><stem n="doskei" chunk="Search_Chunk488.xml" /><stem n="alia" chunk="Search_Chunk488.xml" /><stem n="echo" chunk="Search_Chunk488.xml" /><stem n="$shell" chunk="Search_Chunk488.xml" /><stem n="bash" chunk="Search_Chunk488.xml" /><stem n="tcsh" chunk="Search_Chunk488.xml" /><stem n="cshrc" chunk="Search_Chunk488.xml" /><stem n="bashrc" chunk="Search_Chunk488.xml" /><stem n="-version" chunk="Search_Chunk488.xml" /><stem n="-help" chunk="Search_Chunk488.xml" /><stem n="-a" chunk="Search_Chunk488.xml" /><stem n="-b" chunk="Search_Chunk488.xml" /><stem n="-c" chunk="Search_Chunk488.xml" /><stem n="kilobyt" chunk="Search_Chunk488.xml" /><stem n="megabyt" chunk="Search_Chunk488.xml" /><stem n="-d" chunk="Search_Chunk488.xml" /><stem n="&lt;x" chunk="Search_Chunk488.xml" /><stem n="1-10x2" chunk="Search_Chunk488.xml" /><stem n="10x2" chunk="Search_Chunk488.xml" /><stem n="30-50x2" chunk="Search_Chunk488.xml" /><stem n="50x2" chunk="Search_Chunk488.xml" /><stem n="-i" chunk="Search_Chunk488.xml" /><stem n="rlm" chunk="Search_Chunk488.xml" /><stem n="nuke_r" chunk="Search_Chunk488.xml" /><stem n="ix" chunk="Search_Chunk488.xml" /><stem n="-ix" chunk="Search_Chunk488.xml" /><stem n="migrat" chunk="Search_Chunk488.xml" /><stem n="flexlm" chunk="Search_Chunk488.xml" /><stem n="-l" chunk="Search_Chunk488.xml" /><stem n="-m" chunk="Search_Chunk488.xml" /><stem n="multigpu" chunk="Search_Chunk488.xml" /><stem n="--multigpu" chunk="Search_Chunk488.xml" /><stem n="-n" chunk="Search_Chunk488.xml" /><stem n="complimentari" chunk="Search_Chunk488.xml" /><stem n="metric" chunk="Search_Chunk488.xml" /><stem n="&lt;filename&gt;" chunk="Search_Chunk488.xml" /><stem n="--paus" chunk="Search_Chunk488.xml" /><stem n="--prioriti" chunk="Search_Chunk488.xml" /><stem n="python-no-root-knobdefault" chunk="Search_Chunk488.xml" /><stem n="--python-no-root-knobdefault" chunk="Search_Chunk488.xml" /><stem n="python-no" chunk="Search_Chunk488.xml" /><stem n="python-no-root" chunk="Search_Chunk488.xml" /><stem n="no-root" chunk="Search_Chunk488.xml" /><stem n="no-root-knobdefault" chunk="Search_Chunk488.xml" /><stem n="root-knobdefault" chunk="Search_Chunk488.xml" /><stem n="-q" chunk="Search_Chunk488.xml" /><stem n="quiet" chunk="Search_Chunk488.xml" /><stem n="--remap" chunk="Search_Chunk488.xml" /><stem n="comma-separ" chunk="Search_Chunk488.xml" /><stem n="anotherpath" chunk="Search_Chunk488.xml" /><stem n="stach" chunk="Search_Chunk488.xml" /><stem n="16777216" chunk="Search_Chunk488.xml" /><stem n="1048576" chunk="Search_Chunk488.xml" /><stem n="--safe" chunk="Search_Chunk488.xml" /><stem n="~" chunk="Search_Chunk488.xml" /><stem n="$nuke_path" chunk="Search_Chunk488.xml" /><stem n="sro" chunk="Search_Chunk488.xml" /><stem n="--sro" chunk="Search_Chunk488.xml" /><stem n="&gt;&gt;&gt;" chunk="Search_Chunk488.xml" /><stem n="ti" chunk="Search_Chunk488.xml" /><stem n="-ti" chunk="Search_Chunk488.xml" /><stem n="combo" chunk="Search_Chunk488.xml" /><stem n="tg" chunk="Search_Chunk488.xml" /><stem n="--tg" chunk="Search_Chunk488.xml" /><stem n="qapplic" chunk="Search_Chunk488.xml" /><stem n="pysid" chunk="Search_Chunk488.xml" /><stem n="pyqt" chunk="Search_Chunk488.xml" /><stem n="-v" chunk="Search_Chunk488.xml" /><stem n="verbos" chunk="Search_Chunk488.xml" /><stem n="explicit" chunk="Search_Chunk488.xml" /><stem n="--view" chunk="Search_Chunk488.xml" /><stem n="--version" chunk="Search_Chunk488.xml" /><stem n="xi" chunk="Search_Chunk488.xml" /><stem n="-xi" chunk="Search_Chunk488.xml" /><stem n="--" chunk="Search_Chunk488.xml" /><stem n="stdin" chunk="Search_Chunk488.xml" /><stem n="&lt;switches&gt;" chunk="Search_Chunk488.xml" /><stem n="&lt;script&gt;" chunk="Search_Chunk488.xml" /><stem n="&lt;argv&gt;" chunk="Search_Chunk488.xml" /><stem n="&lt;ranges&gt;" chunk="Search_Chunk488.xml" /><stem n="crazi" chunk="Search_Chunk488.xml" /><stem n="-myscript.nk," chunk="Search_Chunk488.xml" /><stem n="hyphen" chunk="Search_Chunk488.xml" /><stem n="-myscript.nk" chunk="Search_Chunk488.xml" /><stem n="polarbear" chunk="Search_Chunk488.xml" /><stem n="whiteflow" chunk="Search_Chunk488.xml" /><stem n="taxi" chunk="Search_Chunk488.xml" /><stem n="0050" chunk="Search_Chunk488.xml" /><stem n="30-50" chunk="Search_Chunk488.xml" /><stem n="10-20" chunk="Search_Chunk488.xml" /><stem n="34" chunk="Search_Chunk488.xml" /><stem n="34-60" chunk="Search_Chunk488.xml" /><stem n="1-50x10" chunk="Search_Chunk488.xml" /><stem n="50x10" chunk="Search_Chunk488.xml" /><stem n="41" chunk="Search_Chunk488.xml" /><stem n="writeblur" chunk="Search_Chunk488.xml" /><stem n="writeinvert" chunk="Search_Chunk488.xml" /><stem n="1-20" chunk="Search_Chunk488.xml" /><stem n="argv" chunk="Search_Chunk488.xml" /><stem n="mycheck" chunk="Search_Chunk488.xml" /><stem n="non-numer" chunk="Search_Chunk488.xml" /><stem n="jpeg" chunk="Search_Chunk488.xml" /><stem n="myimag" chunk="Search_Chunk488.xml" /><stem n="setinput" chunk="Search_Chunk488.xml" /><stem n="tediou" chunk="Search_Chunk488.xml" /><stem n="imageconvert" chunk="Search_Chunk488.xml" /><stem n="sy" chunk="Search_Chunk488.xml" /><stem n="optpars" chunk="Search_Chunk488.xml" /><stem n="imageconvertwitharg" chunk="Search_Chunk488.xml" /><stem n="privileg" chunk="Search_Chunk488.xml" /><stem n="launchd" chunk="Search_Chunk488.xml" /><stem n="conf" chunk="Search_Chunk488.xml" /><stem n="setenv" chunk="Search_Chunk488.xml" /><stem n="&lt;variable&gt;" chunk="Search_Chunk488.xml" /><stem n="&lt;value&gt;" chunk="Search_Chunk488.xml" /><stem n="ofx_plugin_path" chunk="Search_Chunk488.xml" /><stem n="shareddisk" chunk="Search_Chunk488.xml" /><stem n="nano" chunk="Search_Chunk488.xml" /><stem n="permiss" chunk="Search_Chunk488.xml" /><stem n="launchctl" chunk="Search_Chunk489.xml" /><stem n="csh" chunk="Search_Chunk489.xml" /><stem n="tcshrc" chunk="Search_Chunk489.xml" /><stem n="ksh" chunk="Search_Chunk489.xml" /><stem n="kshrc" chunk="Search_Chunk489.xml" /><stem n="$variabl" chunk="Search_Chunk489.xml" /><stem n="$nuke_disk_cach" chunk="Search_Chunk489.xml" /><stem n="printenv" chunk="Search_Chunk489.xml" /><stem n="fn_crash_dump_path" chunk="Search_Chunk489.xml" /><stem n="fn_nuke_disable_tmplic_notify_dialog" chunk="Search_Chunk489.xml" /><stem n="fn_license_dialog_days_left_before_prompt" chunk="Search_Chunk489.xml" /><stem n="expiri" chunk="Search_Chunk489.xml" /><stem n="fn_nuke_disable_gpu_acceler" chunk="Search_Chunk489.xml" /><stem n="foundry_licens" chunk="Search_Chunk489.xml" /><stem n="plain" chunk="Search_Chunk489.xml" /><stem n="foundry_license_debug" chunk="Search_Chunk489.xml" /><stem n="foundry_license_fil" chunk="Search_Chunk489.xml" /><stem n="foundry_log_fil" chunk="Search_Chunk489.xml" /><stem n="logfil" chunk="Search_Chunk489.xml" /><stem n="foundry_log_level" chunk="Search_Chunk489.xml" /><stem n="frameserver_log_dir" chunk="Search_Chunk489.xml" /><stem n="hiero_disable_thumbnail" chunk="Search_Chunk489.xml" /><stem n="hiero_disable_thumbnails_cach" chunk="Search_Chunk489.xml" /><stem n="nuke_allow_gizmo_sav" chunk="Search_Chunk489.xml" /><stem n="nuke_debug_imagecach" chunk="Search_Chunk489.xml" /><stem n="nuke_debug_memori" chunk="Search_Chunk489.xml" /><stem n="924" chunk="Search_Chunk489.xml" /><stem n="1mb" chunk="Search_Chunk489.xml" /><stem n="nuke_exr_temp_dir" chunk="Search_Chunk489.xml" /><stem n="nuke_ignore_roto_incompat" chunk="Search_Chunk489.xml" /><stem n="nuke_interact" chunk="Search_Chunk489.xml" /><stem n="checks-out" chunk="Search_Chunk489.xml" /><stem n="nuke_mov64reader_en" chunk="Search_Chunk489.xml" /><stem n="nuke_no_crash_prompt" chunk="Search_Chunk489.xml" /><stem n="nuke_no_viewer_gpu" chunk="Search_Chunk489.xml" /><stem n="nuke_windowmanager_debug" chunk="Search_Chunk489.xml" /><stem n="exportingto" chunk="Search_Chunk489.xml" /><stem n="nukescript" chunk="Search_Chunk489.xml" /><stem n="&lt;startup_python_path&gt;" chunk="Search_Chunk489.xml" /><stem n="breakdown" chunk="Search_Chunk489.xml" /><stem n="__init__" chunk="Search_Chunk489.xml" /><stem n="namespac" chunk="Search_Chunk489.xml" /><stem n="plugin_find" chunk="Search_Chunk489.xml" /><stem n="project_dir" chunk="Search_Chunk489.xml" /><stem n="studio_dir" chunk="Search_Chunk489.xml" /><stem n="company_dir" chunk="Search_Chunk489.xml" /><stem n="nuke_dir" chunk="Search_Chunk489.xml" /><stem n="discov" chunk="Search_Chunk489.xml" /><stem n="addfavoritedir" chunk="Search_Chunk489.xml" /><stem n="displaynam" chunk="Search_Chunk489.xml" /><stem n="xpm" chunk="Search_Chunk489.xml" /><stem n="disasterflickstor" chunk="Search_Chunk489.xml" /><stem n="invok" chunk="Search_Chunk489.xml" /><stem n="disasterflick" chunk="Search_Chunk489.xml" /><stem n="def" chunk="Search_Chunk489.xml" /><stem n="filenamefix" chunk="Search_Chunk489.xml" /><stem n="last_fram" chunk="Search_Chunk489.xml" /><stem n="mygizmo" chunk="Search_Chunk489.xml" /><stem n="&lt;install_directory&gt;" chunk="Search_Chunk489.xml" /><stem n="text2" chunk="Search_Chunk489.xml" /><stem n="toolbarnam" chunk="Search_Chunk489.xml" /><stem n="newmenu" chunk="Search_Chunk489.xml" /><stem n="pythoncod" chunk="Search_Chunk489.xml" /><stem n="iconnam" chunk="Search_Chunk489.xml" /><stem n="callabl" chunk="Search_Chunk489.xml" /><stem n="alt+a" chunk="Search_Chunk489.xml" /><stem n="cmd+a" chunk="Search_Chunk489.xml" /><stem n="shift+a" chunk="Search_Chunk489.xml" /><stem n="f1" chunk="Search_Chunk489.xml" /><stem n="^a" chunk="Search_Chunk489.xml" /><stem n="+a" chunk="Search_Chunk489.xml" /><stem n="parenthesi" chunk="Search_Chunk489.xml" /><stem n="neatli" chunk="Search_Chunk489.xml" /><stem n="_autoplac" chunk="Search_Chunk489.xml" /><stem n="selectednod" chunk="Search_Chunk489.xml" /><stem n="menubar" chunk="Search_Chunk489.xml" /><stem n="menutyp" chunk="Search_Chunk489.xml" /><stem n="addmenu" chunk="Search_Chunk489.xml" /><stem n="newitem" chunk="Search_Chunk489.xml" /><stem n="lambda" chunk="Search_Chunk489.xml" /><stem n="overwritten" chunk="Search_Chunk489.xml" /><stem n="user-cr" chunk="Search_Chunk489.xml" /><stem n="keyword" chunk="Search_Chunk489.xml" /><stem n="cue_rend" chunk="Search_Chunk489.xml" /><stem n="ctrl+r" chunk="Search_Chunk489.xml" /><stem n="imagewidth" chunk="Search_Chunk489.xml" /><stem n="imageheight" chunk="Search_Chunk489.xml" /><stem n="lowerleftcorn" chunk="Search_Chunk489.xml" /><stem n="lowerrightcorn" chunk="Search_Chunk489.xml" /><stem n="upperrightcorn" chunk="Search_Chunk489.xml" /><stem n="upperleftcorn" chunk="Search_Chunk489.xml" /><stem n="pixelaspectratio" chunk="Search_Chunk489.xml" /><stem n="uppperrightcorn" chunk="Search_Chunk489.xml" /><stem n="full_aperature_anamorph" chunk="Search_Chunk489.xml" /><stem n="1556" chunk="Search_Chunk489.xml" /><stem n="entireti" chunk="Search_Chunk489.xml" /><stem n="full_aperture_anamorph" chunk="Search_Chunk489.xml" /><stem n="tickl" chunk="Search_Chunk489.xml" /><stem n="technic" chunk="Search_Chunk489.xml" /><stem n="director" chunk="Search_Chunk489.xml" /><stem n="reus" chunk="Search_Chunk489.xml" /><stem n="macro" chunk="Search_Chunk489.xml" /><stem n="punctuat" chunk="Search_Chunk489.xml" /><stem n="&lt;b&gt;text&lt;" chunk="Search_Chunk489.xml" /><stem n="rectangle1" chunk="Search_Chunk489.xml" /><stem n="rectangle2" chunk="Search_Chunk489.xml" /><stem n="text1" chunk="Search_Chunk489.xml" /><stem n="switch1" chunk="Search_Chunk489.xml" /><stem n="group1" chunk="Search_Chunk489.xml" /><stem n="hidevers" chunk="Search_Chunk489.xml" /><stem n="unfinish" chunk="Search_Chunk489.xml" /><stem n="pulldown" chunk="Search_Chunk489.xml" /><stem n="versioncont" chunk="Search_Chunk489.xml" /><stem n="dylib" chunk="Search_Chunk489.xml" /><stem n="tild" chunk="Search_Chunk489.xml" /><stem n="rm" chunk="Search_Chunk489.xml" /><stem n="gamma1" chunk="Search_Chunk489.xml" /><stem n="gamma2" chunk="Search_Chunk489.xml" /><stem n="panalog" chunk="Search_Chunk489.xml" /><stem n="681" chunk="Search_Chunk489.xml" /><stem n="89" chunk="Search_Chunk489.xml" /><stem n="redlog" chunk="Search_Chunk489.xml" /><stem n="022" chunk="Search_Chunk489.xml" /><stem n="viperlog" chunk="Search_Chunk489.xml" /><stem n="alexav3logc" chunk="Search_Chunk489.xml" /><stem n="alexa" chunk="Search_Chunk489.xml" /><stem n="arri" chunk="Search_Chunk489.xml" /><stem n="43457" chunk="Search_Chunk489.xml" /><stem n="445" chunk="Search_Chunk489.xml" /><stem n="mid-grai" chunk="Search_Chunk489.xml" /><stem n="002" chunk="Search_Chunk489.xml" /><stem n="slog" chunk="Search_Chunk489.xml" /><stem n="s-log" chunk="Search_Chunk489.xml" /><stem n="whitepap" chunk="Search_Chunk489.xml" /><stem n="1237476953066" chunk="Search_Chunk489.xml" /><stem n="accid" chunk="Search_Chunk489.xml" /><stem n="non-view" chunk="Search_Chunk489.xml" /><stem n="truelight" chunk="Search_Chunk489.xml" /><stem n="8-bit-fil" chunk="Search_Chunk490.xml" /><stem n="bit-fil" chunk="Search_Chunk490.xml" /><stem n="floating-point" chunk="Search_Chunk490.xml" /><stem n="unlinear" chunk="Search_Chunk490.xml" /><stem n="electron" chunk="Search_Chunk490.xml" /><stem n="monitor-correct" chunk="Search_Chunk490.xml" /><stem n="project-wid" chunk="Search_Chunk490.xml" /><stem n="look-up" chunk="Search_Chunk490.xml" /><stem n="viewerprocess_1dlut" chunk="Search_Chunk490.xml" /><stem n="same-nam" chunk="Search_Chunk490.xml" /><stem n="viewerlut" chunk="Search_Chunk490.xml" /><stem n="rbg_onli" chunk="Search_Chunk490.xml" /><stem n="myprocess" chunk="Search_Chunk490.xml" /><stem n="unregist" chunk="Search_Chunk490.xml" /><stem n="primer" chunk="Search_Chunk490.xml" /><stem n="conclud" chunk="Search_Chunk490.xml" /><stem n="transform1" chunk="Search_Chunk490.xml" /><stem n="t-2" chunk="Search_Chunk490.xml" /><stem n="recap" chunk="Search_Chunk490.xml" /><stem n="promin" chunk="Search_Chunk490.xml" /><stem n="multi-lin" chunk="Search_Chunk490.xml" /><stem n="callback" chunk="Search_Chunk490.xml" /><stem n="execloc" chunk="Search_Chunk490.xml" /><stem n="-execloc" chunk="Search_Chunk490.xml" /><stem n="example2" chunk="Search_Chunk490.xml" /><stem n="ret" chunk="Search_Chunk490.xml" /><stem n="+example2" chunk="Search_Chunk490.xml" /><stem n="incorpor" chunk="Search_Chunk490.xml" /><stem n="-(transform1.translate.x)" chunk="Search_Chunk490.xml" /><stem n="fab" chunk="Search_Chunk490.xml" /><stem n="aco" chunk="Search_Chunk490.xml" /><stem n="cosin" chunk="Search_Chunk490.xml" /><stem n="cosh" chunk="Search_Chunk490.xml" /><stem n="asin" chunk="Search_Chunk490.xml" /><stem n="atan" chunk="Search_Chunk490.xml" /><stem n="sine" chunk="Search_Chunk490.xml" /><stem n="than1" chunk="Search_Chunk490.xml" /><stem n="sinh" chunk="Search_Chunk490.xml" /><stem n="pi" chunk="Search_Chunk490.xml" /><stem n="-pi/2" chunk="Search_Chunk490.xml" /><stem n="tan" chunk="Search_Chunk490.xml" /><stem n="tanh" chunk="Search_Chunk490.xml" /><stem n="atan2" chunk="Search_Chunk490.xml" /><stem n="ceil" chunk="Search_Chunk490.xml" /><stem n="floor" chunk="Search_Chunk490.xml" /><stem n="trunc" chunk="Search_Chunk490.xml" /><stem n="rint" chunk="Search_Chunk490.xml" /><stem n="radian" chunk="Search_Chunk490.xml" /><stem n="hyperbol" chunk="Search_Chunk490.xml" /><stem n="exp" chunk="Search_Chunk490.xml" /><stem n="log10" chunk="Search_Chunk490.xml" /><stem n="expon" chunk="Search_Chunk490.xml" /><stem n="mantissa" chunk="Search_Chunk490.xml" /><stem n="ldexp" chunk="Search_Chunk490.xml" /><stem n="lacunar" chunk="Search_Chunk490.xml" /><stem n="pow" chunk="Search_Chunk490.xml" /><stem n="fmod" chunk="Search_Chunk490.xml" /><stem n="quotient" chunk="Search_Chunk490.xml" /><stem n="from_byt" chunk="Search_Chunk490.xml" /><stem n="color_compon" chunk="Search_Chunk490.xml" /><stem n="to_srgb" chunk="Search_Chunk490.xml" /><stem n="to_rec709f" chunk="Search_Chunk490.xml" /><stem n="from_rec709f" chunk="Search_Chunk490.xml" /><stem n="form_srgb" chunk="Search_Chunk490.xml" /><stem n="from_srgb" chunk="Search_Chunk490.xml" /><stem n="hypotenus" chunk="Search_Chunk490.xml" /><stem n="right-angl" chunk="Search_Chunk491.xml" /><stem n="int" chunk="Search_Chunk491.xml" /><stem n="lerp" chunk="Search_Chunk491.xml" /><stem n="smoothstep" chunk="Search_Chunk491.xml" /><stem n="base-10" chunk="Search_Chunk491.xml" /><stem n="logb" chunk="Search_Chunk491.xml" /><stem n="centerd" chunk="Search_Chunk491.xml" /><stem n="-1.0" chunk="Search_Chunk491.xml" /><stem n="somewhat" chunk="Search_Chunk491.xml" /><stem n="141592654" chunk="Search_Chunk491.xml" /><stem n="pow2" chunk="Search_Chunk491.xml" /><stem n="invoc" chunk="Search_Chunk491.xml" /><stem n="non-neg" chunk="Search_Chunk491.xml" /><stem n="to_byt" chunk="Search_Chunk491.xml" /><stem n="lucanar" chunk="Search_Chunk491.xml" /><stem n="emb" chunk="Search_Chunk491.xml" /><stem n="brace" chunk="Search_Chunk491.xml" /><stem n="hello" chunk="Search_Chunk491.xml" /><stem n="exec" chunk="Search_Chunk491.xml" /><stem n="-exec&quot;)" chunk="Search_Chunk491.xml" /><stem n="quotat" chunk="Search_Chunk491.xml" /><stem n="auto-complet" chunk="Search_Chunk491.xml" /><stem n="surpris" chunk="Search_Chunk491.xml" /><stem n="invalid" chunk="Search_Chunk491.xml" /><stem n="re-ent" chunk="Search_Chunk491.xml" /><stem n="cmd+return" chunk="Search_Chunk491.xml" /><stem n="cmd+enter" chunk="Search_Chunk491.xml" /><stem n="okai" chunk="Search_Chunk491.xml" /><stem n="firstmodul" chunk="Search_Chunk491.xml" /><stem n="pythonpath" chunk="Search_Chunk491.xml" /><stem n="$pythonpath" chunk="Search_Chunk491.xml" /><stem n="installation-depend" chunk="Search_Chunk491.xml" /><stem n="grant" chunk="Search_Chunk491.xml" /><stem n="python-api" chunk="Search_Chunk491.xml" /><stem n="usrloc" chunk="Search_Chunk491.xml" /><stem n="pth" chunk="Search_Chunk491.xml" /><stem n="0v6" chunk="Search_Chunk491.xml" /><stem n="lib" chunk="Search_Chunk491.xml" /><stem n="setvalu" chunk="Search_Chunk491.xml" /><stem n="visit" chunk="Search_Chunk491.xml" /><stem n="offici" chunk="Search_Chunk491.xml" /><stem n="resort" chunk="Search_Chunk491.xml" /><stem n="modal" chunk="Search_Chunk491.xml" /><stem n="snapshot" chunk="Search_Chunk491.xml" /><stem n="dictat" chunk="Search_Chunk491.xml" /><stem n="approv" chunk="Search_Chunk491.xml" /><stem n="burn-in" chunk="Search_Chunk491.xml" /><stem n="sharedtag" chunk="Search_Chunk491.xml" /><stem n="addpluginpath" chunk="Search_Chunk491.xml" /><stem n="criteria" chunk="Search_Chunk491.xml" /><stem n="brief" chunk="Search_Chunk491.xml" /><stem n="aaf" chunk="Search_Chunk491.xml" /><stem n="multi-track" chunk="Search_Chunk491.xml" /><stem n="brand" chunk="Search_Chunk491.xml" /><stem n="fullpremium" chunk="Search_Chunk492.xml" /><stem n="sixteenthgood" chunk="Search_Chunk492.xml" /><stem n="lastli" chunk="Search_Chunk492.xml" /><stem n="roundtrip" chunk="Search_Chunk492.xml" /><stem n="popul" chunk="Search_Chunk492.xml" /><stem n="pre-ingest" chunk="Search_Chunk492.xml" /><stem n="candid" chunk="Search_Chunk492.xml" /><stem n="compound" chunk="Search_Chunk492.xml" /><stem n="umid" chunk="Search_Chunk492.xml" /><stem n="lack" chunk="Search_Chunk492.xml" /><stem n="redtapenam" chunk="Search_Chunk492.xml" /><stem n="red-styl" chunk="Search_Chunk492.xml" /><stem n="reel" chunk="Search_Chunk492.xml" /><stem n="rednam" chunk="Search_Chunk492.xml" /><stem n="reelnam" chunk="Search_Chunk492.xml" /><stem n="fullpath" chunk="Search_Chunk492.xml" /><stem n="filehead" chunk="Search_Chunk492.xml" /><stem n="partialnam" chunk="Search_Chunk492.xml" /><stem n="foldernam" chunk="Search_Chunk492.xml" /><stem n="br_shot" chunk="Search_Chunk492.xml" /><stem n="non-overlap" chunk="Search_Chunk492.xml" /><stem n="trust" chunk="Search_Chunk492.xml" /><stem n="massag" chunk="Search_Chunk492.xml" /><stem n="descend" chunk="Search_Chunk492.xml" /><stem n="cog" chunk="Search_Chunk492.xml" /><stem n="01054321" chunk="Search_Chunk492.xml" /><stem n="+1h" chunk="Search_Chunk492.xml" /><stem n="-110" chunk="Search_Chunk492.xml" /><stem n="42" chunk="Search_Chunk492.xml" /><stem n="+10000" chunk="Search_Chunk492.xml" /><stem n="6m" chunk="Search_Chunk492.xml" /><stem n="-6m" chunk="Search_Chunk492.xml" /><stem n="token" chunk="Search_Chunk492.xml" /><stem n="interlac" chunk="Search_Chunk492.xml" /><stem n="mono" chunk="Search_Chunk492.xml" /><stem n="multi-channel" chunk="Search_Chunk492.xml" /><stem n="48" chunk="Search_Chunk492.xml" /><stem n="khz" chunk="Search_Chunk492.xml" /><stem n="upper-right" chunk="Search_Chunk492.xml" /><stem n="speaker" chunk="Search_Chunk492.xml" /><stem n="unrel" chunk="Search_Chunk492.xml" /><stem n="audiowaveform" chunk="Search_Chunk492.xml" /><stem n="audio-heavi" chunk="Search_Chunk492.xml" /><stem n="sync" chunk="Search_Chunk492.xml" /><stem n="hotspot" chunk="Search_Chunk492.xml" /><stem n="pre-defin" chunk="Search_Chunk492.xml" /><stem n="abort" chunk="Search_Chunk492.xml" /><stem n="ßà" chunk="Search_Chunk492.xml" /><stem n="crossfad" chunk="Search_Chunk492.xml" /><stem n="filler" chunk="Search_Chunk492.xml" /><stem n="dur" chunk="Search_Chunk492.xml" /><stem n="identif" chunk="Search_Chunk492.xml" /><stem n="concern" chunk="Search_Chunk492.xml" /><stem n="gpuengin" chunk="Search_Chunk492.xml" /><stem n="custom_soft_effect" chunk="Search_Chunk492.xml" /><stem n="summari" chunk="Search_Chunk492.xml" /><stem n="file-bas" chunk="Search_Chunk492.xml" /><stem n="asc" chunk="Search_Chunk492.xml" /><stem n="ociofiletransform" chunk="Search_Chunk492.xml" /><stem n="cdl" chunk="Search_Chunk492.xml" /><stem n="american" chunk="Search_Chunk492.xml" /><stem n="societi" chunk="Search_Chunk492.xml" /><stem n="cinematograph" chunk="Search_Chunk492.xml" /><stem n="ociocdltransform" chunk="Search_Chunk492.xml" /><stem n="sequence-level" chunk="Search_Chunk492.xml" /><stem n="arbitrarili" chunk="Search_Chunk492.xml" /><stem n="screenshot" chunk="Search_Chunk492.xml" /><stem n="clip-level" chunk="Search_Chunk492.xml" /><stem n="non-adjac" chunk="Search_Chunk493.xml" /><stem n="radio" chunk="Search_Chunk493.xml" /><stem n="chronolog" chunk="Search_Chunk493.xml" /><stem n="version-up" chunk="Search_Chunk493.xml" /><stem n="versioned-up" chunk="Search_Chunk493.xml" /><stem n="re-export" chunk="Search_Chunk493.xml" /><stem n="turquois" chunk="Search_Chunk493.xml" /><stem n="middle-top" chunk="Search_Chunk493.xml" /><stem n="lasso" chunk="Search_Chunk493.xml" /><stem n="shorten" chunk="Search_Chunk493.xml" /><stem n="lengthen" chunk="Search_Chunk493.xml" /><stem n="razor" chunk="Search_Chunk493.xml" /><stem n="rapidli" chunk="Search_Chunk493.xml" /><stem n="desynchron" chunk="Search_Chunk493.xml" /><stem n="pre-edit" chunk="Search_Chunk493.xml" /><stem n="post-edit" chunk="Search_Chunk493.xml" /><stem n="pre-insert" chunk="Search_Chunk493.xml" /><stem n="post-insert" chunk="Search_Chunk493.xml" /><stem n="2-up" chunk="Search_Chunk493.xml" /><stem n="pre-overwrit" chunk="Search_Chunk493.xml" /><stem n="post-overwrit" chunk="Search_Chunk493.xml" /><stem n="insuffici" chunk="Search_Chunk493.xml" /><stem n="children" chunk="Search_Chunk493.xml" /><stem n="time-stamp" chunk="Search_Chunk493.xml" /><stem n="inconveni" chunk="Search_Chunk493.xml" /><stem n="remind" chunk="Search_Chunk493.xml" /><stem n="myclip" chunk="Search_Chunk493.xml" /><stem n="_v1" chunk="Search_Chunk493.xml" /><stem n="_v2" chunk="Search_Chunk493.xml" /><stem n="_v3" chunk="Search_Chunk493.xml" /><stem n="delin" chunk="Search_Chunk493.xml" /><stem n="_" chunk="Search_Chunk493.xml" /><stem n="v1" chunk="Search_Chunk493.xml" /><stem n="v2" chunk="Search_Chunk493.xml" /><stem n="v3" chunk="Search_Chunk493.xml" /><stem n="myclip_" chunk="Search_Chunk493.xml" /><stem n="v002" chunk="Search_Chunk493.xml" /><stem n="myclip_v1" chunk="Search_Chunk493.xml" /><stem n="interchang" chunk="Search_Chunk493.xml" /><stem n="myclip_v2" chunk="Search_Chunk493.xml" /><stem n="myclip_v3" chunk="Search_Chunk493.xml" /><stem n="09_wf_shot004_" chunk="Search_Chunk493.xml" /><stem n="weren" chunk="Search_Chunk493.xml" /><stem n="sq" chunk="Search_Chunk493.xml" /><stem n="deliveri" chunk="Search_Chunk493.xml" /><stem n="hoc" chunk="Search_Chunk493.xml" /><stem n="pave" chunk="Search_Chunk493.xml" /><stem n="umbrella" chunk="Search_Chunk493.xml" /><stem n="bind" chunk="Search_Chunk493.xml" /><stem n="infrastructur" chunk="Search_Chunk493.xml" /><stem n="massiv" chunk="Search_Chunk493.xml" /><stem n="non-destruct" chunk="Search_Chunk493.xml" /><stem n="round-trip" chunk="Search_Chunk493.xml" /><stem n="trip" chunk="Search_Chunk493.xml" /><stem n="ready-mad" chunk="Search_Chunk493.xml" /><stem n="most-us" chunk="Search_Chunk493.xml" /><stem n="effects®" chunk="Search_Chunk493.xml" /><stem n="symlink" chunk="Search_Chunk493.xml" /><stem n="auto-expans" chunk="Search_Chunk493.xml" /><stem n="ampm" chunk="Search_Chunk493.xml" /><stem n="binpath" chunk="Search_Chunk493.xml" /><stem n="upto" chunk="Search_Chunk493.xml" /><stem n="weekdai" chunk="Search_Chunk493.xml" /><stem n="mon" chunk="Search_Chunk493.xml" /><stem n="tue" chunk="Search_Chunk493.xml" /><stem n="filebas" chunk="Search_Chunk493.xml" /><stem n="shot01_" chunk="Search_Chunk493.xml" /><stem n="fileext" chunk="Search_Chunk493.xml" /><stem n="shot01" chunk="Search_Chunk493.xml" /><stem n="filepad" chunk="Search_Chunk493.xml" /><stem n="fullbinpath" chunk="Search_Chunk493.xml" /><stem n="fulldai" chunk="Search_Chunk493.xml" /><stem n="fullmonth" chunk="Search_Chunk493.xml" /><stem n="hierotemp" chunk="Search_Chunk493.xml" /><stem n="hour12" chunk="Search_Chunk493.xml" /><stem n="hour24" chunk="Search_Chunk493.xml" /><stem n="feb" chunk="Search_Chunk493.xml" /><stem n="projectroot" chunk="Search_Chunk493.xml" /><stem n="hhmm" chunk="Search_Chunk493.xml" /><stem n="centuri" chunk="Search_Chunk493.xml" /><stem n="yyyi" chunk="Search_Chunk493.xml" /><stem n="substr" chunk="Search_Chunk493.xml" /><stem n="jb100" chunk="Search_Chunk493.xml" /><stem n="jb" chunk="Search_Chunk493.xml" /><stem n="jb_10_20" chunk="Search_Chunk493.xml" /><stem n="renders_dpx" chunk="Search_Chunk493.xml" /><stem n="renders_jpg" chunk="Search_Chunk493.xml" /><stem n="_comp" chunk="Search_Chunk493.xml" /><stem n="_nameindex" chunk="Search_Chunk493.xml" /><stem n="verdana" chunk="Search_Chunk493.xml" /><stem n="ttf" chunk="Search_Chunk493.xml" /><stem n="mix-and-match" chunk="Search_Chunk493.xml" /><stem n="mix-and" chunk="Search_Chunk493.xml" /><stem n="and-match" chunk="Search_Chunk493.xml" /><stem n="unconnect" chunk="Search_Chunk493.xml" /><stem n="&lt;some" chunk="Search_Chunk493.xml" /><stem n="xref&gt;" chunk="Search_Chunk493.xml" /><stem n="nukestudio_i" chunk="Search_Chunk493.xml" /><stem n="useinteractivelicens" chunk="Search_Chunk493.xml" /><stem n="--useinteractivelicens" chunk="Search_Chunk493.xml" /><stem n="runframeserv" chunk="Search_Chunk493.xml" /><stem n="umask" chunk="Search_Chunk493.xml" /><stem n="commun" chunk="Search_Chunk493.xml" /><stem n="5560" chunk="Search_Chunk493.xml" /><stem n="iptabl" chunk="Search_Chunk493.xml" /><stem n="tcp" chunk="Search_Chunk493.xml" /><stem n="dport" chunk="Search_Chunk493.xml" /><stem n="--dport" chunk="Search_Chunk493.xml" /><stem n="syn" chunk="Search_Chunk493.xml" /><stem n="--syn" chunk="Search_Chunk493.xml" /><stem n="-j" chunk="Search_Chunk493.xml" /><stem n="worker" chunk="Search_Chunk493.xml" /><stem n="alloc" chunk="Search_Chunk493.xml" /><stem n="numwork" chunk="Search_Chunk493.xml" /><stem n="--numwork" chunk="Search_Chunk493.xml" /><stem n="numworkerthread" chunk="Search_Chunk493.xml" /><stem n="--numworkerthread" chunk="Search_Chunk493.xml" /><stem n="nukeworkermemori" chunk="Search_Chunk493.xml" /><stem n="--nukeworkermemori" chunk="Search_Chunk493.xml" /><stem n="workerconnecturl" chunk="Search_Chunk493.xml" /><stem n="--workerconnecturl" chunk="Search_Chunk493.xml" /><stem n="bob" chunk="Search_Chunk493.xml" /><stem n="hostnam" chunk="Search_Chunk493.xml" /><stem n="url" chunk="Search_Chunk493.xml" /><stem n="ping" chunk="Search_Chunk493.xml" /><stem n="nukepath" chunk="Search_Chunk493.xml" /><stem n="--nukepath" chunk="Search_Chunk493.xml" /><stem n="--nukepath=&quot;c:\program" chunk="Search_Chunk493.xml" /><stem n="frameserv" chunk="Search_Chunk493.xml" /><stem n="--numworkers=2" chunk="Search_Chunk493.xml" /><stem n="nukeworkerthread" chunk="Search_Chunk493.xml" /><stem n="--nukeworkerthreads=4" chunk="Search_Chunk493.xml" /><stem n="8096" chunk="Search_Chunk493.xml" /><stem n="--nukeworkermemory=8096" chunk="Search_Chunk493.xml" /><stem n="--workerconnecturl=tcp://bob:5560" chunk="Search_Chunk493.xml" /><stem n="--nukepath=./nuk" chunk="Search_Chunk493.xml" /><stem n="--nukepath=nuke9.0.ex" chunk="Search_Chunk493.xml" /><stem n="mnt" chunk="Search_Chunk493.xml" /><stem n="nuke_bridg" chunk="Search_Chunk493.xml" /><stem n="getstatu" chunk="Search_Chunk493.xml" /><stem n="workerstatu" chunk="Search_Chunk493.xml" /><stem n="henri" chunk="Search_Chunk493.xml" /><stem n="192" chunk="Search_Chunk493.xml" /><stem n="168" chunk="Search_Chunk493.xml" /><stem n="111" chunk="Search_Chunk494.xml" /><stem n="broker" chunk="Search_Chunk494.xml" /><stem n="diagnos" chunk="Search_Chunk494.xml" /><stem n="worker-0" chunk="Search_Chunk494.xml" /><stem n="worker-1" chunk="Search_Chunk494.xml" /><stem n="worker-2" chunk="Search_Chunk494.xml" /><stem n="shot01_comp_v03" chunk="Search_Chunk494.xml" /><stem n="non-uniqu" chunk="Search_Chunk494.xml" /><stem n="creator" chunk="Search_Chunk494.xml" /><stem n="collat" chunk="Search_Chunk494.xml" /><stem n="1080" chunk="Search_Chunk494.xml" /><stem n="write_" chunk="Search_Chunk494.xml" /><stem n="queue" chunk="Search_Chunk494.xml" /><stem n="re-ingest" chunk="Search_Chunk494.xml" /><stem n="holder" chunk="Search_Chunk494.xml" /><stem n="endian" chunk="Search_Chunk494.xml" /><stem n="cmx" chunk="Search_Chunk494.xml" /><stem n="3600" chunk="Search_Chunk494.xml" /><stem n="mytimeline_video1" chunk="Search_Chunk494.xml" /><stem n="mytimeline_video2" chunk="Search_Chunk494.xml" /><stem n="shot-level" chunk="Search_Chunk494.xml" /><stem n="truncat" chunk="Search_Chunk494.xml" /><stem n="technolog" chunk="Search_Chunk494.xml" /><stem n="un-warp" chunk="Search_Chunk494.xml" /><stem n="lie" chunk="Search_Chunk494.xml" /><stem n="per-fram" chunk="Search_Chunk494.xml" /><stem n="limitless" chunk="Search_Chunk494.xml" /><stem n="renderman®" chunk="Search_Chunk494.xml" /><stem n="refract" chunk="Search_Chunk494.xml" /><stem n="furnac" chunk="Search_Chunk494.xml" /><stem n="rig-remov" chunk="Search_Chunk494.xml" /><stem n="f_deflicker2" chunk="Search_Chunk494.xml" /><stem n="f_wireremov" chunk="Search_Chunk494.xml" /><stem n="f_align" chunk="Search_Chunk494.xml" /><stem n="f_rigremov" chunk="Search_Chunk494.xml" /><stem n="f_steadi" chunk="Search_Chunk494.xml" /><stem n="f_degrain" chunk="Search_Chunk494.xml" /><stem n="f_denois" chunk="Search_Chunk494.xml" /><stem n="f_krono" chunk="Search_Chunk494.xml" /><stem n="f_motionblur" chunk="Search_Chunk494.xml" /><stem n="f_vectorgener" chunk="Search_Chunk494.xml" /><stem n="framework" chunk="Search_Chunk494.xml" /><stem n="reconstruct" chunk="Search_Chunk494.xml" /><stem n="beforehand" chunk="Search_Chunk494.xml" /><stem n="theth" chunk="Search_Chunk494.xml" /><stem n="semi-glob" chunk="Search_Chunk494.xml" /><stem n="re-tim" chunk="Search_Chunk494.xml" /><stem n="puls" chunk="Search_Chunk494.xml" /><stem n="number_of_interv" chunk="Search_Chunk494.xml" /><stem n="t_start" chunk="Search_Chunk494.xml" /><stem n="t_end" chunk="Search_Chunk494.xml" /><stem n="tau" chunk="Search_Chunk494.xml" /><stem n="t_o" chunk="Search_Chunk494.xml" /><stem n="t_o_start" chunk="Search_Chunk494.xml" /><stem n="t_o_end" chunk="Search_Chunk494.xml" /><stem n="bgvec" chunk="Search_Chunk494.xml" /><stem n="fgvec" chunk="Search_Chunk494.xml" /><stem n="interf" chunk="Search_Chunk494.xml" /><stem n="mosrc" chunk="Search_Chunk494.xml" /><stem n="peed" chunk="Search_Chunk494.xml" /><stem n="atleast" chunk="Search_Chunk494.xml" /><stem n="48th" chunk="Search_Chunk494.xml" /><stem n="discret" chunk="Search_Chunk494.xml" /><stem n="friendli" chunk="Search_Chunk494.xml" /><stem n="undistort" chunk="Search_Chunk495.xml" /><stem n="ﬁnd" chunk="Search_Chunk495.xml" /><stem n="well-distribut" chunk="Search_Chunk495.xml" /><stem n="ﬁnish" chunk="Search_Chunk495.xml" /><stem n="speciﬁ" chunk="Search_Chunk495.xml" /><stem n="deﬁn" chunk="Search_Chunk495.xml" /><stem n="square-on" chunk="Search_Chunk495.xml" /><stem n="ﬁrst" chunk="Search_Chunk495.xml" /><stem n="slight" chunk="Search_Chunk495.xml" /><stem n="misalign" chunk="Search_Chunk495.xml" /><stem n="rough" chunk="Search_Chunk495.xml" /><stem n="rigid" chunk="Search_Chunk495.xml" /><stem n="planartracklayer1" chunk="Search_Chunk495.xml" /><stem n="fwd" chunk="Search_Chunk495.xml" /><stem n="bkwd" chunk="Search_Chunk495.xml" /><stem n="shear" chunk="Search_Chunk495.xml" /><stem n="drift" chunk="Search_Chunk495.xml" /><stem n="suddenli" chunk="Search_Chunk495.xml" /><stem n="planartracklay" chunk="Search_Chunk495.xml" /><stem n="realign" chunk="Search_Chunk495.xml" /><stem n="sorrect" chunk="Search_Chunk495.xml" /><stem n="survei" chunk="Search_Chunk495.xml" /><stem n="ground" chunk="Search_Chunk495.xml" /><stem n="solver" chunk="Search_Chunk495.xml" /><stem n="usertrack" chunk="Search_Chunk495.xml" /><stem n="tripod" chunk="Search_Chunk495.xml" /><stem n="nodal" chunk="Search_Chunk495.xml" /><stem n="camerapreset" chunk="Search_Chunk495.xml" /><stem n="150" chunk="Search_Chunk495.xml" /><stem n="reseed" chunk="Search_Chunk495.xml" /><stem n="viabl" chunk="Search_Chunk495.xml" /><stem n="reject" chunk="Search_Chunk495.xml" /><stem n="autotrack" chunk="Search_Chunk495.xml" /><stem n="num" chunk="Search_Chunk495.xml" /><stem n="retrack" chunk="Search_Chunk495.xml" /><stem n="post-track" chunk="Search_Chunk495.xml" /><stem n="textureless" chunk="Search_Chunk495.xml" /><stem n="corner-lik" chunk="Search_Chunk495.xml" /><stem n="180-200" chunk="Search_Chunk495.xml" /><stem n="inconsist" chunk="Search_Chunk495.xml" /><stem n="rese" chunk="Search_Chunk495.xml" /><stem n="near-flat" chunk="Search_Chunk495.xml" /><stem n="interior" chunk="Search_Chunk495.xml" /><stem n="20-25" chunk="Search_Chunk495.xml" /><stem n="redund" chunk="Search_Chunk495.xml" /><stem n="drastic" chunk="Search_Chunk495.xml" /><stem n="head-on" chunk="Search_Chunk495.xml" /><stem n="photo" chunk="Search_Chunk495.xml" /><stem n="15-25" chunk="Search_Chunk495.xml" /><stem n="perimet" chunk="Search_Chunk495.xml" /><stem n="galleri" chunk="Search_Chunk495.xml" /><stem n="250" chunk="Search_Chunk495.xml" /><stem n="strip" chunk="Search_Chunk496.xml" /><stem n="re-detect" chunk="Search_Chunk496.xml" /><stem n="rebuilt" chunk="Search_Chunk496.xml" /><stem n="unmatch" chunk="Search_Chunk496.xml" /><stem n="instantli" chunk="Search_Chunk496.xml" /><stem n="116" chunk="Search_Chunk496.xml" /><stem n="+left" chunk="Search_Chunk496.xml" /><stem n="trick" chunk="Search_Chunk496.xml" /><stem n="extr" chunk="Search_Chunk496.xml" /><stem n="pillar" chunk="Search_Chunk496.xml" /><stem n="stone" chunk="Search_Chunk496.xml" /><stem n="throughtout" chunk="Search_Chunk496.xml" /><stem n="poorli" chunk="Search_Chunk496.xml" /><stem n="hope" chunk="Search_Chunk496.xml" /><stem n="parallax" chunk="Search_Chunk496.xml" /><stem n="amber" chunk="Search_Chunk496.xml" /><stem n="reproject" chunk="Search_Chunk496.xml" /><stem n="cross-check" chunk="Search_Chunk496.xml" /><stem n="blip" chunk="Search_Chunk496.xml" /><stem n="triangul" chunk="Search_Chunk496.xml" /><stem n="despit" chunk="Search_Chunk496.xml" /><stem n="matchmov" chunk="Search_Chunk496.xml" /><stem n="scene+" chunk="Search_Chunk496.xml" /><stem n="pointcloud" chunk="Search_Chunk496.xml" /><stem n="195" chunk="Search_Chunk496.xml" /><stem n="tighter" chunk="Search_Chunk496.xml" /><stem n="inlier" chunk="Search_Chunk496.xml" /><stem n="10-15" chunk="Search_Chunk496.xml" /><stem n="re-solv" chunk="Search_Chunk496.xml" /><stem n="notion" chunk="Search_Chunk496.xml" /><stem n="reorient" chunk="Search_Chunk496.xml" /><stem n="read-onli" chunk="Search_Chunk496.xml" /><stem n="equat" chunk="Search_Chunk496.xml" /><stem n="meter" chunk="Search_Chunk496.xml" /><stem n="millimet" chunk="Search_Chunk496.xml" /><stem n="labl" chunk="Search_Chunk496.xml" /><stem n="dist" chunk="Search_Chunk496.xml" /><stem n="modo" chunk="Search_Chunk496.xml" /><stem n="ready-to-us" chunk="Search_Chunk496.xml" /><stem n="ready-to" chunk="Search_Chunk496.xml" /><stem n="to-us" chunk="Search_Chunk496.xml" /><stem n="expression-link" chunk="Search_Chunk496.xml" /><stem n="cameratrackerpointcloud" chunk="Search_Chunk496.xml" /><stem n="dome" chunk="Search_Chunk496.xml" /><stem n="wit" chunk="Search_Chunk496.xml" /><stem n="someon" chunk="Search_Chunk496.xml" /><stem n="leverag" chunk="Search_Chunk496.xml" /><stem n="close-up" chunk="Search_Chunk496.xml" /><stem n="wide-angl" chunk="Search_Chunk496.xml" /><stem n="establish" chunk="Search_Chunk496.xml" /><stem n="satellit" chunk="Search_Chunk496.xml" /><stem n="vision" chunk="Search_Chunk496.xml" /><stem n="xu" chunk="Search_Chunk496.xml" /><stem n="xd" chunk="Search_Chunk496.xml" /><stem n="d1" chunk="Search_Chunk496.xml" /><stem n="d2" chunk="Search_Chunk496.xml" /><stem n="r2" chunk="Search_Chunk496.xml" /><stem n="r4" chunk="Search_Chunk496.xml" /><stem n="ay" chunk="Search_Chunk496.xml" /><stem n="asq" chunk="Search_Chunk496.xml" /><stem n="yu" chunk="Search_Chunk496.xml" /><stem n="yd" chunk="Search_Chunk496.xml" /><stem n="baked-in" chunk="Search_Chunk496.xml" /><stem n="color-match" chunk="Search_Chunk496.xml" /><stem n="mill" chunk="Search_Chunk496.xml" /><stem n="pixel-to-pixel" chunk="Search_Chunk496.xml" /><stem n="pixel-to" chunk="Search_Chunk496.xml" /><stem n="to-pixel" chunk="Search_Chunk496.xml" /><stem n="auto-analyz" chunk="Search_Chunk496.xml" /><stem n="csp" chunk="Search_Chunk496.xml" /><stem n="shaper" chunk="Search_Chunk496.xml" /><stem n="pre-lut" chunk="Search_Chunk496.xml" /><stem n="grass" chunk="Search_Chunk496.xml" /><stem n="sky" chunk="Search_Chunk496.xml" /><stem n="struggl" chunk="Search_Chunk496.xml" /><stem n="ac" chunk="Search_Chunk496.xml" /><stem n="ppass" chunk="Search_Chunk496.xml" /><stem n="npass" chunk="Search_Chunk496.xml" /><stem n="98" chunk="Search_Chunk496.xml" /><stem n="102" chunk="Search_Chunk497.xml" /><stem n="intellig" chunk="Search_Chunk497.xml" /><stem n="ambigu" chunk="Search_Chunk497.xml" /><stem n="hasn" chunk="Search_Chunk497.xml" /><stem n="live-act" chunk="Search_Chunk497.xml" /><stem n="pointcloud-gener" chunk="Search_Chunk497.xml" /><stem n="walk" chunk="Search_Chunk497.xml" /><stem n="denser" chunk="Search_Chunk497.xml" /><stem n="streamlin" chunk="Search_Chunk497.xml" /><stem n="re-select" chunk="Search_Chunk497.xml" /><stem n="awkward" chunk="Search_Chunk497.xml" /><stem n="stand-alon" chunk="Search_Chunk497.xml" /><stem n="poisson" chunk="Search_Chunk497.xml" /><stem n="paper" chunk="Search_Chunk497.xml" /><stem n="michael" chunk="Search_Chunk497.xml" /><stem n="kazhdan" chunk="Search_Chunk497.xml" /><stem n="matthew" chunk="Search_Chunk497.xml" /><stem n="bolitho" chunk="Search_Chunk497.xml" /><stem n="hugu" chunk="Search_Chunk497.xml" /><stem n="hopp" chunk="Search_Chunk497.xml" /><stem n="cs" chunk="Search_Chunk497.xml" /><stem n="jhu" chunk="Search_Chunk497.xml" /><stem n="edu" chunk="Search_Chunk497.xml" /><stem n="~misha" chunk="Search_Chunk497.xml" /><stem n="poissonrecon" chunk="Search_Chunk497.xml" /><stem n="chief" chunk="Search_Chunk497.xml" /><stem n="group1_mesh" chunk="Search_Chunk497.xml" /><stem n="iso" chunk="Search_Chunk497.xml" /><stem n="iso-surfac" chunk="Search_Chunk497.xml" /><stem n="extractor" chunk="Search_Chunk497.xml" /><stem n="confid" chunk="Search_Chunk497.xml" /><stem n="double-check" chunk="Search_Chunk497.xml" /><stem n="prerequisit" chunk="Search_Chunk497.xml" /><stem n="geo" chunk="Search_Chunk497.xml" /><stem n="tex" chunk="Search_Chunk497.xml" /><stem n="non-flat" chunk="Search_Chunk497.xml" /><stem n="single-step" chunk="Search_Chunk497.xml" /><stem n="extrud" chunk="Search_Chunk497.xml" /><stem n="multi-step" chunk="Search_Chunk497.xml" /><stem n="bevel" chunk="Search_Chunk497.xml" /><stem n="subdiv" chunk="Search_Chunk497.xml" /><stem n="clash" chunk="Search_Chunk497.xml" /><stem n="carv" chunk="Search_Chunk497.xml" /><stem n="three-dimension" chunk="Search_Chunk497.xml" /><stem n="pyramid" chunk="Search_Chunk497.xml" /><stem n="inset" chunk="Search_Chunk497.xml" /><stem n="10th" chunk="Search_Chunk497.xml" /><stem n="four-sid" chunk="Search_Chunk497.xml" /><stem n="extrus" chunk="Search_Chunk497.xml" /><stem n="fan" chunk="Search_Chunk497.xml" /><stem n="unwrap" chunk="Search_Chunk497.xml" /><stem n="populatebakemenu" chunk="Search_Chunk497.xml" /><stem n="unmark" chunk="Search_Chunk497.xml" /><stem n="cylindr" chunk="Search_Chunk497.xml" /><stem n="unwrapp" chunk="Search_Chunk497.xml" /><stem n="neglig" chunk="Search_Chunk497.xml" /><stem n="bleed" chunk="Search_Chunk497.xml" /><stem n="snow" chunk="Search_Chunk497.xml" /><stem n="explos" chunk="Search_Chunk497.xml" /><stem n="bubbl" chunk="Search_Chunk497.xml" /><stem n="endless" chunk="Search_Chunk497.xml" /><stem n="particleemitt" chunk="Search_Chunk497.xml" /><stem n="rain" chunk="Search_Chunk498.xml" /><stem n="particlemerg" chunk="Search_Chunk498.xml" /><stem n="pre-rol" chunk="Search_Chunk498.xml" /><stem n="delai" chunk="Search_Chunk498.xml" /><stem n="imit" chunk="Search_Chunk498.xml" /><stem n="fallen" chunk="Search_Chunk498.xml" /><stem n="flake" chunk="Search_Chunk498.xml" /><stem n="randomli" chunk="Search_Chunk498.xml" /><stem n="halflif" chunk="Search_Chunk498.xml" /><stem n="particlemotionalign" chunk="Search_Chunk498.xml" /><stem n="emitt" chunk="Search_Chunk498.xml" /><stem n="mass" chunk="Search_Chunk498.xml" /><stem n="particledirectionalforc" chunk="Search_Chunk498.xml" /><stem n="trajectori" chunk="Search_Chunk498.xml" /><stem n="particlespawn" chunk="Search_Chunk498.xml" /><stem n="conserv" chunk="Search_Chunk498.xml" /><stem n="momentum" chunk="Search_Chunk498.xml" /><stem n="newton" chunk="Search_Chunk498.xml" /><stem n="law" chunk="Search_Chunk498.xml" /><stem n="graviti" chunk="Search_Chunk498.xml" /><stem n="particlegrav" chunk="Search_Chunk498.xml" /><stem n="stronger" chunk="Search_Chunk498.xml" /><stem n="particlelookat" chunk="Search_Chunk498.xml" /><stem n="particlespeedlimit" chunk="Search_Chunk498.xml" /><stem n="attract" chunk="Search_Chunk498.xml" /><stem n="particlepointforc" chunk="Search_Chunk499.xml" /><stem n="repel" chunk="Search_Chunk499.xml" /><stem n="repuls" chunk="Search_Chunk499.xml" /><stem n="particlebounc" chunk="Search_Chunk499.xml" /><stem n="kill" chunk="Search_Chunk499.xml" /><stem n="friction" chunk="Search_Chunk499.xml" /><stem n="particledrag" chunk="Search_Chunk499.xml" /><stem n="particleturbul" chunk="Search_Chunk499.xml" /><stem n="amplitud" chunk="Search_Chunk499.xml" /><stem n="spiral" chunk="Search_Chunk499.xml" /><stem n="particlevortex" chunk="Search_Chunk499.xml" /><stem n="whirlpool" chunk="Search_Chunk499.xml" /><stem n="vortex" chunk="Search_Chunk499.xml" /><stem n="tangenti" chunk="Search_Chunk499.xml" /><stem n="circul" chunk="Search_Chunk499.xml" /><stem n="helix" chunk="Search_Chunk499.xml" /><stem n="corkscrew" chunk="Search_Chunk499.xml" /><stem n="wind" chunk="Search_Chunk499.xml" /><stem n="particlewind" chunk="Search_Chunk499.xml" /><stem n="blow" chunk="Search_Chunk499.xml" /><stem n="air" chunk="Search_Chunk499.xml" /><stem n="resist" chunk="Search_Chunk499.xml" /><stem n="ag" chunk="Search_Chunk499.xml" /><stem n="confin" chunk="Search_Chunk499.xml" /><stem n="sphere-shap" chunk="Search_Chunk499.xml" /><stem n="particlecurv" chunk="Search_Chunk499.xml" /><stem n="particleexpress" chunk="Search_Chunk499.xml" /><stem n="vast" chunk="Search_Chunk500.xml" /><stem n="accel" chunk="Search_Chunk500.xml" /><stem n="vel" chunk="Search_Chunk500.xml" /><stem n="quadrant" chunk="Search_Chunk500.xml" /><stem n="synonym" chunk="Search_Chunk500.xml" /><stem n="modulu" chunk="Search_Chunk500.xml" /><stem n="euclidean" chunk="Search_Chunk500.xml" /><stem n="normalis" chunk="Search_Chunk500.xml" /><stem n="randomv" chunk="Search_Chunk500.xml" /><stem n="samplespher" chunk="Search_Chunk500.xml" /><stem n="particleset" chunk="Search_Chunk500.xml" /><stem n="assess" chunk="Search_Chunk500.xml" /><stem n="analogu" chunk="Search_Chunk500.xml" /><stem n="particletogeo" chunk="Search_Chunk500.xml" /><stem n="sprite" chunk="Search_Chunk500.xml" /><stem n="particlecach" chunk="Search_Chunk500.xml" /><stem n="knowledg" chunk="Search_Chunk500.xml" /><stem n="beneath" chunk="Search_Chunk500.xml" /><stem n="nkpc" chunk="Search_Chunk500.xml" /><stem n="sub-fram" chunk="Search_Chunk500.xml" /><stem n="particle_cach" chunk="Search_Chunk500.xml" /><stem n="x11" chunk="Search_Chunk500.xml" /><stem n="ht5293" chunk="Search_Chunk500.xml" /><stem n="rmantre" chunk="Search_Chunk500.xml" /><stem n="ld_library_path" chunk="Search_Chunk500.xml" /><stem n="focal-length" chunk="Search_Chunk500.xml" /><stem n="blackman" chunk="Search_Chunk500.xml" /><stem n="harri" chunk="Search_Chunk500.xml" /><stem n="retrac" chunk="Search_Chunk500.xml" /><stem n="rib" chunk="Search_Chunk500.xml" /><stem n="bytestream" chunk="Search_Chunk500.xml" /><stem n="filterrib" chunk="Search_Chunk500.xml" /><stem n="rif" chunk="Search_Chunk500.xml" /><stem n="myfilt" chunk="Search_Chunk500.xml" /><stem n="renderman-compat" chunk="Search_Chunk500.xml" /><stem n="modifyrib" chunk="Search_Chunk500.xml" /><stem n="-0.25" chunk="Search_Chunk500.xml" /><stem n="wood" chunk="Search_Chunk500.xml" /><stem n="wood-lik" chunk="Search_Chunk500.xml" /><stem n="worldbegin" chunk="Search_Chunk500.xml" /><stem n="worldend" chunk="Search_Chunk500.xml" /><stem n="straw" chunk="Search_Chunk500.xml" /><stem n="deflicker2" chunk="Search_Chunk500.xml" /><stem n="unsynchron" chunk="Search_Chunk500.xml" /><stem n="fluoresc" chunk="Search_Chunk500.xml" /><stem n="allevi" chunk="Search_Chunk500.xml" /><stem n="deflick" chunk="Search_Chunk500.xml" /><stem n="advers" chunk="Search_Chunk500.xml" /><stem n="adopt" chunk="Search_Chunk500.xml" /><stem n="advis" chunk="Search_Chunk500.xml" /><stem n="motion-compens" chunk="Search_Chunk500.xml" /><stem n="320" chunk="Search_Chunk500.xml" /><stem n="synthes" chunk="Search_Chunk500.xml" /><stem n="pre-sampl" chunk="Search_Chunk500.xml" /><stem n="judg" chunk="Search_Chunk500.xml" /><stem n="lowlight" chunk="Search_Chunk500.xml" /><stem n="imposs" chunk="Search_Chunk500.xml" /><stem n="behaviour" chunk="Search_Chunk500.xml" /><stem n="37x37" chunk="Search_Chunk500.xml" /><stem n="fuji" chunk="Search_Chunk500.xml" /><stem n="fujif500" chunk="Search_Chunk500.xml" /><stem n="indistinguish" chunk="Search_Chunk500.xml" /><stem n="re-analysi" chunk="Search_Chunk500.xml" /><stem n="re-analyz" chunk="Search_Chunk500.xml" /><stem n="tr" chunk="Search_Chunk500.xml" /><stem n="re-appli" chunk="Search_Chunk500.xml" /><stem n="wireremov" chunk="Search_Chunk500.xml" /><stem n="wire" chunk="Search_Chunk500.xml" /><stem n="suspend" chunk="Search_Chunk501.xml" /><stem n="safeti" chunk="Search_Chunk501.xml" /><stem n="rariti" chunk="Search_Chunk501.xml" /><stem n="unobstruct" chunk="Search_Chunk501.xml" /><stem n="heavili" chunk="Search_Chunk501.xml" /><stem n="dust" chunk="Search_Chunk501.xml" /><stem n="repair" chunk="Search_Chunk501.xml" /><stem n="transient" chunk="Search_Chunk501.xml" /><stem n="slope-depend" chunk="Search_Chunk501.xml" /><stem n="roof" chunk="Search_Chunk501.xml" /><stem n="cleanplat" chunk="Search_Chunk501.xml" /><stem n="s-shape" chunk="Search_Chunk501.xml" /><stem n="fairli" chunk="Search_Chunk501.xml" /><stem n="steel" chunk="Search_Chunk501.xml" /><stem n="twist" chunk="Search_Chunk501.xml" /><stem n="gme" chunk="Search_Chunk501.xml" /><stem n="steadi" chunk="Search_Chunk501.xml" /><stem n="lme" chunk="Search_Chunk501.xml" /><stem n="cheaper" chunk="Search_Chunk501.xml" /><stem n="pain" chunk="Search_Chunk501.xml" /><stem n="key-fram" chunk="Search_Chunk501.xml" /><stem n="ever" chunk="Search_Chunk501.xml" /><stem n="re-analys" chunk="Search_Chunk501.xml" /><stem n="interrupt" chunk="Search_Chunk501.xml" /><stem n="sought" chunk="Search_Chunk501.xml" /><stem n="freshli" chunk="Search_Chunk501.xml" /><stem n="quicker" chunk="Search_Chunk501.xml" /><stem n="ook" chunk="Search_Chunk501.xml" /><stem n="crowd" chunk="Search_Chunk501.xml" /><stem n="on-the-fli" chunk="Search_Chunk501.xml" /><stem n="on-th" chunk="Search_Chunk501.xml" /><stem n="the-fli" chunk="Search_Chunk501.xml" /><stem n="banner" chunk="Search_Chunk501.xml" /><stem n="lesser" chunk="Search_Chunk501.xml" /><stem n="rigremov" chunk="Search_Chunk501.xml" /><stem n="satisfactorili" chunk="Search_Chunk501.xml" /><stem n="skill" chunk="Search_Chunk501.xml" /><stem n="bird" chunk="Search_Chunk501.xml" /><stem n="rigmask" chunk="Search_Chunk501.xml" /><stem n="whichev" chunk="Search_Chunk501.xml" /><stem n="frustrat" chunk="Search_Chunk501.xml" /><stem n="greatli" chunk="Search_Chunk501.xml" /><stem n="unabl" chunk="Search_Chunk501.xml" /><stem n="feet" chunk="Search_Chunk501.xml" /><stem n="pavement" chunk="Search_Chunk501.xml" /><stem n="domin" chunk="Search_Chunk501.xml" /><stem n="stabilis" chunk="Search_Chunk501.xml" /><stem n="sho" chunk="Search_Chunk501.xml" /><stem n="four-" chunk="Search_Chunk501.xml" /><stem n="bump" chunk="Search_Chunk501.xml" /><stem n="kick" chunk="Search_Chunk501.xml" /><stem n="substanti" chunk="Search_Chunk501.xml" /><stem n="inter-fram" chunk="Search_Chunk501.xml" /><stem n="re-writ" chunk="Search_Chunk501.xml" /><stem n="locked-off" chunk="Search_Chunk501.xml" /><stem n="c++" chunk="Search_Chunk501.xml" /><stem n="simd" chunk="Search_Chunk502.xml" /><stem n="publish" chunk="Search_Chunk502.xml" /><stem n="compli" chunk="Search_Chunk502.xml" /><stem n="doc" chunk="Search_Chunk502.xml" /><stem n="blinkkernel" chunk="Search_Chunk502.xml" /><stem n="invertkernel" chunk="Search_Chunk502.xml" /><stem n="height-per-til" chunk="Search_Chunk502.xml" /><stem n="height-per" chunk="Search_Chunk502.xml" /><stem n="per-til" chunk="Search_Chunk502.xml" /><stem n="file-path" chunk="Search_Chunk502.xml" /><stem n="rpp" chunk="Search_Chunk502.xml" /><stem n="re-open" chunk="Search_Chunk502.xml" /><stem n="imagecomputationkernel" chunk="Search_Chunk502.xml" /><stem n="imagecomputationkernel&lt;ecomponentwise&gt;" chunk="Search_Chunk502.xml" /><stem n="param" chunk="Search_Chunk502.xml" /><stem n="member" chunk="Search_Chunk502.xml" /><stem n="bool_knob" chunk="Search_Chunk502.xml" /><stem n="bool" chunk="Search_Chunk502.xml" /><stem n="int_knob" chunk="Search_Chunk502.xml" /><stem n="multiint_knob" chunk="Search_Chunk502.xml" /><stem n="int2" chunk="Search_Chunk502.xml" /><stem n="int3" chunk="Search_Chunk502.xml" /><stem n="int4" chunk="Search_Chunk502.xml" /><stem n="float_knob" chunk="Search_Chunk502.xml" /><stem n="xy_knob" chunk="Search_Chunk502.xml" /><stem n="float2" chunk="Search_Chunk502.xml" /><stem n="xyz_knob" chunk="Search_Chunk502.xml" /><stem n="float3" chunk="Search_Chunk502.xml" /><stem n="acolor_knob" chunk="Search_Chunk502.xml" /><stem n="float4" chunk="Search_Chunk502.xml" /><stem n="eyedropp" chunk="Search_Chunk502.xml" /><stem n="array_knob" chunk="Search_Chunk502.xml" /><stem n="nine" chunk="Search_Chunk502.xml" /><stem n="float3x3" chunk="Search_Chunk502.xml" /><stem n="3x3" chunk="Search_Chunk502.xml" /><stem n="sixteen" chunk="Search_Chunk502.xml" /><stem n="float4x4" chunk="Search_Chunk502.xml" /><stem n="multifloat_knob" chunk="Search_Chunk502.xml" /><stem n="valuabl" chunk="Search_Chunk502.xml" /><stem n="wipekernel" chunk="Search_Chunk502.xml" /><stem n="timeout" chunk="Search_Chunk502.xml" /><stem n="prefac" chunk="Search_Chunk502.xml" /><stem n="board" chunk="Search_Chunk502.xml" /><stem n="boxsiz" chunk="Search_Chunk502.xml" /><stem n="color0" chunk="Search_Chunk502.xml" /><stem n="color1" chunk="Search_Chunk502.xml" /><stem n="color2" chunk="Search_Chunk502.xml" /><stem n="color3" chunk="Search_Chunk502.xml" /><stem n="linecolor" chunk="Search_Chunk502.xml" /><stem n="linewidth" chunk="Search_Chunk502.xml" /><stem n="centerlin" chunk="Search_Chunk502.xml" /><stem n="centerlinecolor" chunk="Search_Chunk502.xml" /><stem n="centerlinewidth" chunk="Search_Chunk502.xml" /><stem n="televis" chunk="Search_Chunk502.xml" /><stem n="smpte" chunk="Search_Chunk502.xml" /><stem n="barintens" chunk="Search_Chunk502.xml" /><stem n="centersatur" chunk="Search_Chunk502.xml" /><stem n="edgesatur" chunk="Search_Chunk502.xml" /><stem n="centervalu" chunk="Search_Chunk502.xml" /><stem n="edgevalu" chunk="Search_Chunk502.xml" /><stem n="fillformat" chunk="Search_Chunk502.xml" /><stem n="xywh" chunk="Search_Chunk502.xml" /><stem n="wh" chunk="Search_Chunk502.xml" /><stem n="ccrang" chunk="Search_Chunk502.xml" /><stem n="avgfram" chunk="Search_Chunk502.xml" /><stem n="maxlumapixdata" chunk="Search_Chunk502.xml" /><stem n="maxlumapixvalu" chunk="Search_Chunk502.xml" /><stem n="minlumapixdata" chunk="Search_Chunk502.xml" /><stem n="minlumapixvalu" chunk="Search_Chunk502.xml" /><stem n="beforerend" chunk="Search_Chunk502.xml" /><stem n="beforeframerend" chunk="Search_Chunk502.xml" /><stem n="afterframerend" chunk="Search_Chunk502.xml" /><stem n="afterrend" chunk="Search_Chunk502.xml" /><stem n="renderprogress" chunk="Search_Chunk502.xml" /><stem n="step-by-step" chunk="Search_Chunk502.xml" /><stem n="step-bi" chunk="Search_Chunk503.xml" /><stem n="by-step" chunk="Search_Chunk503.xml" /><stem n="redcod" chunk="Search_Chunk503.xml" /><stem n="dng" chunk="Search_Chunk503.xml" /><stem n="printf-styl" chunk="Search_Chunk503.xml" /><stem n="04d" chunk="Search_Chunk503.xml" /><stem n="cacheloc" chunk="Search_Chunk503.xml" /><stem n="proxy_format" chunk="Search_Chunk503.xml" /><stem n="1024x778" chunk="Search_Chunk503.xml" /><stem n="frame_mod" chunk="Search_Chunk503.xml" /><stem n="origfirst" chunk="Search_Chunk503.xml" /><stem n="origlast" chunk="Search_Chunk503.xml" /><stem n="on_error" chunk="Search_Chunk503.xml" /><stem n="suspect" chunk="Search_Chunk503.xml" /><stem n="re-read" chunk="Search_Chunk503.xml" /><stem n="auto_alpha" chunk="Search_Chunk503.xml" /><stem n="dng_colorspac" chunk="Search_Chunk503.xml" /><stem n="debay" chunk="Search_Chunk503.xml" /><stem n="dng_force_linear" chunk="Search_Chunk503.xml" /><stem n="dng_white_bal" chunk="Search_Chunk503.xml" /><stem n="dng_temperatur" chunk="Search_Chunk503.xml" /><stem n="dng_tint" chunk="Search_Chunk503.xml" /><stem n="dng_exposur" chunk="Search_Chunk503.xml" /><stem n="dng_shadow" chunk="Search_Chunk503.xml" /><stem n="offset_negative_display_window" chunk="Search_Chunk503.xml" /><stem n="noprefix" chunk="Search_Chunk503.xml" /><stem n="edge_pixel" chunk="Search_Chunk503.xml" /><stem n="mov32_ycbcr_matrix" chunk="Search_Chunk503.xml" /><stem n="mov64_ycbcr_matrix" chunk="Search_Chunk503.xml" /><stem n="mov32_codec" chunk="Search_Chunk503.xml" /><stem n="mov32_pixel_format" chunk="Search_Chunk503.xml" /><stem n="mov64_no_prefix" chunk="Search_Chunk503.xml" /><stem n="accompani" chunk="Search_Chunk503.xml" /><stem n="container-specif" chunk="Search_Chunk503.xml" /><stem n="mov64_match_meta_format" chunk="Search_Chunk503.xml" /><stem n="mov64_decode_video_level" chunk="Search_Chunk503.xml" /><stem n="0-240" chunk="Search_Chunk503.xml" /><stem n="240" chunk="Search_Chunk503.xml" /><stem n="0-960" chunk="Search_Chunk503.xml" /><stem n="960" chunk="Search_Chunk503.xml" /><stem n="0-1023" chunk="Search_Chunk503.xml" /><stem n="raster" chunk="Search_Chunk503.xml" /><stem n="imagesequ" chunk="Search_Chunk503.xml" /><stem n="lindex" chunk="Search_Chunk503.xml" /><stem n="shownmetadata" chunk="Search_Chunk503.xml" /><stem n="metadatafilt" chunk="Search_Chunk503.xml" /><stem n="metadatafiltermod" chunk="Search_Chunk503.xml" /><stem n="vimeo" chunk="Search_Chunk503.xml" /><stem n="transcript" chunk="Search_Chunk504.xml" /><stem n="pre-assign" chunk="Search_Chunk504.xml" /><stem n="hotkei" chunk="Search_Chunk504.xml" /><stem n="0-90" chunk="Search_Chunk504.xml" /><stem n="drag+drop" chunk="Search_Chunk504.xml" /><stem n="read1" chunk="Search_Chunk504.xml" /><stem n="1920x1012" chunk="Search_Chunk504.xml" /><stem n="2⁸" chunk="Search_Chunk504.xml" /><stem n="2³²" chunk="Search_Chunk504.xml" /><stem n="000000001" chunk="Search_Chunk504.xml" /><stem n="incred" chunk="Search_Chunk504.xml" /><stem n="tini" chunk="Search_Chunk504.xml" /><stem n="cc" chunk="Search_Chunk504.xml" /><stem n="blender" chunk="Search_Chunk504.xml" /><stem n="mango" chunk="Search_Chunk504.xml" /><stem n="0-9" chunk="Search_Chunk504.xml" /><stem n="frame_rang" chunk="Search_Chunk504.xml" /><stem n="cmd+drag" chunk="Search_Chunk504.xml" /><stem n="frame_range_lock" chunk="Search_Chunk504.xml" /><stem n="&lt;&lt;" chunk="Search_Chunk504.xml" /><stem n="&gt;&gt;increment" chunk="Search_Chunk504.xml" /><stem n="frame_incr" chunk="Search_Chunk504.xml" /><stem n="&gt;&gt;" chunk="Search_Chunk504.xml" /><stem n="zebra-strip" chunk="Search_Chunk504.xml" /><stem n="zebra" chunk="Search_Chunk504.xml" /><stem n="rgb_onli" chunk="Search_Chunk504.xml" /><stem n="downrez" chunk="Search_Chunk504.xml" /><stem n="ignore_pixel_aspect" chunk="Search_Chunk504.xml" /><stem n="zoom_lock" chunk="Search_Chunk504.xml" /><stem n="show_overscan" chunk="Search_Chunk504.xml" /><stem n="center_fstop" chunk="Search_Chunk504.xml" /><stem n="non-integ" chunk="Search_Chunk504.xml" /><stem n="65685" chunk="Search_Chunk504.xml" /><stem n="shutter_angl" chunk="Search_Chunk504.xml" /><stem n="0-360" chunk="Search_Chunk504.xml" /><stem n="gl_buffer_depth" chunk="Search_Chunk504.xml" /><stem n="usegpuforview" chunk="Search_Chunk504.xml" /><stem n="claus" chunk="Search_Chunk504.xml" /><stem n="usegpuforinput" chunk="Search_Chunk504.xml" /><stem n="disablegpuditherforview" chunk="Search_Chunk504.xml" /><stem n="input_process_nod" chunk="Search_Chunk504.xml" /><stem n="input_process" chunk="Search_Chunk504.xml" /><stem n="viewerinputord" chunk="Search_Chunk504.xml" /><stem n="monitorouten" chunk="Search_Chunk504.xml" /><stem n="monitoroutdevic" chunk="Search_Chunk504.xml" /><stem n="monitoroutmod" chunk="Search_Chunk504.xml" /><stem n="grid_origin" chunk="Search_Chunk504.xml" /><stem n="use_alpha" chunk="Search_Chunk504.xml" /><stem n="gl_light" chunk="Search_Chunk504.xml" /><stem n="gl_alpha_clip" chunk="Search_Chunk504.xml" /><stem n="gl_poly_offset" chunk="Search_Chunk504.xml" /><stem n="hidden-lin" chunk="Search_Chunk504.xml" /><stem n="show_point" chunk="Search_Chunk504.xml" /><stem n="show_point_num" chunk="Search_Chunk504.xml" /><stem n="show_point_info" chunk="Search_Chunk504.xml" /><stem n="show_point_norm" chunk="Search_Chunk504.xml" /><stem n="show_point_uv" chunk="Search_Chunk504.xml" /><stem n="show_vertex_num" chunk="Search_Chunk504.xml" /><stem n="show_vertex_norm" chunk="Search_Chunk504.xml" /><stem n="show_vertex_uv" chunk="Search_Chunk504.xml" /><stem n="show_prim_num" chunk="Search_Chunk504.xml" /><stem n="show_prim_norm" chunk="Search_Chunk504.xml" /><stem n="show_prim_bbox" chunk="Search_Chunk504.xml" /><stem n="grid_displai" chunk="Search_Chunk504.xml" /><stem n="default_len" chunk="Search_Chunk504.xml" /><stem n="file_typ" chunk="Search_Chunk504.xml" /><stem n="render_ord" chunk="Search_Chunk504.xml" /><stem n="use_limit" chunk="Search_Chunk504.xml" /><stem n="edge_cod" chunk="Search_Chunk504.xml" /><stem n="0000" chunk="Search_Chunk504.xml" /><stem n="12-bit" chunk="Search_Chunk504.xml" /><stem n="10-" chunk="Search_Chunk504.xml" /><stem n="bigendian" chunk="Search_Chunk504.xml" /><stem n="big-endian" chunk="Search_Chunk504.xml" /><stem n="native-endian" chunk="Search_Chunk504.xml" /><stem n="zip" chunk="Search_Chunk504.xml" /><stem n="heroview" chunk="Search_Chunk504.xml" /><stem n="write_full_layer_nam" chunk="Search_Chunk504.xml" /><stem n="foll" chunk="Search_Chunk504.xml" /><stem n="truncatechannelnam" chunk="Search_Chunk504.xml" /><stem n="compatibl" chunk="Search_Chunk504.xml" /><stem n="_jpeg_qual" chunk="Search_Chunk504.xml" /><stem n="meta_codec" chunk="Search_Chunk504.xml" /><stem n="meta_encod" chunk="Search_Chunk504.xml" /><stem n="mov32_fp" chunk="Search_Chunk504.xml" /><stem n="mov32_audiofil" chunk="Search_Chunk504.xml" /><stem n="mov32_audio_offset" chunk="Search_Chunk504.xml" /><stem n="mov32_unit" chunk="Search_Chunk504.xml" /><stem n="mov32_write_timecod" chunk="Search_Chunk504.xml" /><stem n="mov32_codecopt" chunk="Search_Chunk504.xml" /><stem n="mov32_flatten" chunk="Search_Chunk504.xml" /><stem n="mov32_use_format_aspect" chunk="Search_Chunk504.xml" /><stem n="mov32_ycbcr_matrix_typ" chunk="Search_Chunk504.xml" /><stem n="mov32_write_nclc" chunk="Search_Chunk505.xml" /><stem n="mov32_write_gamma" chunk="Search_Chunk505.xml" /><stem n="mov32_write_pror" chunk="Search_Chunk505.xml" /><stem n="mov64_dnxhd_codec_profil" chunk="Search_Chunk505.xml" /><stem n="bit-rat" chunk="Search_Chunk505.xml" /><stem n="mov64_fp" chunk="Search_Chunk505.xml" /><stem n="mov64_audiofil" chunk="Search_Chunk505.xml" /><stem n="mov64_audio_offset" chunk="Search_Chunk505.xml" /><stem n="mov64_unit" chunk="Search_Chunk505.xml" /><stem n="mov64_write_timecod" chunk="Search_Chunk505.xml" /><stem n="mov64_dnxhd_encode_video_rang" chunk="Search_Chunk505.xml" /><stem n="16-240" chunk="Search_Chunk505.xml" /><stem n="64-960" chunk="Search_Chunk505.xml" /><stem n="mov64_bitr" chunk="Search_Chunk505.xml" /><stem n="20000" chunk="Search_Chunk505.xml" /><stem n="mov64_bitrate_toler" chunk="Search_Chunk505.xml" /><stem n="40000000" chunk="Search_Chunk505.xml" /><stem n="mov64_quailty_min" chunk="Search_Chunk505.xml" /><stem n="mov64_quailty_max" chunk="Search_Chunk505.xml" /><stem n="mov64_gop_s" chunk="Search_Chunk505.xml" /><stem n="mov64_b_fram" chunk="Search_Chunk505.xml" /><stem n="mov64_write_nclc" chunk="Search_Chunk505.xml" /><stem n="rle" chunk="Search_Chunk505.xml" /><stem n="deflat" chunk="Search_Chunk505.xml" /><stem n="snowflak" chunk="Search_Chunk505.xml" /><stem n="frozen" chunk="Search_Chunk505.xml" /><stem n="asid" chunk="Search_Chunk505.xml" /><stem n="industrial-strength" chunk="Search_Chunk505.xml" /><stem n="investig" chunk="Search_Chunk505.xml" /><stem n="talk" chunk="Search_Chunk505.xml" /><stem n="unusu" chunk="Search_Chunk505.xml" /><stem n="640x480" chunk="Search_Chunk505.xml" /><stem n="thrown" chunk="Search_Chunk505.xml" /><stem n="shirt" chunk="Search_Chunk505.xml" /><stem n="aggress" chunk="Search_Chunk505.xml" /><stem n="hueshift" chunk="Search_Chunk505.xml" /><stem n="+select" chunk="Search_Chunk505.xml" /><stem n="right-mous" chunk="Search_Chunk505.xml" /><stem n="right-mouse-button" chunk="Search_Chunk505.xml" /><stem n="right-mouse-button-click" chunk="Search_Chunk505.xml" /><stem n="mouse-button-click" chunk="Search_Chunk505.xml" /><stem n="button-click" chunk="Search_Chunk505.xml" /><stem n="test5" chunk="Search_Chunk505.xml" /><stem n="pound" chunk="Search_Chunk505.xml" /><stem n="0-99" chunk="Search_Chunk505.xml" /><stem n="expression-bas" chunk="Search_Chunk505.xml" /><stem n="quantiz" chunk="Search_Chunk505.xml" /><stem n="reduct" chunk="Search_Chunk505.xml" /><stem n="human" chunk="Search_Chunk505.xml" /><stem n="impress" chunk="Search_Chunk505.xml" /><stem n="monodith" chunk="Search_Chunk505.xml" /><stem n="static_se" chunk="Search_Chunk505.xml" /><stem n="maskchannelinput" chunk="Search_Chunk505.xml" /><stem n="invert_mask" chunk="Search_Chunk505.xml" /><stem n="invert_unpremult" chunk="Search_Chunk505.xml" /><stem n="dirt" chunk="Search_Chunk506.xml" /><stem n="view_sourc" chunk="Search_Chunk506.xml" /><stem n="frame_offset" chunk="Search_Chunk506.xml" /><stem n="edge_hard" chunk="Search_Chunk506.xml" /><stem n="maskchannel" chunk="Search_Chunk506.xml" /><stem n="impli" chunk="Search_Chunk506.xml" /><stem n="un-edit" chunk="Search_Chunk506.xml" /><stem n="oval" chunk="Search_Chunk506.xml" /><stem n="roundish" chunk="Search_Chunk506.xml" /><stem n="rainbow-lik" chunk="Search_Chunk506.xml" /><stem n="rainbow" chunk="Search_Chunk506.xml" /><stem n="donut-lik" chunk="Search_Chunk506.xml" /><stem n="radii" chunk="Search_Chunk506.xml" /><stem n="thickest" chunk="Search_Chunk506.xml" /><stem n="120" chunk="Search_Chunk506.xml" /><stem n="mult" chunk="Search_Chunk506.xml" /><stem n="size_mult" chunk="Search_Chunk506.xml" /><stem n="ring_color" chunk="Search_Chunk506.xml" /><stem n="inner_color" chunk="Search_Chunk506.xml" /><stem n="_falloff" chunk="Search_Chunk506.xml" /><stem n="inner_falloff" chunk="Search_Chunk506.xml" /><stem n="chroma_spread" chunk="Search_Chunk506.xml" /><stem n="chroma_shift" chunk="Search_Chunk506.xml" /><stem n="chroma_shift_angl" chunk="Search_Chunk506.xml" /><stem n="chroma_shift_angle_add" chunk="Search_Chunk506.xml" /><stem n="vis_in" chunk="Search_Chunk506.xml" /><stem n="vis_out" chunk="Search_Chunk506.xml" /><stem n="vis_mask" chunk="Search_Chunk506.xml" /><stem n="vis_mask_s" chunk="Search_Chunk506.xml" /><stem n="corners_angl" chunk="Search_Chunk506.xml" /><stem n="corners_angle_add" chunk="Search_Chunk506.xml" /><stem n="asymmetri" chunk="Search_Chunk506.xml" /><stem n="asym_repeat" chunk="Search_Chunk506.xml" /><stem n="circumfer" chunk="Search_Chunk506.xml" /><stem n="asym_multipli" chunk="Search_Chunk506.xml" /><stem n="asym_falloff" chunk="Search_Chunk506.xml" /><stem n="asym_angl" chunk="Search_Chunk506.xml" /><stem n="mult_num" chunk="Search_Chunk506.xml" /><stem n="mult_se" chunk="Search_Chunk506.xml" /><stem n="mult_offset" chunk="Search_Chunk506.xml" /><stem n="mult_offset_se" chunk="Search_Chunk506.xml" /><stem n="48235" chunk="Search_Chunk506.xml" /><stem n="mult_siz" chunk="Search_Chunk506.xml" /><stem n="mult_size_se" chunk="Search_Chunk506.xml" /><stem n="94335" chunk="Search_Chunk506.xml" /><stem n="mult_color" chunk="Search_Chunk506.xml" /><stem n="mult_color_se" chunk="Search_Chunk506.xml" /><stem n="77088" chunk="Search_Chunk506.xml" /><stem n="mult_bright" chunk="Search_Chunk506.xml" /><stem n="mult_brightness_se" chunk="Search_Chunk506.xml" /><stem n="75021" chunk="Search_Chunk506.xml" /><stem n="mult_vis" chunk="Search_Chunk506.xml" /><stem n="mult_visibility_se" chunk="Search_Chunk506.xml" /><stem n="68995" chunk="Search_Chunk506.xml" /><stem n="mult_flatten" chunk="Search_Chunk506.xml" /><stem n="mult_flattening_se" chunk="Search_Chunk506.xml" /><stem n="45203" chunk="Search_Chunk506.xml" /><stem n="mult_rot" chunk="Search_Chunk506.xml" /><stem n="mult_rotate_se" chunk="Search_Chunk506.xml" /><stem n="49429" chunk="Search_Chunk506.xml" /><stem n="speedup" chunk="Search_Chunk506.xml" /><stem n="multipenta" chunk="Search_Chunk506.xml" /><stem n="lgrainbow" chunk="Search_Chunk506.xml" /><stem n="glowbal" chunk="Search_Chunk506.xml" /><stem n="manybright" chunk="Search_Chunk506.xml" /><stem n="symmetry4" chunk="Search_Chunk506.xml" /><stem n="oddlen" chunk="Search_Chunk506.xml" /><stem n="from_color" chunk="Search_Chunk506.xml" /><stem n="to_color" chunk="Search_Chunk506.xml" /><stem n="effect_onli" chunk="Search_Chunk506.xml" /><stem n="w_channel" chunk="Search_Chunk506.xml" /><stem n="5248" chunk="Search_Chunk506.xml" /><stem n="5218" chunk="Search_Chunk506.xml" /><stem n="134" chunk="Search_Chunk506.xml" /><stem n="-frame" chunk="Search_Chunk506.xml" /><stem n="5279" chunk="Search_Chunk506.xml" /><stem n="fx214" chunk="Search_Chunk506.xml" /><stem n="gt5274" chunk="Search_Chunk506.xml" /><stem n="5217" chunk="Search_Chunk506.xml" /><stem n="red_siz" chunk="Search_Chunk506.xml" /><stem n="green_siz" chunk="Search_Chunk506.xml" /><stem n="blue_siz" chunk="Search_Chunk506.xml" /><stem n="red_i" chunk="Search_Chunk506.xml" /><stem n="green_i" chunk="Search_Chunk506.xml" /><stem n="blue_i" chunk="Search_Chunk506.xml" /><stem n="red_m" chunk="Search_Chunk506.xml" /><stem n="416" chunk="Search_Chunk506.xml" /><stem n="green_m" chunk="Search_Chunk506.xml" /><stem n="46" chunk="Search_Chunk506.xml" /><stem n="blue_m" chunk="Search_Chunk506.xml" /><stem n="maskgrain" chunk="Search_Chunk506.xml" /><stem n="contamin" chunk="Search_Chunk506.xml" /><stem n="cliptyp" chunk="Search_Chunk506.xml" /><stem n="400" chunk="Search_Chunk506.xml" /><stem n="onlywrap" chunk="Search_Chunk506.xml" /><stem n="disableluma" chunk="Search_Chunk506.xml" /><stem n="enableglow" chunk="Search_Chunk506.xml" /><stem n="lumatoler" chunk="Search_Chunk506.xml" /><stem n="highlightmerg" chunk="Search_Chunk506.xml" /><stem n="useconst" chunk="Search_Chunk506.xml" /><stem n="shadows_gamma" chunk="Search_Chunk506.xml" /><stem n="shadows_gain" chunk="Search_Chunk506.xml" /><stem n="shadows_offset" chunk="Search_Chunk506.xml" /><stem n="midtones_gamma" chunk="Search_Chunk506.xml" /><stem n="midtones_gain" chunk="Search_Chunk506.xml" /><stem n="midtones_offset" chunk="Search_Chunk506.xml" /><stem n="highlights_gamma" chunk="Search_Chunk506.xml" /><stem n="highlights_gain" chunk="Search_Chunk506.xml" /><stem n="highlights_offset" chunk="Search_Chunk506.xml" /><stem n="markerremov" chunk="Search_Chunk506.xml" /><stem n="linearsearch" chunk="Search_Chunk506.xml" /><stem n="ctrlmask" chunk="Search_Chunk506.xml" /><stem n="x_offset" chunk="Search_Chunk506.xml" /><stem n="y_offset" chunk="Search_Chunk506.xml" /><stem n="non-nois" chunk="Search_Chunk506.xml" /><stem n="+1" chunk="Search_Chunk506.xml" /><stem n="ysize" chunk="Search_Chunk506.xml" /><stem n="350" chunk="Search_Chunk506.xml" /><stem n="zoffset" chunk="Search_Chunk506.xml" /><stem n="nyquist" chunk="Search_Chunk506.xml" /><stem n="granular" chunk="Search_Chunk506.xml" /><stem n="xrotat" chunk="Search_Chunk506.xml" /><stem n="yrotat" chunk="Search_Chunk506.xml" /><stem n="gradat" chunk="Search_Chunk506.xml" /><stem n="non-radi" chunk="Search_Chunk506.xml" /><stem n="plinear" chunk="Search_Chunk506.xml" /><stem n="nake" chunk="Search_Chunk506.xml" /><stem n="non-ramp" chunk="Search_Chunk506.xml" /><stem n="non-rectangl" chunk="Search_Chunk506.xml" /><stem n="outputmask" chunk="Search_Chunk506.xml" /><stem n="feather_on" chunk="Search_Chunk506.xml" /><stem n="feather_falloff" chunk="Search_Chunk506.xml" /><stem n="feather_typ" chunk="Search_Chunk506.xml" /><stem n="li" chunk="Search_Chunk506.xml" /><stem n="halfwai" chunk="Search_Chunk506.xml" /><stem n="stereo_offset" chunk="Search_Chunk506.xml" /><stem n="re-ord" chunk="Search_Chunk506.xml" /><stem n="skewx" chunk="Search_Chunk506.xml" /><stem n="skewi" chunk="Search_Chunk506.xml" /><stem n="skew_ord" chunk="Search_Chunk506.xml" /><stem n="778" chunk="Search_Chunk506.xml" /><stem n="transform_matrix" chunk="Search_Chunk506.xml" /><stem n="3rd" chunk="Search_Chunk506.xml" /><stem n="global_motionblur_on" chunk="Search_Chunk506.xml" /><stem n="motionblur_on" chunk="Search_Chunk506.xml" /><stem n="motionblur_" chunk="Search_Chunk506.xml" /><stem n="shutter_offset_" chunk="Search_Chunk506.xml" /><stem n="centr" chunk="Search_Chunk506.xml" /><stem n="shutter_offset" chunk="Search_Chunk507.xml" /><stem n="global_motionblur" chunk="Search_Chunk507.xml" /><stem n="global_motionblur_" chunk="Search_Chunk507.xml" /><stem n="shape_sourc" chunk="Search_Chunk507.xml" /><stem n="blending_mod" chunk="Search_Chunk507.xml" /><stem n="a&lt;" chunk="Search_Chunk507.xml" /><stem n="a&gt;" chunk="Search_Chunk507.xml" /><stem n="b&lt;" chunk="Search_Chunk507.xml" /><stem n="openspline_width" chunk="Search_Chunk507.xml" /><stem n="openspline_start_end_typ" chunk="Search_Chunk507.xml" /><stem n="openspline_last_end_typ" chunk="Search_Chunk507.xml" /><stem n="source_transform_transl" chunk="Search_Chunk507.xml" /><stem n="source_translate_" chunk="Search_Chunk507.xml" /><stem n="source_transform_rot" chunk="Search_Chunk507.xml" /><stem n="source_transform_scal" chunk="Search_Chunk507.xml" /><stem n="source_transform_skewx" chunk="Search_Chunk507.xml" /><stem n="source_transform_skewi" chunk="Search_Chunk507.xml" /><stem n="source_transform_skew_ord" chunk="Search_Chunk507.xml" /><stem n="source_transform_cent" chunk="Search_Chunk507.xml" /><stem n="source_filt" chunk="Search_Chunk507.xml" /><stem n="jaggi" chunk="Search_Chunk507.xml" /><stem n="moir" chunk="Search_Chunk507.xml" /><stem n="source_black_" chunk="Search_Chunk507.xml" /><stem n="source_time_offset" chunk="Search_Chunk507.xml" /><stem n="source_time_offset_typ" chunk="Search_Chunk507.xml" /><stem n="source_view" chunk="Search_Chunk507.xml" /><stem n="lifetime_typ" chunk="Search_Chunk507.xml" /><stem n="lifetime_start" chunk="Search_Chunk507.xml" /><stem n="lifetime_end" chunk="Search_Chunk507.xml" /><stem n="pretrack_filt" chunk="Search_Chunk507.xml" /><stem n="adjust_for_luminance_chang" chunk="Search_Chunk507.xml" /><stem n="clamp_footag" chunk="Search_Chunk507.xml" /><stem n="hide_progress_bar" chunk="Search_Chunk507.xml" /><stem n="export_menu" chunk="Search_Chunk507.xml" /><stem n="export_button" chunk="Search_Chunk507.xml" /><stem n="link_output" chunk="Search_Chunk507.xml" /><stem n="point1" chunk="Search_Chunk507.xml" /><stem n="point2" chunk="Search_Chunk507.xml" /><stem n="point3" chunk="Search_Chunk507.xml" /><stem n="point4" chunk="Search_Chunk507.xml" /><stem n="pt1" chunk="Search_Chunk507.xml" /><stem n="pt2" chunk="Search_Chunk507.xml" /><stem n="pt3" chunk="Search_Chunk507.xml" /><stem n="pt4" chunk="Search_Chunk507.xml" /><stem n="offset1" chunk="Search_Chunk507.xml" /><stem n="offset2" chunk="Search_Chunk507.xml" /><stem n="offset3" chunk="Search_Chunk507.xml" /><stem n="offset4" chunk="Search_Chunk507.xml" /><stem n="of1" chunk="Search_Chunk507.xml" /><stem n="of2" chunk="Search_Chunk507.xml" /><stem n="of3" chunk="Search_Chunk507.xml" /><stem n="of4" chunk="Search_Chunk507.xml" /><stem n="reference_fram" chunk="Search_Chunk507.xml" /><stem n="rope" chunk="Search_Chunk507.xml" /><stem n="equip" chunk="Search_Chunk507.xml" /><stem n="eventu" chunk="Search_Chunk507.xml" /><stem n="hook" chunk="Search_Chunk507.xml" /><stem n="net" chunk="Search_Chunk507.xml" /><stem n="bezier2" chunk="Search_Chunk507.xml" /><stem n="stroke-bas" chunk="Search_Chunk507.xml" /><stem n="3v8" chunk="Search_Chunk507.xml" /><stem n="deliber" chunk="Search_Chunk507.xml" /><stem n="bloat" chunk="Search_Chunk507.xml" /><stem n="wors" chunk="Search_Chunk507.xml" /><stem n="layer2" chunk="Search_Chunk507.xml" /><stem n="catch" chunk="Search_Chunk507.xml" /><stem n="layer8" chunk="Search_Chunk507.xml" /><stem n="lag" chunk="Search_Chunk507.xml" /><stem n="vastli" chunk="Search_Chunk507.xml" /><stem n="untreat" chunk="Search_Chunk507.xml" /><stem n="discrep" chunk="Search_Chunk507.xml" /><stem n="uncorrect" chunk="Search_Chunk507.xml" /><stem n="ear" chunk="Search_Chunk507.xml" /><stem n="pump" chunk="Search_Chunk507.xml" /><stem n="hat" chunk="Search_Chunk507.xml" /><stem n="shortli" chunk="Search_Chunk507.xml" /><stem n="hand-held" chunk="Search_Chunk507.xml" /><stem n="him" chunk="Search_Chunk507.xml" /><stem n="howard" chunk="Search_Chunk507.xml" /><stem n="jone" chunk="Search_Chunk507.xml" /><stem n="goodby" chunk="Search_Chunk508.xml" /><stem n="ing" chunk="Search_Chunk508.xml" /><stem n="ellipse1" chunk="Search_Chunk508.xml" /><stem n="re-draw" chunk="Search_Chunk508.xml" /><stem n="photoshop" chunk="Search_Chunk508.xml" /><stem n="ellipse2" chunk="Search_Chunk508.xml" /><stem n="eye1" chunk="Search_Chunk508.xml" /><stem n="everyon" chunk="Search_Chunk508.xml" /><stem n="inde" chunk="Search_Chunk508.xml" /><stem n="smilei" chunk="Search_Chunk508.xml" /><stem n="re-posit" chunk="Search_Chunk508.xml" /><stem n="amaz" chunk="Search_Chunk508.xml" /><stem n="450" chunk="Search_Chunk508.xml" /><stem n="70" chunk="Search_Chunk508.xml" /><stem n="cumbersom" chunk="Search_Chunk508.xml" /><stem n="re-fram" chunk="Search_Chunk508.xml" /><stem n="clever" chunk="Search_Chunk508.xml" /><stem n="gallowwalk" chunk="Search_Chunk508.xml" /><stem n="bauer" chunk="Search_Chunk508.xml" /><stem n="blakedew" chunk="Search_Chunk508.xml" /><stem n="730" chunk="Search_Chunk508.xml" /><stem n="wacom" chunk="Search_Chunk508.xml" /><stem n="different-color" chunk="Search_Chunk508.xml" /><stem n="68" chunk="Search_Chunk508.xml" /><stem n="78" chunk="Search_Chunk508.xml" /><stem n="58" chunk="Search_Chunk508.xml" /><stem n="forgotten" chunk="Search_Chunk508.xml" /><stem n="crossov" chunk="Search_Chunk508.xml" /><stem n="hoodcleanup" chunk="Search_Chunk508.xml" /><stem n="paint_sourc" chunk="Search_Chunk508.xml" /><stem n="brush_sourc" chunk="Search_Chunk508.xml" /><stem n="brush_typ" chunk="Search_Chunk508.xml" /><stem n="brush_siz" chunk="Search_Chunk508.xml" /><stem n="brush_spac" chunk="Search_Chunk508.xml" /><stem n="brush_hard" chunk="Search_Chunk508.xml" /><stem n="effect_parameter1" chunk="Search_Chunk508.xml" /><stem n="dynamic_transpar" chunk="Search_Chunk508.xml" /><stem n="dynamic_s" chunk="Search_Chunk508.xml" /><stem n="dynamic_hard" chunk="Search_Chunk508.xml" /><stem n="buildup" chunk="Search_Chunk508.xml" /><stem n="writeon_start" chunk="Search_Chunk508.xml" /><stem n="writeon_end" chunk="Search_Chunk508.xml" /><stem n="source_translate_round" chunk="Search_Chunk508.xml" /><stem n="source_black_outsid" chunk="Search_Chunk508.xml" /><stem n="blood" chunk="Search_Chunk508.xml" /><stem n="re-project" chunk="Search_Chunk508.xml" /><stem n="naiv" chunk="Search_Chunk508.xml" /><stem n="h1" chunk="Search_Chunk508.xml" /><stem n="j1" chunk="Search_Chunk508.xml" /><stem n="two-view" chunk="Search_Chunk508.xml" /><stem n="slippag" chunk="Search_Chunk508.xml" /><stem n="fullgrain" chunk="Search_Chunk508.xml" /><stem n="$program_nam" chunk="Search_Chunk508.xml" /><stem n="first_" chunk="Search_Chunk508.xml" /><stem n="last_" chunk="Search_Chunk508.xml" /><stem n="minwidth" chunk="Search_Chunk508.xml" /><stem n="721" chunk="Search_Chunk508.xml" /><stem n="30000001" chunk="Search_Chunk508.xml" /><stem n="40000001" chunk="Search_Chunk508.xml" /><stem n="use_precomput" chunk="Search_Chunk508.xml" /><stem n="intermitt" chunk="Search_Chunk508.xml" /><stem n="firework" chunk="Search_Chunk508.xml" /><stem n="triangle_think" chunk="Search_Chunk508.xml" /><stem n="700" chunk="Search_Chunk508.xml" /><stem n="600" chunk="Search_Chunk508.xml" /><stem n="relative_rot" chunk="Search_Chunk508.xml" /><stem n="nb" chunk="Search_Chunk508.xml" /><stem n="ray_nb" chunk="Search_Chunk508.xml" /><stem n="ray_thick" chunk="Search_Chunk508.xml" /><stem n="random_thick" chunk="Search_Chunk508.xml" /><stem n="spark_falloff" chunk="Search_Chunk508.xml" /><stem n="sparkel" chunk="Search_Chunk508.xml" /><stem n="ray_falloff" chunk="Search_Chunk508.xml" /><stem n="vismask" chunk="Search_Chunk508.xml" /><stem n="vismask_s" chunk="Search_Chunk508.xml" /><stem n="crawl" chunk="Search_Chunk508.xml" /><stem n="sparkle_crawl" chunk="Search_Chunk508.xml" /><stem n="fadetoler" chunk="Search_Chunk508.xml" /><stem n="broken" chunk="Search_Chunk508.xml" /><stem n="broken_rai" chunk="Search_Chunk508.xml" /><stem n="broken_affect" chunk="Search_Chunk508.xml" /><stem n="broken_start" chunk="Search_Chunk508.xml" /><stem n="random_broken_start" chunk="Search_Chunk508.xml" /><stem n="broken_hol" chunk="Search_Chunk508.xml" /><stem n="random_broken_hol" chunk="Search_Chunk508.xml" /><stem n="sparks_direct" chunk="Search_Chunk508.xml" /><stem n="sparks_angl" chunk="Search_Chunk508.xml" /><stem n="utopia" chunk="Search_Chunk508.xml" /><stem n="pfa" chunk="Search_Chunk508.xml" /><stem n="pfb" chunk="Search_Chunk508.xml" /><stem n="liimit" chunk="Search_Chunk508.xml" /><stem n="font_siz" chunk="Search_Chunk508.xml" /><stem n="font_width" chunk="Search_Chunk508.xml" /><stem n="font_height" chunk="Search_Chunk508.xml" /><stem n="baseline_shift" chunk="Search_Chunk508.xml" /><stem n="group_anim" chunk="Search_Chunk508.xml" /><stem n="enable_shadow" chunk="Search_Chunk508.xml" /><stem n="shadow_inherit_input_color" chunk="Search_Chunk508.xml" /><stem n="seper" chunk="Search_Chunk508.xml" /><stem n="split-field" chunk="Search_Chunk508.xml" /><stem n="fadein" chunk="Search_Chunk508.xml" /><stem n="fadeout" chunk="Search_Chunk508.xml" /><stem n="cater" chunk="Search_Chunk508.xml" /><stem n="firstfram" chunk="Search_Chunk508.xml" /><stem n="lastfram" chunk="Search_Chunk508.xml" /><stem n="meta_from_first" chunk="Search_Chunk508.xml" /><stem n="numfram" chunk="Search_Chunk508.xml" /><stem n="frames-1" chunk="Search_Chunk508.xml" /><stem n="trail-lik" chunk="Search_Chunk508.xml" /><stem n="startfram" chunk="Search_Chunk508.xml" /><stem n="endfram" chunk="Search_Chunk508.xml" /><stem n="userang" chunk="Search_Chunk508.xml" /><stem n="getinputrang" chunk="Search_Chunk508.xml" /><stem n="inputmask" chunk="Search_Chunk508.xml" /><stem n="blendmask" chunk="Search_Chunk508.xml" /><stem n="fifth" chunk="Search_Chunk508.xml" /><stem n="disregard" chunk="Search_Chunk508.xml" /><stem n="first_fram" chunk="Search_Chunk508.xml" /><stem n="gpunam" chunk="Search_Chunk508.xml" /><stem n="usegpuifavail" chunk="Search_Chunk508.xml" /><stem n="resetinputrang" chunk="Search_Chunk508.xml" /><stem n="retimedchannel" chunk="Search_Chunk508.xml" /><stem n="timing2" chunk="Search_Chunk508.xml" /><stem n="timingoutputspe" chunk="Search_Chunk508.xml" /><stem n="timinginputspe" chunk="Search_Chunk508.xml" /><stem n="timingframe2" chunk="Search_Chunk508.xml" /><stem n="motionestim" chunk="Search_Chunk508.xml" /><stem n="vectordetail" chunk="Search_Chunk508.xml" /><stem n="resampletyp" chunk="Search_Chunk508.xml" /><stem n="shuttersampl" chunk="Search_Chunk508.xml" /><stem n="shuttertim" chunk="Search_Chunk508.xml" /><stem n="imagin" chunk="Search_Chunk508.xml" /><stem n="autoshuttertim" chunk="Search_Chunk509.xml" /><stem n="mattechannel" chunk="Search_Chunk509.xml" /><stem n="flickercompens" chunk="Search_Chunk509.xml" /><stem n="legacymodenuke9" chunk="Search_Chunk509.xml" /><stem n="weightr" chunk="Search_Chunk509.xml" /><stem n="weightgreen" chunk="Search_Chunk509.xml" /><stem n="weightblu" chunk="Search_Chunk509.xml" /><stem n="vectorspac" chunk="Search_Chunk509.xml" /><stem n="showvector" chunk="Search_Chunk509.xml" /><stem n="non-interlac" chunk="Search_Chunk509.xml" /><stem n="field_dom" chunk="Search_Chunk509.xml" /><stem n="first_lock" chunk="Search_Chunk509.xml" /><stem n="last_lock" chunk="Search_Chunk509.xml" /><stem n="temporalmedian" chunk="Search_Chunk509.xml" /><stem n="shuttercustomoffset" chunk="Search_Chunk509.xml" /><stem n="rock" chunk="Search_Chunk509.xml" /><stem n="pre-exist" chunk="Search_Chunk509.xml" /><stem n="15-40" chunk="Search_Chunk509.xml" /><stem n="timeclip1" chunk="Search_Chunk509.xml" /><stem n="transform7" chunk="Search_Chunk509.xml" /><stem n="15-29" chunk="Search_Chunk509.xml" /><stem n="arch" chunk="Search_Chunk509.xml" /><stem n="laid" chunk="Search_Chunk509.xml" /><stem n="a3" chunk="Search_Chunk509.xml" /><stem n="timeclip2" chunk="Search_Chunk509.xml" /><stem n="timeclip3" chunk="Search_Chunk509.xml" /><stem n="echo-lik" chunk="Search_Chunk509.xml" /><stem n="streak" chunk="Search_Chunk509.xml" /><stem n="framesbehind" chunk="Search_Chunk509.xml" /><stem n="framesfad" chunk="Search_Chunk509.xml" /><stem n="time_offset" chunk="Search_Chunk509.xml" /><stem n="reverse_input" chunk="Search_Chunk509.xml" /><stem n="df" chunk="Search_Chunk509.xml" /><stem n="dt" chunk="Search_Chunk509.xml" /><stem n="grei" chunk="Search_Chunk509.xml" /><stem n="addchannel" chunk="Search_Chunk509.xml" /><stem n="channels2" chunk="Search_Chunk509.xml" /><stem n="channels3" chunk="Search_Chunk509.xml" /><stem n="channels4" chunk="Search_Chunk509.xml" /><stem n="from0" chunk="Search_Chunk509.xml" /><stem n="to0" chunk="Search_Chunk509.xml" /><stem n="from1" chunk="Search_Chunk509.xml" /><stem n="to1" chunk="Search_Chunk509.xml" /><stem n="from2" chunk="Search_Chunk509.xml" /><stem n="to2" chunk="Search_Chunk509.xml" /><stem n="from3" chunk="Search_Chunk509.xml" /><stem n="to3" chunk="Search_Chunk509.xml" /><stem n="metainput" chunk="Search_Chunk509.xml" /><stem n="rangeinput" chunk="Search_Chunk509.xml" /><stem n="in2" chunk="Search_Chunk509.xml" /><stem n="out2" chunk="Search_Chunk509.xml" /><stem n="fed" chunk="Search_Chunk509.xml" /><stem n="minclampto" chunk="Search_Chunk509.xml" /><stem n="minimum_en" chunk="Search_Chunk509.xml" /><stem n="maxclampto" chunk="Search_Chunk509.xml" /><stem n="maximum_en" chunk="Search_Chunk509.xml" /><stem n="illeg" chunk="Search_Chunk509.xml" /><stem n="minclampto_" chunk="Search_Chunk509.xml" /><stem n="maxclampto_" chunk="Search_Chunk509.xml" /><stem n="out-of-rang" chunk="Search_Chunk509.xml" /><stem n="of-rang" chunk="Search_Chunk509.xml" /><stem n="calibr" chunk="Search_Chunk509.xml" /><stem n="cube_s" chunk="Search_Chunk509.xml" /><stem n="realiti" chunk="Search_Chunk509.xml" /><stem n="mix_lumin" chunk="Search_Chunk509.xml" /><stem n="setrgb" chunk="Search_Chunk509.xml" /><stem n="setrgba" chunk="Search_Chunk509.xml" /><stem n="seta" chunk="Search_Chunk509.xml" /><stem n="colormatrix" chunk="Search_Chunk509.xml" /><stem n="subformat" chunk="Search_Chunk509.xml" /><stem n="colorspace_in" chunk="Search_Chunk509.xml" /><stem n="illuninant_in" chunk="Search_Chunk509.xml" /><stem n="d65" chunk="Search_Chunk509.xml" /><stem n="mid-dai" chunk="Search_Chunk509.xml" /><stem n="western" chunk="Search_Chunk509.xml" /><stem n="northern" chunk="Search_Chunk509.xml" /><stem n="europ" chunk="Search_Chunk509.xml" /><stem n="primary_in" chunk="Search_Chunk509.xml" /><stem n="colorspace_out" chunk="Search_Chunk509.xml" /><stem n="illuninant_out" chunk="Search_Chunk509.xml" /><stem n="household" chunk="Search_Chunk509.xml" /><stem n="tungsten" chunk="Search_Chunk509.xml" /><stem n="filament" chunk="Search_Chunk509.xml" /><stem n="primary_out" chunk="Search_Chunk509.xml" /><stem n="bradford" chunk="Search_Chunk509.xml" /><stem n="bradford_matrix" chunk="Search_Chunk509.xml" /><stem n="illuminant_in" chunk="Search_Chunk509.xml" /><stem n="illuminant_out" chunk="Search_Chunk509.xml" /><stem n="colortransf" chunk="Search_Chunk509.xml" /><stem n="crosstalk" chunk="Search_Chunk509.xml" /><stem n="r-&gt;g" chunk="Search_Chunk509.xml" /><stem n="&gt;g" chunk="Search_Chunk509.xml" /><stem n="c-like" chunk="Search_Chunk509.xml" /><stem n="cx" chunk="Search_Chunk509.xml" /><stem n="cy" chunk="Search_Chunk509.xml" /><stem n="-1,0" chunk="Search_Chunk509.xml" /><stem n="temp_name0" chunk="Search_Chunk509.xml" /><stem n="temp_expr0" chunk="Search_Chunk509.xml" /><stem n="temp_name1" chunk="Search_Chunk509.xml" /><stem n="temp_expr1" chunk="Search_Chunk509.xml" /><stem n="temp_name2" chunk="Search_Chunk509.xml" /><stem n="temp_expr2" chunk="Search_Chunk509.xml" /><stem n="temp_name3" chunk="Search_Chunk509.xml" /><stem n="temp_expr3" chunk="Search_Chunk509.xml" /><stem n="channel0" chunk="Search_Chunk509.xml" /><stem n="expr0" chunk="Search_Chunk509.xml" /><stem n="channel1" chunk="Search_Chunk509.xml" /><stem n="expr1" chunk="Search_Chunk509.xml" /><stem n="channel2" chunk="Search_Chunk509.xml" /><stem n="expr2" chunk="Search_Chunk509.xml" /><stem n="channel3" chunk="Search_Chunk509.xml" /><stem n="expr3" chunk="Search_Chunk509.xml" /><stem n="to_rec709" chunk="Search_Chunk509.xml" /><stem n="from_rec709" chunk="Search_Chunk509.xml" /><stem n="45454545" chunk="Search_Chunk509.xml" /><stem n="3dl" chunk="Search_Chunk509.xml" /><stem n="assimil" chunk="Search_Chunk509.xml" /><stem n="blut" chunk="Search_Chunk509.xml" /><stem n="lightspac" chunk="Search_Chunk509.xml" /><stem n="research" chunk="Search_Chunk509.xml" /><stem n="cinespac" chunk="Search_Chunk509.xml" /><stem n="cub" chunk="Search_Chunk509.xml" /><stem n="filmlight" chunk="Search_Chunk509.xml" /><stem n="irida" chunk="Search_Chunk509.xml" /><stem n="vf" chunk="Search_Chunk509.xml" /><stem n="prelut" chunk="Search_Chunk510.xml" /><stem n="lut1d" chunk="Search_Chunk510.xml" /><stem n="style1d" chunk="Search_Chunk510.xml" /><stem n="bitdepth_id" chunk="Search_Chunk510.xml" /><stem n="output_bitdepth_id" chunk="Search_Chunk510.xml" /><stem n="ouput" chunk="Search_Chunk510.xml" /><stem n="clamp_output" chunk="Search_Chunk510.xml" /><stem n="superwhit" chunk="Search_Chunk510.xml" /><stem n="unread" chunk="Search_Chunk510.xml" /><stem n="format_3dl_id" chunk="Search_Chunk510.xml" /><stem n="flame" chunk="Search_Chunk510.xml" /><stem n="17x17" chunk="Search_Chunk510.xml" /><stem n="33x33" chunk="Search_Chunk510.xml" /><stem n="65x65" chunk="Search_Chunk510.xml" /><stem n="lustr" chunk="Search_Chunk510.xml" /><stem n="3dmesh" chunk="Search_Chunk510.xml" /><stem n="overexpos" chunk="Search_Chunk510.xml" /><stem n="black_clamp" chunk="Search_Chunk510.xml" /><stem n="white_clamp" chunk="Search_Chunk510.xml" /><stem n="histeq" chunk="Search_Chunk510.xml" /><stem n="histeqbin" chunk="Search_Chunk510.xml" /><stem n="superblack" chunk="Search_Chunk510.xml" /><stem n="hist" chunk="Search_Chunk510.xml" /><stem n="huesrc" chunk="Search_Chunk510.xml" /><stem n="huerot" chunk="Search_Chunk510.xml" /><stem n="huereset" chunk="Search_Chunk510.xml" /><stem n="huerolloffrang" chunk="Search_Chunk510.xml" /><stem n="hmask" chunk="Search_Chunk510.xml" /><stem n="invert_hue_mask" chunk="Search_Chunk510.xml" /><stem n="satsrc" chunk="Search_Chunk510.xml" /><stem n="satreset" chunk="Search_Chunk510.xml" /><stem n="satrolloffrang" chunk="Search_Chunk510.xml" /><stem n="setsatur" chunk="Search_Chunk510.xml" /><stem n="smask" chunk="Search_Chunk510.xml" /><stem n="invert_sat_mask" chunk="Search_Chunk510.xml" /><stem n="brtsrc" chunk="Search_Chunk510.xml" /><stem n="brtreset" chunk="Search_Chunk510.xml" /><stem n="brtrolloffrang" chunk="Search_Chunk510.xml" /><stem n="setbright" chunk="Search_Chunk510.xml" /><stem n="bmask" chunk="Search_Chunk510.xml" /><stem n="invert_bright_mask" chunk="Search_Chunk510.xml" /><stem n="invert_alpha_mask" chunk="Search_Chunk510.xml" /><stem n="graypoint" chunk="Search_Chunk510.xml" /><stem n="ingrai" chunk="Search_Chunk510.xml" /><stem n="outgrai" chunk="Search_Chunk510.xml" /><stem n="xz" chunk="Search_Chunk510.xml" /><stem n="color_satur" chunk="Search_Chunk510.xml" /><stem n="hue_rot" chunk="Search_Chunk510.xml" /><stem n="psychedel" chunk="Search_Chunk510.xml" /><stem n="ignore_black" chunk="Search_Chunk510.xml" /><stem n="685" chunk="Search_Chunk510.xml" /><stem n="matchgradetask" chunk="Search_Chunk510.xml" /><stem n="analysistyp" chunk="Search_Chunk510.xml" /><stem n="applytomask" chunk="Search_Chunk510.xml" /><stem n="aligntargettosourc" chunk="Search_Chunk510.xml" /><stem n="sourcereffram" chunk="Search_Chunk510.xml" /><stem n="addsourceref-" chunk="Search_Chunk510.xml" /><stem n="addsourceref" chunk="Search_Chunk510.xml" /><stem n="deletesourceref-" chunk="Search_Chunk510.xml" /><stem n="deletesourceref" chunk="Search_Chunk510.xml" /><stem n="targetreffram" chunk="Search_Chunk510.xml" /><stem n="addtargetreffram" chunk="Search_Chunk510.xml" /><stem n="deletetargetref-" chunk="Search_Chunk510.xml" /><stem n="deletetargetref" chunk="Search_Chunk510.xml" /><stem n="lutr" chunk="Search_Chunk510.xml" /><stem n="lab" chunk="Search_Chunk510.xml" /><stem n="analyzereffram" chunk="Search_Chunk510.xml" /><stem n="lockslop" chunk="Search_Chunk510.xml" /><stem n="lockoffset" chunk="Search_Chunk510.xml" /><stem n="lockpow" chunk="Search_Chunk510.xml" /><stem n="locksatur" chunk="Search_Chunk510.xml" /><stem n="cdlerror" chunk="Search_Chunk510.xml" /><stem n="calculatecdl" chunk="Search_Chunk510.xml" /><stem n="outfil" chunk="Search_Chunk510.xml" /><stem n="writelut" chunk="Search_Chunk510.xml" /><stem n="ociofile-" chunk="Search_Chunk510.xml" /><stem n="ociofil" chunk="Search_Chunk510.xml" /><stem n="createociofile-" chunk="Search_Chunk510.xml" /><stem n="createociofil" chunk="Search_Chunk510.xml" /><stem n="ociocdl-" chunk="Search_Chunk510.xml" /><stem n="ociocdl" chunk="Search_Chunk510.xml" /><stem n="createociocdl-" chunk="Search_Chunk510.xml" /><stem n="createociocdl" chunk="Search_Chunk510.xml" /><stem n="mincolor" chunk="Search_Chunk510.xml" /><stem n="delta" chunk="Search_Chunk510.xml" /><stem n="095" chunk="Search_Chunk510.xml" /><stem n="adjdir" chunk="Search_Chunk510.xml" /><stem n="pixeldelta" chunk="Search_Chunk510.xml" /><stem n="working_spac" chunk="Search_Chunk510.xml" /><stem n="read_from_fil" chunk="Search_Chunk510.xml" /><stem n="ccc" chunk="Search_Chunk510.xml" /><stem n="cccid" chunk="Search_Chunk510.xml" /><stem n="select_cccid" chunk="Search_Chunk510.xml" /><stem n="export_cc" chunk="Search_Chunk510.xml" /><stem n="in_colorspac" chunk="Search_Chunk510.xml" /><stem n="out_colorspac" chunk="Search_Chunk510.xml" /><stem n="ociodisplai" chunk="Search_Chunk510.xml" /><stem n="channel_selector" chunk="Search_Chunk510.xml" /><stem n="log-encod" chunk="Search_Chunk510.xml" /><stem n="colorcorrectioncollect" chunk="Search_Chunk510.xml" /><stem n="itx" chunk="Search_Chunk510.xml" /><stem n="iridas_itx" chunk="Search_Chunk510.xml" /><stem n="iridas_cub" chunk="Search_Chunk510.xml" /><stem n="mga" chunk="Search_Chunk510.xml" /><stem n="pandora_mga" chunk="Search_Chunk510.xml" /><stem n="m3d" chunk="Search_Chunk510.xml" /><stem n="pandora_m3d" chunk="Search_Chunk510.xml" /><stem n="spi1d" chunk="Search_Chunk510.xml" /><stem n="spi3d" chunk="Search_Chunk510.xml" /><stem n="spimtx" chunk="Search_Chunk510.xml" /><stem n="nukevf" chunk="Search_Chunk510.xml" /><stem n="tetrahedr" chunk="Search_Chunk510.xml" /><stem n="ociologconvert" chunk="Search_Chunk510.xml" /><stem n="opencoloriolibrari" chunk="Search_Chunk510.xml" /><stem n="compositing_log" chunk="Search_Chunk510.xml" /><stem n="scene_linear" chunk="Search_Chunk510.xml" /><stem n="cineon-convers" chunk="Search_Chunk510.xml" /><stem n="gnu" chunk="Search_Chunk510.xml" /><stem n="openexr-devel" chunk="Search_Chunk510.xml" /><stem n="devel" chunk="Search_Chunk510.xml" /><stem n="2005" chunk="Search_Chunk510.xml" /><stem n="2005-03" chunk="Search_Chunk510.xml" /><stem n="03" chunk="Search_Chunk510.xml" /><stem n="msg00006" chunk="Search_Chunk510.xml" /><stem n="linref" chunk="Search_Chunk510.xml" /><stem n="logref" chunk="Search_Chunk510.xml" /><stem n="ngamma" chunk="Search_Chunk510.xml" /><stem n="poster" chunk="Search_Chunk510.xml" /><stem n="rolloffcontrast" chunk="Search_Chunk510.xml" /><stem n="sampler" chunk="Search_Chunk510.xml" /><stem n="loo" chunk="Search_Chunk510.xml" /><stem n="kup" chunk="Search_Chunk510.xml" /><stem n="normalize_x" chunk="Search_Chunk510.xml" /><stem n="sample_curr" chunk="Search_Chunk510.xml" /><stem n="softclip" chunk="Search_Chunk510.xml" /><stem n="high-dynamic-rang" chunk="Search_Chunk510.xml" /><stem n="high-dynam" chunk="Search_Chunk510.xml" /><stem n="dynamic-rang" chunk="Search_Chunk510.xml" /><stem n="softclip_min" chunk="Search_Chunk510.xml" /><stem n="softclip_max" chunk="Search_Chunk510.xml" /><stem n="input_is_log" chunk="Search_Chunk510.xml" /><stem n="output_raw" chunk="Search_Chunk510.xml" /><stem n="$truelight_displai" chunk="Search_Chunk510.xml" /><stem n="enable_displai" chunk="Search_Chunk510.xml" /><stem n="display_fil" chunk="Search_Chunk510.xml" /><stem n="gamut" chunk="Search_Chunk510.xml" /><stem n="alarm" chunk="Search_Chunk510.xml" /><stem n="gamut_alarm" chunk="Search_Chunk510.xml" /><stem n="out-of-gamut" chunk="Search_Chunk510.xml" /><stem n="of-gamut" chunk="Search_Chunk510.xml" /><stem n="in-gamut" chunk="Search_Chunk510.xml" /><stem n="film-lik" chunk="Search_Chunk510.xml" /><stem n="internal_xenon" chunk="Search_Chunk510.xml" /><stem n="printer_point" chunk="Search_Chunk510.xml" /><stem n="greystatusa" chunk="Search_Chunk510.xml" /><stem n="flare_correct" chunk="Search_Chunk510.xml" /><stem n="shine" chunk="Search_Chunk511.xml" /><stem n="white_i" chunk="Search_Chunk511.xml" /><stem n="projector" chunk="Search_Chunk511.xml" /><stem n="white_u" chunk="Search_Chunk511.xml" /><stem n="1978" chunk="Search_Chunk511.xml" /><stem n="white_v" chunk="Search_Chunk511.xml" /><stem n="46830001" chunk="Search_Chunk511.xml" /><stem n="vfield_fil" chunk="Search_Chunk511.xml" /><stem n="vfz" chunk="Search_Chunk511.xml" /><stem n="gzip" chunk="Search_Chunk511.xml" /><stem n="combat" chunk="Search_Chunk511.xml" /><stem n="voxel" chunk="Search_Chunk511.xml" /><stem n="stagger" chunk="Search_Chunk511.xml" /><stem n="fluid" chunk="Search_Chunk511.xml" /><stem n="quasilinear" chunk="Search_Chunk511.xml" /><stem n="queri" chunk="Search_Chunk511.xml" /><stem n="gpuextrapol" chunk="Search_Chunk511.xml" /><stem n="colorspacein" chunk="Search_Chunk511.xml" /><stem n="colorspaceout" chunk="Search_Chunk511.xml" /><stem n="heurist" chunk="Search_Chunk511.xml" /><stem n="normalize_output" chunk="Search_Chunk511.xml" /><stem n="smoothest" chunk="Search_Chunk511.xml" /><stem n="overs" chunk="Search_Chunk511.xml" /><stem n="bilater" chunk="Search_Chunk511.xml" /><stem n="sigma" chunk="Search_Chunk511.xml" /><stem n="positionalsigma" chunk="Search_Chunk511.xml" /><stem n="colorsigma" chunk="Search_Chunk511.xml" /><stem n="bumpboss" chunk="Search_Chunk511.xml" /><stem n="emboss" chunk="Search_Chunk511.xml" /><stem n="lightposit" chunk="Search_Chunk511.xml" /><stem n="480" chunk="Search_Chunk511.xml" /><stem n="bumpsiz" chunk="Search_Chunk511.xml" /><stem n="minshadow" chunk="Search_Chunk511.xml" /><stem n="filter_channel" chunk="Search_Chunk511.xml" /><stem n="use_input_channel" chunk="Search_Chunk511.xml" /><stem n="filter_bound" chunk="Search_Chunk511.xml" /><stem n="speckl" chunk="Search_Chunk511.xml" /><stem n="imprecis" chunk="Search_Chunk511.xml" /><stem n="00001" chunk="Search_Chunk511.xml" /><stem n="degrainblu" chunk="Search_Chunk511.xml" /><stem n="degrainsimpl" chunk="Search_Chunk511.xml" /><stem n="rval" chunk="Search_Chunk511.xml" /><stem n="gval" chunk="Search_Chunk511.xml" /><stem n="bval" chunk="Search_Chunk511.xml" /><stem n="lumablend" chunk="Search_Chunk511.xml" /><stem n="chromablend" chunk="Search_Chunk511.xml" /><stem n="locknoiseanalysi" chunk="Search_Chunk511.xml" /><stem n="analysisregion" chunk="Search_Chunk511.xml" /><stem n="analysisfram" chunk="Search_Chunk511.xml" /><stem n="analysisfil" chunk="Search_Chunk511.xml" /><stem n="processhigh" chunk="Search_Chunk511.xml" /><stem n="highamount" chunk="Search_Chunk511.xml" /><stem n="processmedium" chunk="Search_Chunk511.xml" /><stem n="mediumamount" chunk="Search_Chunk511.xml" /><stem n="processlow" chunk="Search_Chunk511.xml" /><stem n="coars" chunk="Search_Chunk511.xml" /><stem n="lowamount" chunk="Search_Chunk511.xml" /><stem n="processverylow" chunk="Search_Chunk511.xml" /><stem n="verylowamount" chunk="Search_Chunk511.xml" /><stem n="lumaamount" chunk="Search_Chunk511.xml" /><stem n="chromaamount" chunk="Search_Chunk511.xml" /><stem n="profilecurv" chunk="Search_Chunk511.xml" /><stem n="tuneprofil" chunk="Search_Chunk511.xml" /><stem n="lowgain" chunk="Search_Chunk511.xml" /><stem n="midgain" chunk="Search_Chunk511.xml" /><stem n="highgain" chunk="Search_Chunk511.xml" /><stem n="profilefram" chunk="Search_Chunk511.xml" /><stem n="resetprofil" chunk="Search_Chunk511.xml" /><stem n="reprofil" chunk="Search_Chunk511.xml" /><stem n="recomput" chunk="Search_Chunk511.xml" /><stem n="softli" chunk="Search_Chunk511.xml" /><stem n="blotchi" chunk="Search_Chunk511.xml" /><stem n="anymor" chunk="Search_Chunk511.xml" /><stem n="took" chunk="Search_Chunk511.xml" /><stem n="230" chunk="Search_Chunk511.xml" /><stem n="dirblur" chunk="Search_Chunk511.xml" /><stem n="dirblurwrapp" chunk="Search_Chunk511.xml" /><stem n="blurlay" chunk="Search_Chunk511.xml" /><stem n="blurtyp" chunk="Search_Chunk511.xml" /><stem n="blurcent" chunk="Search_Chunk511.xml" /><stem n="usetarget" chunk="Search_Chunk511.xml" /><stem n="blurlength" chunk="Search_Chunk511.xml" /><stem n="blurangl" chunk="Search_Chunk511.xml" /><stem n="pixelaspect" chunk="Search_Chunk511.xml" /><stem n="pixeloffset" chunk="Search_Chunk511.xml" /><stem n="edgeblur" chunk="Search_Chunk511.xml" /><stem n="edge_mult" chunk="Search_Chunk511.xml" /><stem n="edgedetect" chunk="Search_Chunk511.xml" /><stem n="edgedetectwrapp" chunk="Search_Chunk511.xml" /><stem n="detector" chunk="Search_Chunk511.xml" /><stem n="edgedetector" chunk="Search_Chunk511.xml" /><stem n="sobel" chunk="Search_Chunk511.xml" /><stem n="prewitt" chunk="Search_Chunk511.xml" /><stem n="maskedgedetect" chunk="Search_Chunk511.xml" /><stem n="posterod" chunk="Search_Chunk511.xml" /><stem n="erodes" chunk="Search_Chunk511.xml" /><stem n="blursiz" chunk="Search_Chunk511.xml" /><stem n="blurqual" chunk="Search_Chunk511.xml" /><stem n="optyp" chunk="Search_Chunk511.xml" /><stem n="edgechannel" chunk="Search_Chunk511.xml" /><stem n="filtererod" chunk="Search_Chunk511.xml" /><stem n="nonlinear" chunk="Search_Chunk511.xml" /><stem n="godrai" chunk="Search_Chunk511.xml" /><stem n="straight-lin" chunk="Search_Chunk511.xml" /><stem n="laplacian" chunk="Search_Chunk511.xml" /><stem n="quailti" chunk="Search_Chunk511.xml" /><stem n="levelset" chunk="Search_Chunk511.xml" /><stem n="ignore_top_lin" chunk="Search_Chunk511.xml" /><stem n="2v1" chunk="Search_Chunk511.xml" /><stem n="transf" chunk="Search_Chunk511.xml" /><stem n="-.5" chunk="Search_Chunk511.xml" /><stem n="127" chunk="Search_Chunk511.xml" /><stem n="-127/255." chunk="Search_Chunk511.xml" /><stem n="grow_bbox" chunk="Search_Chunk511.xml" /><stem n="non-zero" chunk="Search_Chunk511.xml" /><stem n="volumerai" chunk="Search_Chunk511.xml" /><stem n="radiat" chunk="Search_Chunk511.xml" /><stem n="vol_po" chunk="Search_Chunk511.xml" /><stem n="luma_tol" chunk="Search_Chunk511.xml" /><stem n="edge_s" chunk="Search_Chunk511.xml" /><stem n="blur_siz" chunk="Search_Chunk511.xml" /><stem n="raylength" chunk="Search_Chunk511.xml" /><stem n="pre-rai" chunk="Search_Chunk511.xml" /><stem n="pre_blur" chunk="Search_Chunk511.xml" /><stem n="comp_m" chunk="Search_Chunk511.xml" /><stem n="chk_flicker" chunk="Search_Chunk511.xml" /><stem n="flicker_spe" chunk="Search_Chunk511.xml" /><stem n="flicker_s" chunk="Search_Chunk511.xml" /><stem n="xform_flick" chunk="Search_Chunk511.xml" /><stem n="chk_desat" chunk="Search_Chunk511.xml" /><stem n="pickup" chunk="Search_Chunk511.xml" /><stem n="ccorrect1_gamma" chunk="Search_Chunk511.xml" /><stem n="ccorrect1_gain" chunk="Search_Chunk511.xml" /><stem n="initcolor" chunk="Search_Chunk511.xml" /><stem n="volume_end_color" chunk="Search_Chunk511.xml" /><stem n="chk_radial" chunk="Search_Chunk511.xml" /><stem n="radial_s" chunk="Search_Chunk511.xml" /><stem n="rad_soft" chunk="Search_Chunk511.xml" /><stem n="chk_use_mask" chunk="Search_Chunk511.xml" /><stem n="mask_blur" chunk="Search_Chunk511.xml" /><stem n="chk_xform_mask" chunk="Search_Chunk511.xml" /><stem n="z_channel" chunk="Search_Chunk511.xml" /><stem n="show_imag" chunk="Search_Chunk511.xml" /><stem n="fill_foreground" chunk="Search_Chunk511.xml" /><stem n="focal_point" chunk="Search_Chunk511.xml" /><stem n="blur_dof" chunk="Search_Chunk511.xml" /><stem n="max_siz" chunk="Search_Chunk511.xml" /><stem n="autolayerspac" chunk="Search_Chunk511.xml" /><stem n="nlayer" chunk="Search_Chunk511.xml" /><stem n="layercurv" chunk="Search_Chunk511.xml" /><stem n="filter_typ" chunk="Search_Chunk511.xml" /><stem n="inner_s" chunk="Search_Chunk511.xml" /><stem n="inner_feath" chunk="Search_Chunk511.xml" /><stem n="inner_bright" chunk="Search_Chunk511.xml" /><stem n="catadioptric_s" chunk="Search_Chunk511.xml" /><stem n="legacy_resize_mod" chunk="Search_Chunk511.xml" /><stem n="image_filt" chunk="Search_Chunk511.xml" /><stem n="clamp_image_filt" chunk="Search_Chunk511.xml" /><stem n="bloom_gamma" chunk="Search_Chunk511.xml" /><stem n="bloom_threshold" chunk="Search_Chunk511.xml" /><stem n="bloom_gain" chunk="Search_Chunk511.xml" /><stem n="steve" chunk="Search_Chunk511.xml" /><stem n="wright" chunk="Search_Chunk512.xml" /><stem n="dive" chunk="Search_Chunk512.xml" /><stem n="dial" chunk="Search_Chunk512.xml" /><stem n="citi" chunk="Search_Chunk512.xml" /><stem n="fuzzi" chunk="Search_Chunk512.xml" /><stem n="concav" chunk="Search_Chunk512.xml" /><stem n="chromatic_aberr" chunk="Search_Chunk512.xml" /><stem n="3-channel" chunk="Search_Chunk512.xml" /><stem n="wake" chunk="Search_Chunk512.xml" /><stem n="zslice" chunk="Search_Chunk512.xml" /><stem n="character" chunk="Search_Chunk512.xml" /><stem n="zchan" chunk="Search_Chunk512.xml" /><stem n="huekey" chunk="Search_Chunk512.xml" /><stem n="sat_thrsh" chunk="Search_Chunk512.xml" /><stem n="ibkcolor" chunk="Search_Chunk512.xml" /><stem n="blue-" chunk="Search_Chunk512.xml" /><stem n="ibkgizmo" chunk="Search_Chunk512.xml" /><stem n="side-bi" chunk="Search_Chunk512.xml" /><stem n="side-by-sid" chunk="Search_Chunk512.xml" /><stem n="by-sid" chunk="Search_Chunk512.xml" /><stem n="screen_typ" chunk="Search_Chunk512.xml" /><stem n="discolor" chunk="Search_Chunk512.xml" /><stem n="briefli" chunk="Search_Chunk512.xml" /><stem n="attack" chunk="Search_Chunk512.xml" /><stem n="taper" chunk="Search_Chunk512.xml" /><stem n="far-left" chunk="Search_Chunk512.xml" /><stem n="intimid" chunk="Search_Chunk512.xml" /><stem n="bat" chunk="Search_Chunk512.xml" /><stem n="fortun" chunk="Search_Chunk512.xml" /><stem n="bunch" chunk="Search_Chunk512.xml" /><stem n="jacket" chunk="Search_Chunk512.xml" /><stem n="alright" chunk="Search_Chunk512.xml" /><stem n="ibkcolour" chunk="Search_Chunk512.xml" /><stem n="funni" chunk="Search_Chunk512.xml" /><stem n="non-green" chunk="Search_Chunk512.xml" /><stem n="c-blue" chunk="Search_Chunk512.xml" /><stem n="c-green" chunk="Search_Chunk512.xml" /><stem n="red_weight" chunk="Search_Chunk512.xml" /><stem n="ge" chunk="Search_Chunk512.xml" /><stem n="blue_green_weight" chunk="Search_Chunk512.xml" /><stem n="lm_enabl" chunk="Search_Chunk512.xml" /><stem n="eat" chunk="Search_Chunk512.xml" /><stem n="ll_enabl" chunk="Search_Chunk512.xml" /><stem n="autolevel" chunk="Search_Chunk512.xml" /><stem n="supersatur" chunk="Search_Chunk512.xml" /><stem n="bkg" chunk="Search_Chunk512.xml" /><stem n="luminn" chunk="Search_Chunk512.xml" /><stem n="ublu" chunk="Search_Chunk512.xml" /><stem n="ubcr" chunk="Search_Chunk512.xml" /><stem n="middle-grai" chunk="Search_Chunk512.xml" /><stem n="industry-proven" chunk="Search_Chunk512.xml" /><stem n="proven" chunk="Search_Chunk512.xml" /><stem n="compani" chunk="Search_Chunk512.xml" /><stem n="screencolor" chunk="Search_Chunk512.xml" /><stem n="screengain" chunk="Search_Chunk512.xml" /><stem n="screenbal" chunk="Search_Chunk512.xml" /><stem n="alphabia" chunk="Search_Chunk512.xml" /><stem n="despillbia" chunk="Search_Chunk512.xml" /><stem n="gangbias" chunk="Search_Chunk512.xml" /><stem n="screenclipmin" chunk="Search_Chunk512.xml" /><stem n="screenclipmax" chunk="Search_Chunk512.xml" /><stem n="screencliprollback" chunk="Search_Chunk512.xml" /><stem n="screengrowshrink" chunk="Search_Chunk512.xml" /><stem n="screensoft" chunk="Search_Chunk512.xml" /><stem n="screendespotblack" chunk="Search_Chunk512.xml" /><stem n="screendespotwhit" chunk="Search_Chunk512.xml" /><stem n="screenreplacemethod" chunk="Search_Chunk512.xml" /><stem n="screenreplacecolour" chunk="Search_Chunk512.xml" /><stem n="midpoint" chunk="Search_Chunk512.xml" /><stem n="sourcealphahandl" chunk="Search_Chunk512.xml" /><stem n="insidereplacemethod" chunk="Search_Chunk512.xml" /><stem n="insidereplacecolour" chunk="Search_Chunk512.xml" /><stem n="sourcexmethod" chunk="Search_Chunk512.xml" /><stem n="sourceymethod" chunk="Search_Chunk512.xml" /><stem n="sourceedgecolour" chunk="Search_Chunk512.xml" /><stem n="sourcecropl" chunk="Search_Chunk512.xml" /><stem n="sourcecropr" chunk="Search_Chunk512.xml" /><stem n="sourcecropb" chunk="Search_Chunk512.xml" /><stem n="sourcecropt" chunk="Search_Chunk512.xml" /><stem n="insidecompon" chunk="Search_Chunk512.xml" /><stem n="outsidecompon" chunk="Search_Chunk512.xml" /><stem n="patent" chunk="Search_Chunk512.xml" /><stem n="graintyp" chunk="Search_Chunk512.xml" /><stem n="graintoler" chunk="Search_Chunk512.xml" /><stem n="currentcolor" chunk="Search_Chunk512.xml" /><stem n="adjustlight" chunk="Search_Chunk512.xml" /><stem n="hybridrend" chunk="Search_Chunk512.xml" /><stem n="lightingspoli" chunk="Search_Chunk512.xml" /><stem n="lightinggrids" chunk="Search_Chunk512.xml" /><stem n="hybriderod" chunk="Search_Chunk513.xml" /><stem n="hybridblurradiu" chunk="Search_Chunk513.xml" /><stem n="no-chang" chunk="Search_Chunk513.xml" /><stem n="spillprocess" chunk="Search_Chunk513.xml" /><stem n="replacecolor" chunk="Search_Chunk513.xml" /><stem n="output_mod" chunk="Search_Chunk513.xml" /><stem n="advantedg" chunk="Search_Chunk513.xml" /><stem n="culmin" chunk="Search_Chunk513.xml" /><stem n="corpor" chunk="Search_Chunk513.xml" /><stem n="intrud" chunk="Search_Chunk513.xml" /><stem n="solidli" chunk="Search_Chunk513.xml" /><stem n="screen_color" chunk="Search_Chunk513.xml" /><stem n="screen_correct" chunk="Search_Chunk513.xml" /><stem n="spill_suppress" chunk="Search_Chunk513.xml" /><stem n="color_conform" chunk="Search_Chunk513.xml" /><stem n="overlay_mod" chunk="Search_Chunk513.xml" /><stem n="overlay_mono" chunk="Search_Chunk513.xml" /><stem n="overlay_color" chunk="Search_Chunk513.xml" /><stem n="57999998" chunk="Search_Chunk513.xml" /><stem n="edge_kernel" chunk="Search_Chunk513.xml" /><stem n="red-hu" chunk="Search_Chunk513.xml" /><stem n="hu" chunk="Search_Chunk513.xml" /><stem n="blue-hu" chunk="Search_Chunk513.xml" /><stem n="impract" chunk="Search_Chunk513.xml" /><stem n="usabl" chunk="Search_Chunk513.xml" /><stem n="pre-crop" chunk="Search_Chunk513.xml" /><stem n="non-imag" chunk="Search_Chunk513.xml" /><stem n="screen_toler" chunk="Search_Chunk513.xml" /><stem n="50999999" chunk="Search_Chunk513.xml" /><stem n="51999998" chunk="Search_Chunk513.xml" /><stem n="screen_shrink" chunk="Search_Chunk513.xml" /><stem n="screen_darks_red_" chunk="Search_Chunk513.xml" /><stem n="screen_brights_red_smal" chunk="Search_Chunk513.xml" /><stem n="screen_brights_red_larg" chunk="Search_Chunk513.xml" /><stem n="screen_orphan" chunk="Search_Chunk513.xml" /><stem n="shadows_high" chunk="Search_Chunk513.xml" /><stem n="shadows_low" chunk="Search_Chunk513.xml" /><stem n="shadows_dens" chunk="Search_Chunk513.xml" /><stem n="shadows_blur" chunk="Search_Chunk513.xml" /><stem n="shadows_tint" chunk="Search_Chunk513.xml" /><stem n="inappropri" chunk="Search_Chunk513.xml" /><stem n="spill_cool" chunk="Search_Chunk513.xml" /><stem n="spill_warm" chunk="Search_Chunk513.xml" /><stem n="spill_midton" chunk="Search_Chunk513.xml" /><stem n="midrang" chunk="Search_Chunk513.xml" /><stem n="spill_bright" chunk="Search_Chunk513.xml" /><stem n="spill_dark" chunk="Search_Chunk513.xml" /><stem n="spill_ambi" chunk="Search_Chunk513.xml" /><stem n="spill_strength" chunk="Search_Chunk513.xml" /><stem n="spill_backgroundveil" chunk="Search_Chunk513.xml" /><stem n="residu" chunk="Search_Chunk513.xml" /><stem n="cleanup_cleanup" chunk="Search_Chunk513.xml" /><stem n="cleanup_shrink" chunk="Search_Chunk513.xml" /><stem n="cleanup_blur" chunk="Search_Chunk513.xml" /><stem n="cleanup_recov" chunk="Search_Chunk513.xml" /><stem n="color_dark" chunk="Search_Chunk513.xml" /><stem n="color_midton" chunk="Search_Chunk513.xml" /><stem n="color_bright" chunk="Search_Chunk513.xml" /><stem n="color_hu" chunk="Search_Chunk513.xml" /><stem n="film_transpar" chunk="Search_Chunk513.xml" /><stem n="film_correct" chunk="Search_Chunk513.xml" /><stem n="film_strength" chunk="Search_Chunk513.xml" /><stem n="film_shrink" chunk="Search_Chunk513.xml" /><stem n="film_bright" chunk="Search_Chunk513.xml" /><stem n="film_dark" chunk="Search_Chunk513.xml" /><stem n="weight0" chunk="Search_Chunk513.xml" /><stem n="weight1" chunk="Search_Chunk513.xml" /><stem n="3072" chunk="Search_Chunk513.xml" /><stem n="roword" chunk="Search_Chunk513.xml" /><stem n="colord" chunk="Search_Chunk513.xml" /><stem n="splitinput" chunk="Search_Chunk513.xml" /><stem n="1-2" chunk="Search_Chunk513.xml" /><stem n="389" chunk="Search_Chunk513.xml" /><stem n="1536" chunk="Search_Chunk513.xml" /><stem n="1167" chunk="Search_Chunk513.xml" /><stem n="0-9999" chunk="Search_Chunk513.xml" /><stem n="9999" chunk="Search_Chunk513.xml" /><stem n="aa" chunk="Search_Chunk513.xml" /><stem n="invertmask" chunk="Search_Chunk513.xml" /><stem n="layercontactsheet" chunk="Search_Chunk513.xml" /><stem n="autodim" chunk="Search_Chunk513.xml" /><stem n="auto-calcul" chunk="Search_Chunk513.xml" /><stem n="showlayernam" chunk="Search_Chunk513.xml" /><stem n="screen_alpha" chunk="Search_Chunk513.xml" /><stem n="a+b-a" chunk="Search_Chunk513.xml" /><stem n="achannel" chunk="Search_Chunk513.xml" /><stem n="bchannel" chunk="Search_Chunk513.xml" /><stem n="also_merg" chunk="Search_Chunk513.xml" /><stem n="layer-bas" chunk="Search_Chunk513.xml" /><stem n="canyon" chunk="Search_Chunk513.xml" /><stem n="spaceship" chunk="Search_Chunk513.xml" /><stem n="viewer1" chunk="Search_Chunk513.xml" /><stem n="merge1" chunk="Search_Chunk513.xml" /><stem n="rgb+alpha" chunk="Search_Chunk513.xml" /><stem n="mergeexpress" chunk="Search_Chunk513.xml" /><stem n="br" chunk="Search_Chunk513.xml" /><stem n="bb" chunk="Search_Chunk513.xml" /><stem n="inputlay" chunk="Search_Chunk513.xml" /><stem n="bmatt" chunk="Search_Chunk513.xml" /><stem n="bgarbag" chunk="Search_Chunk513.xml" /><stem n="≤" chunk="Search_Chunk513.xml" /><stem n="timedissolv" chunk="Search_Chunk513.xml" /><stem n="zmerg" chunk="Search_Chunk513.xml" /><stem n="alpha_channel" chunk="Search_Chunk513.xml" /><stem n="numpixel" chunk="Search_Chunk513.xml" /><stem n="camerashak" chunk="Search_Chunk513.xml" /><stem n="cs_center" chunk="Search_Chunk513.xml" /><stem n="fluctuat" chunk="Search_Chunk513.xml" /><stem n="randomize_se" chunk="Search_Chunk513.xml" /><stem n="black_outsid" chunk="Search_Chunk513.xml" /><stem n="file_menu" chunk="Search_Chunk513.xml" /><stem n="snap_menu" chunk="Search_Chunk513.xml" /><stem n="xform_ord" chunk="Search_Chunk513.xml" /><stem n="srt" chunk="Search_Chunk513.xml" /><stem n="rot_ord" chunk="Search_Chunk514.xml" /><stem n="zxy" chunk="Search_Chunk514.xml" /><stem n="uniform_scal" chunk="Search_Chunk514.xml" /><stem n="usematrix" chunk="Search_Chunk514.xml" /><stem n="lens-in" chunk="Search_Chunk514.xml" /><stem n="lens_in_foc" chunk="Search_Chunk514.xml" /><stem n="hapertur" chunk="Search_Chunk514.xml" /><stem n="lens_in_hapertur" chunk="Search_Chunk514.xml" /><stem n="texture-map" chunk="Search_Chunk514.xml" /><stem n="enable1" chunk="Search_Chunk514.xml" /><stem n="enable2" chunk="Search_Chunk514.xml" /><stem n="enable3" chunk="Search_Chunk514.xml" /><stem n="to4" chunk="Search_Chunk514.xml" /><stem n="enable4" chunk="Search_Chunk514.xml" /><stem n="copy_from_to" chunk="Search_Chunk514.xml" /><stem n="from1-4" chunk="Search_Chunk514.xml" /><stem n="to1-4" chunk="Search_Chunk514.xml" /><stem n="from4" chunk="Search_Chunk514.xml" /><stem n="set_to_input" chunk="Search_Chunk514.xml" /><stem n="source_grid_kei" chunk="Search_Chunk514.xml" /><stem n="source_grid_vis" chunk="Search_Chunk514.xml" /><stem n="source_grid_lock" chunk="Search_Chunk514.xml" /><stem n="source_image_s" chunk="Search_Chunk514.xml" /><stem n="destination_grid_kei" chunk="Search_Chunk514.xml" /><stem n="destination_grid_vis" chunk="Search_Chunk514.xml" /><stem n="destination_grid_lock" chunk="Search_Chunk514.xml" /><stem n="destination_image_s" chunk="Search_Chunk514.xml" /><stem n="background_mix" chunk="Search_Chunk514.xml" /><stem n="boundary_box" chunk="Search_Chunk514.xml" /><stem n="source_grid_transform_transl" chunk="Search_Chunk514.xml" /><stem n="source_grid_transform_rot" chunk="Search_Chunk514.xml" /><stem n="source_grid_transform_scal" chunk="Search_Chunk514.xml" /><stem n="source_grid_transform_skewx" chunk="Search_Chunk514.xml" /><stem n="source_grid_transform_skewi" chunk="Search_Chunk514.xml" /><stem n="source_grid_transform_skew_ord" chunk="Search_Chunk514.xml" /><stem n="source_grid_transform_cent" chunk="Search_Chunk514.xml" /><stem n="source_grid_transform_matrix" chunk="Search_Chunk514.xml" /><stem n="use_source_transform" chunk="Search_Chunk514.xml" /><stem n="destination_grid_transform_transl" chunk="Search_Chunk514.xml" /><stem n="destination_grid_transform_rot" chunk="Search_Chunk514.xml" /><stem n="destination_grid_transform_scal" chunk="Search_Chunk514.xml" /><stem n="destination_grid_transform_skewx" chunk="Search_Chunk514.xml" /><stem n="destination_grid_transform_skewi" chunk="Search_Chunk514.xml" /><stem n="destination_grid_transform_skew_ord" chunk="Search_Chunk514.xml" /><stem n="destination_grid_transform_cent" chunk="Search_Chunk514.xml" /><stem n="destination_grid_transform_matrix" chunk="Search_Chunk514.xml" /><stem n="render_r" chunk="Search_Chunk514.xml" /><stem n="source_color" chunk="Search_Chunk514.xml" /><stem n="destination_color" chunk="Search_Chunk514.xml" /><stem n="overhaul" chunk="Search_Chunk514.xml" /><stem n="kindli" chunk="Search_Chunk514.xml" /><stem n="donat" chunk="Search_Chunk514.xml" /><stem n="fxphd" chunk="Search_Chunk514.xml" /><stem n="biggest" chunk="Search_Chunk514.xml" /><stem n="horribl" chunk="Search_Chunk514.xml" /><stem n="topolog" chunk="Search_Chunk514.xml" /><stem n="re-align" chunk="Search_Chunk514.xml" /><stem n="ladi" chunk="Search_Chunk514.xml" /><stem n="lai" chunk="Search_Chunk514.xml" /><stem n="neater" chunk="Search_Chunk514.xml" /><stem n="augment" chunk="Search_Chunk514.xml" /><stem n="lip" chunk="Search_Chunk514.xml" /><stem n="swollen" chunk="Search_Chunk514.xml" /><stem n="eyebrow" chunk="Search_Chunk514.xml" /><stem n="rudimentari" chunk="Search_Chunk514.xml" /><stem n="greedi" chunk="Search_Chunk514.xml" /><stem n="noodl" chunk="Search_Chunk514.xml" /><stem n="horrif" chunk="Search_Chunk514.xml" /><stem n="fun" chunk="Search_Chunk514.xml" /><stem n="stuff" chunk="Search_Chunk514.xml" /><stem n="uncomfort" chunk="Search_Chunk514.xml" /><stem n="injur" chunk="Search_Chunk514.xml" /><stem n="girl" chunk="Search_Chunk514.xml" /><stem n="brutal" chunk="Search_Chunk514.xml" /><stem n="chuck" chunk="Search_Chunk514.xml" /><stem n="track1" chunk="Search_Chunk514.xml" /><stem n="manifest" chunk="Search_Chunk514.xml" /><stem n="hop" chunk="Search_Chunk514.xml" /><stem n="minutia" chunk="Search_Chunk514.xml" /><stem n="rigidli" chunk="Search_Chunk514.xml" /><stem n="funki" chunk="Search_Chunk515.xml" /><stem n="demo" chunk="Search_Chunk515.xml" /><stem n="strang" chunk="Search_Chunk515.xml" /><stem n="weird" chunk="Search_Chunk515.xml" /><stem n="point-bas" chunk="Search_Chunk515.xml" /><stem n="giant" chunk="Search_Chunk515.xml" /><stem n="leap" chunk="Search_Chunk515.xml" /><stem n="sit" chunk="Search_Chunk515.xml" /><stem n="reap" chunk="Search_Chunk515.xml" /><stem n="uv_offset" chunk="Search_Chunk515.xml" /><stem n="uv_scal" chunk="Search_Chunk515.xml" /><stem n="blur_scal" chunk="Search_Chunk515.xml" /><stem n="outputtyp" chunk="Search_Chunk515.xml" /><stem n="lenstyp" chunk="Search_Chunk515.xml" /><stem n="distortion1" chunk="Search_Chunk515.xml" /><stem n="r^2" chunk="Search_Chunk515.xml" /><stem n="distortion2" chunk="Search_Chunk515.xml" /><stem n="r^4" chunk="Search_Chunk515.xml" /><stem n="distortioncent" chunk="Search_Chunk515.xml" /><stem n="anamorphicsqueez" chunk="Search_Chunk515.xml" /><stem n="asymmetricdistort" chunk="Search_Chunk515.xml" /><stem n="startfromcurrentlen" chunk="Search_Chunk515.xml" /><stem n="invertdistort" chunk="Search_Chunk515.xml" /><stem n="distortionsc" chunk="Search_Chunk515.xml" /><stem n="outputformat" chunk="Search_Chunk515.xml" /><stem n="cardscal" chunk="Search_Chunk515.xml" /><stem n="r^3" chunk="Search_Chunk515.xml" /><stem n="rounder" chunk="Search_Chunk515.xml" /><stem n="r^1" chunk="Search_Chunk515.xml" /><stem n="analysisrang" chunk="Search_Chunk515.xml" /><stem n="analysisstart" chunk="Search_Chunk515.xml" /><stem n="analysisstop" chunk="Search_Chunk515.xml" /><stem n="cameramot" chunk="Search_Chunk515.xml" /><stem n="maskwith" chunk="Search_Chunk515.xml" /><stem n="analyzeimag" chunk="Search_Chunk515.xml" /><stem n="showfeatur" chunk="Search_Chunk515.xml" /><stem n="gridtyp" chunk="Search_Chunk515.xml" /><stem n="analyzegrid" chunk="Search_Chunk515.xml" /><stem n="aligngrid" chunk="Search_Chunk515.xml" /><stem n="showgrid" chunk="Search_Chunk515.xml" /><stem n="drawingmodeon" chunk="Search_Chunk515.xml" /><stem n="ncoeffici" chunk="Search_Chunk515.xml" /><stem n="estimatecent" chunk="Search_Chunk515.xml" /><stem n="analyzelin" chunk="Search_Chunk515.xml" /><stem n="deletelastlin" chunk="Search_Chunk515.xml" /><stem n="deletelastpoint" chunk="Search_Chunk515.xml" /><stem n="hidelin" chunk="Search_Chunk515.xml" /><stem n="clearal" chunk="Search_Chunk515.xml" /><stem n="cameramovtyp" chunk="Search_Chunk515.xml" /><stem n="pointa" chunk="Search_Chunk515.xml" /><stem n="ref_timea" chunk="Search_Chunk515.xml" /><stem n="pointb" chunk="Search_Chunk515.xml" /><stem n="ref_timeb" chunk="Search_Chunk515.xml" /><stem n="pointc" chunk="Search_Chunk515.xml" /><stem n="ref_timec" chunk="Search_Chunk515.xml" /><stem n="point3d" chunk="Search_Chunk515.xml" /><stem n="point2d" chunk="Search_Chunk515.xml" /><stem n="calc_output" chunk="Search_Chunk515.xml" /><stem n="outputxyz" chunk="Search_Chunk515.xml" /><stem n="box_width" chunk="Search_Chunk515.xml" /><stem n="box_height" chunk="Search_Chunk515.xml" /><stem n="box_fix" chunk="Search_Chunk515.xml" /><stem n="box_pixel_aspect" chunk="Search_Chunk515.xml" /><stem n="upsid" chunk="Search_Chunk515.xml" /><stem n="pbb" chunk="Search_Chunk515.xml" /><stem n="read2" chunk="Search_Chunk515.xml" /><stem n="1100" chunk="Search_Chunk515.xml" /><stem n="overhang" chunk="Search_Chunk515.xml" /><stem n="widescreen" chunk="Search_Chunk515.xml" /><stem n="1280x960" chunk="Search_Chunk515.xml" /><stem n="mimic" chunk="Search_Chunk515.xml" /><stem n="±x" chunk="Search_Chunk515.xml" /><stem n="±z" chunk="Search_Chunk515.xml" /><stem n="latlongmap" chunk="Search_Chunk515.xml" /><stem n="-x,-y,-z" chunk="Search_Chunk515.xml" /><stem n="lat" chunk="Search_Chunk515.xml" /><stem n="90°" chunk="Search_Chunk515.xml" /><stem n="angular" chunk="Search_Chunk515.xml" /><stem n="180°" chunk="Search_Chunk515.xml" /><stem n="360°" chunk="Search_Chunk515.xml" /><stem n="fishey" chunk="Search_Chunk515.xml" /><stem n="fish" chunk="Search_Chunk515.xml" /><stem n="xzy" chunk="Search_Chunk515.xml" /><stem n="yxz" chunk="Search_Chunk515.xml" /><stem n="yzx" chunk="Search_Chunk515.xml" /><stem n="zyx" chunk="Search_Chunk515.xml" /><stem n="rx" chunk="Search_Chunk515.xml" /><stem n="ry" chunk="Search_Chunk515.xml" /><stem n="rz" chunk="Search_Chunk515.xml" /><stem n="out_rot_ord" chunk="Search_Chunk515.xml" /><stem n="out_rx" chunk="Search_Chunk515.xml" /><stem n="out_ri" chunk="Search_Chunk515.xml" /><stem n="out_rz" chunk="Search_Chunk515.xml" /><stem n="mask_splinwarp" chunk="Search_Chunk515.xml" /><stem n="crop_to_format" chunk="Search_Chunk515.xml" /><stem n="boundary_bbox" chunk="Search_Chunk515.xml" /><stem n="tighten" chunk="Search_Chunk515.xml" /><stem n="root_warp" chunk="Search_Chunk515.xml" /><stem n="1-warp" chunk="Search_Chunk515.xml" /><stem n="layer_warp" chunk="Search_Chunk515.xml" /><stem n="pair_warp" chunk="Search_Chunk515.xml" /><stem n="curverez" chunk="Search_Chunk515.xml" /><stem n="boundary_curverez" chunk="Search_Chunk515.xml" /><stem n="previewrez" chunk="Search_Chunk515.xml" /><stem n="rbf" chunk="Search_Chunk515.xml" /><stem n="face1" chunk="Search_Chunk515.xml" /><stem n="asset" chunk="Search_Chunk515.xml" /><stem n="angri" chunk="Search_Chunk515.xml" /><stem n="alien" chunk="Search_Chunk515.xml" /><stem n="coincid" chunk="Search_Chunk515.xml" /><stem n="admir" chunk="Search_Chunk515.xml" /><stem n="brow" chunk="Search_Chunk515.xml" /><stem n="bezier3" chunk="Search_Chunk515.xml" /><stem n="bezier4" chunk="Search_Chunk515.xml" /><stem n="ping-pong" chunk="Search_Chunk515.xml" /><stem n="pong" chunk="Search_Chunk515.xml" /><stem n="splinewarp3" chunk="Search_Chunk515.xml" /><stem n="fader" chunk="Search_Chunk515.xml" /><stem n="jawlin" chunk="Search_Chunk515.xml" /><stem n="ourselv" chunk="Search_Chunk515.xml" /><stem n="unhappi" chunk="Search_Chunk515.xml" /><stem n="jaw" chunk="Search_Chunk515.xml" /><stem n="fold" chunk="Search_Chunk516.xml" /><stem n="undeform" chunk="Search_Chunk516.xml" /><stem n="tight" chunk="Search_Chunk516.xml" /><stem n="pucker" chunk="Search_Chunk516.xml" /><stem n="wobbl" chunk="Search_Chunk516.xml" /><stem n="re-organ" chunk="Search_Chunk516.xml" /><stem n="b_side" chunk="Search_Chunk516.xml" /><stem n="a_sid" chunk="Search_Chunk516.xml" /><stem n="drew" chunk="Search_Chunk516.xml" /><stem n="partner" chunk="Search_Chunk516.xml" /><stem n="nostril" chunk="Search_Chunk516.xml" /><stem n="sweeten" chunk="Search_Chunk516.xml" /><stem n="nose1" chunk="Search_Chunk516.xml" /><stem n="protrud" chunk="Search_Chunk516.xml" /><stem n="tuck" chunk="Search_Chunk516.xml" /><stem n="protrus" chunk="Search_Chunk516.xml" /><stem n="attent" chunk="Search_Chunk516.xml" /><stem n="boon" chunk="Search_Chunk516.xml" /><stem n="stablil" chunk="Search_Chunk516.xml" /><stem n="mirrorrow" chunk="Search_Chunk516.xml" /><stem n="mirrorcolumn" chunk="Search_Chunk516.xml" /><stem n="offset_x" chunk="Search_Chunk516.xml" /><stem n="offset_i" chunk="Search_Chunk516.xml" /><stem n="add_track" chunk="Search_Chunk516.xml" /><stem n="del_track" chunk="Search_Chunk516.xml" /><stem n="select_al" chunk="Search_Chunk516.xml" /><stem n="average_track" chunk="Search_Chunk516.xml" /><stem n="cornerpinopt" chunk="Search_Chunk516.xml" /><stem n="standalon" chunk="Search_Chunk516.xml" /><stem n="createcornerpin" chunk="Search_Chunk516.xml" /><stem n="max_it" chunk="Search_Chunk516.xml" /><stem n="max-error" chunk="Search_Chunk516.xml" /><stem n="show_error_on_track_link" chunk="Search_Chunk516.xml" /><stem n="snap_to_mark" chunk="Search_Chunk516.xml" /><stem n="zoom_window_behavior" chunk="Search_Chunk516.xml" /><stem n="zoom_window_s" chunk="Search_Chunk516.xml" /><stem n="200px" chunk="Search_Chunk516.xml" /><stem n="zoom_magnification_s" chunk="Search_Chunk516.xml" /><stem n="x1" chunk="Search_Chunk516.xml" /><stem n="predict_track" chunk="Search_Chunk516.xml" /><stem n="grab_behavior" chunk="Search_Chunk516.xml" /><stem n="&lt;&gt;" chunk="Search_Chunk516.xml" /><stem n="grab_interv" chunk="Search_Chunk516.xml" /><stem n="grab_error_abov" chunk="Search_Chunk516.xml" /><stem n="grab_error_below" chunk="Search_Chunk516.xml" /><stem n="auto_regrab_pattern" chunk="Search_Chunk516.xml" /><stem n="regrab_when_offset" chunk="Search_Chunk516.xml" /><stem n="retrack_on_mov" chunk="Search_Chunk516.xml" /><stem n="create_key_on_mov" chunk="Search_Chunk516.xml" /><stem n="auto-tracks_delete_keyfram" chunk="Search_Chunk516.xml" /><stem n="tracks_delete_keyfram" chunk="Search_Chunk516.xml" /><stem n="keyframe_displai" chunk="Search_Chunk516.xml" /><stem n="keyframe_s" chunk="Search_Chunk516.xml" /><stem n="100px" chunk="Search_Chunk516.xml" /><stem n="on_screen" chunk="Search_Chunk516.xml" /><stem n="key-track" chunk="Search_Chunk516.xml" /><stem n="max_number_of_keyframe_tracks_to_displai" chunk="Search_Chunk516.xml" /><stem n="1pt" chunk="Search_Chunk516.xml" /><stem n="high-frequ" chunk="Search_Chunk516.xml" /><stem n="jitter_period" chunk="Search_Chunk516.xml" /><stem n="smootht" chunk="Search_Chunk516.xml" /><stem n="smoothr" chunk="Search_Chunk516.xml" /><stem n="livelink_transform" chunk="Search_Chunk516.xml" /><stem n="sticker" chunk="Search_Chunk516.xml" /><stem n="re-design" chunk="Search_Chunk516.xml" /><stem n="+click+drag" chunk="Search_Chunk516.xml" /><stem n="tricki" chunk="Search_Chunk516.xml" /><stem n="handrail" chunk="Search_Chunk516.xml" /><stem n="199" chunk="Search_Chunk516.xml" /><stem n="re-calcul" chunk="Search_Chunk516.xml" /><stem n="rush" chunk="Search_Chunk516.xml" /><stem n="bitmap" chunk="Search_Chunk516.xml" /><stem n="square75" chunk="Search_Chunk516.xml" /><stem n="75x75" chunk="Search_Chunk516.xml" /><stem n="dan" chunk="Search_Chunk516.xml" /><stem n="instant" chunk="Search_Chunk516.xml" /><stem n="heat" chunk="Search_Chunk516.xml" /><stem n="disturb" chunk="Search_Chunk516.xml" /><stem n="dancer" chunk="Search_Chunk516.xml" /><stem n="bother" chunk="Search_Chunk516.xml" /><stem n="196" chunk="Search_Chunk516.xml" /><stem n="congratul" chunk="Search_Chunk516.xml" /><stem n="165" chunk="Search_Chunk516.xml" /><stem n="pretend" chunk="Search_Chunk516.xml" /><stem n="hi" chunk="Search_Chunk516.xml" /><stem n="radic" chunk="Search_Chunk516.xml" /><stem n="magic" chunk="Search_Chunk516.xml" /><stem n="149" chunk="Search_Chunk516.xml" /><stem n="peak" chunk="Search_Chunk516.xml" /><stem n="uncov" chunk="Search_Chunk516.xml" /><stem n="proceed" chunk="Search_Chunk516.xml" /><stem n="saw" chunk="Search_Chunk516.xml" /><stem n="keyframe-bas" chunk="Search_Chunk516.xml" /><stem n="enjoi" chunk="Search_Chunk516.xml" /><stem n="trickier" chunk="Search_Chunk516.xml" /><stem n="tattoo" chunk="Search_Chunk516.xml" /><stem n="went" chunk="Search_Chunk516.xml" /><stem n="determinist" chunk="Search_Chunk516.xml" /><stem n="101" chunk="Search_Chunk516.xml" /><stem n="113" chunk="Search_Chunk516.xml" /><stem n="chop" chunk="Search_Chunk516.xml" /><stem n="impart" chunk="Search_Chunk516.xml" /><stem n="nasti" chunk="Search_Chunk516.xml" /><stem n="bomb" chunk="Search_Chunk516.xml" /><stem n="boat" chunk="Search_Chunk516.xml" /><stem n="proof" chunk="Search_Chunk516.xml" /><stem n="pud" chunk="Search_Chunk516.xml" /><stem n="invert_matrix" chunk="Search_Chunk516.xml" /><stem n="inpaint" chunk="Search_Chunk516.xml" /><stem n="tvi" chunk="Search_Chunk516.xml" /><stem n="non-noisi" chunk="Search_Chunk516.xml" /><stem n="divides-by-zero" chunk="Search_Chunk516.xml" /><stem n="divides-bi" chunk="Search_Chunk516.xml" /><stem n="by-zero" chunk="Search_Chunk516.xml" /><stem n="render_mod" chunk="Search_Chunk516.xml" /><stem n="filter_name_match" chunk="Search_Chunk517.xml" /><stem n="filter_nam" chunk="Search_Chunk517.xml" /><stem n="filter_refresh" chunk="Search_Chunk517.xml" /><stem n="rst" chunk="Search_Chunk517.xml" /><stem n="tsr" chunk="Search_Chunk517.xml" /><stem n="world_matrix" chunk="Search_Chunk517.xml" /><stem n="fbx_take_nam" chunk="Search_Chunk517.xml" /><stem n="fbx_node_nam" chunk="Search_Chunk517.xml" /><stem n="frame_r" chunk="Search_Chunk517.xml" /><stem n="use_frame_r" chunk="Search_Chunk517.xml" /><stem n="look_axi" chunk="Search_Chunk517.xml" /><stem n="look_rotate_x" chunk="Search_Chunk517.xml" /><stem n="look_rotate_i" chunk="Search_Chunk517.xml" /><stem n="look_rotate_z" chunk="Search_Chunk517.xml" /><stem n="look_strength" chunk="Search_Chunk517.xml" /><stem n="look_use_quaternion" chunk="Search_Chunk517.xml" /><stem n="min_shini" chunk="Search_Chunk517.xml" /><stem n="max_shini" chunk="Search_Chunk517.xml" /><stem n="shininess_channel" chunk="Search_Chunk517.xml" /><stem n="surfaceblend" chunk="Search_Chunk517.xml" /><stem n="fragment" chunk="Search_Chunk517.xml" /><stem n="project_mod" chunk="Search_Chunk517.xml" /><stem n="576" chunk="Search_Chunk517.xml" /><stem n="vapertur" chunk="Search_Chunk517.xml" /><stem n="672" chunk="Search_Chunk517.xml" /><stem n="10000" chunk="Search_Chunk517.xml" /><stem n="win_transl" chunk="Search_Chunk517.xml" /><stem n="win_scal" chunk="Search_Chunk517.xml" /><stem n="winrol" chunk="Search_Chunk517.xml" /><stem n="fstop" chunk="Search_Chunk517.xml" /><stem n="compute_rot" chunk="Search_Chunk517.xml" /><stem n="orbit" chunk="Search_Chunk517.xml" /><stem n="pill-lik" chunk="Search_Chunk517.xml" /><stem n="pill" chunk="Search_Chunk517.xml" /><stem n="pre-anim" chunk="Search_Chunk517.xml" /><stem n="came" chunk="Search_Chunk517.xml" /><stem n="sourcetyp" chunk="Search_Chunk517.xml" /><stem n="contigu" chunk="Search_Chunk517.xml" /><stem n="intervent" chunk="Search_Chunk517.xml" /><stem n="trackrang" chunk="Search_Chunk517.xml" /><stem n="trackstart" chunk="Search_Chunk517.xml" /><stem n="trackstop" chunk="Search_Chunk517.xml" /><stem n="referencefram" chunk="Search_Chunk517.xml" /><stem n="addreferencefram" chunk="Search_Chunk517.xml" /><stem n="deletereferencefram" chunk="Search_Chunk517.xml" /><stem n="addreference-" chunk="Search_Chunk517.xml" /><stem n="addrefer" chunk="Search_Chunk517.xml" /><stem n="framesmenu" chunk="Search_Chunk517.xml" /><stem n="deletereference-" chunk="Search_Chunk517.xml" /><stem n="deleterefer" chunk="Search_Chunk517.xml" /><stem n="principalview" chunk="Search_Chunk517.xml" /><stem n="cameramotionlink" chunk="Search_Chunk517.xml" /><stem n="stationari" chunk="Search_Chunk517.xml" /><stem n="lensdistotiontypelink" chunk="Search_Chunk517.xml" /><stem n="focallengthtyp" chunk="Search_Chunk517.xml" /><stem n="knownfocallength" chunk="Search_Chunk517.xml" /><stem n="filmbacksizepreset" chunk="Search_Chunk517.xml" /><stem n="filmbacks" chunk="Search_Chunk517.xml" /><stem n="sensor" chunk="Search_Chunk517.xml" /><stem n="filmbackunit" chunk="Search_Chunk517.xml" /><stem n="trackfeatur" chunk="Search_Chunk517.xml" /><stem n="updatetrack" chunk="Search_Chunk517.xml" /><stem n="cleartrack" chunk="Search_Chunk517.xml" /><stem n="acknowledg" chunk="Search_Chunk517.xml" /><stem n="solvecamera" chunk="Search_Chunk517.xml" /><stem n="updatesolv" chunk="Search_Chunk517.xml" /><stem n="resetsolv" chunk="Search_Chunk517.xml" /><stem n="solverms" chunk="Search_Chunk517.xml" /><stem n="solveerror" chunk="Search_Chunk517.xml" /><stem n="exportmenu" chunk="Search_Chunk517.xml" /><stem n="exportbutton" chunk="Search_Chunk517.xml" /><stem n="linkoutput" chunk="Search_Chunk517.xml" /><stem n="usertrackview" chunk="Search_Chunk517.xml" /><stem n="lx" chunk="Search_Chunk517.xml" /><stem n="ly" chunk="Search_Chunk517.xml" /><stem n="addusertrack" chunk="Search_Chunk517.xml" /><stem n="deleteusertrack" chunk="Search_Chunk517.xml" /><stem n="autotrackusertrack" chunk="Search_Chunk517.xml" /><stem n="updateusertrackxyz" chunk="Search_Chunk517.xml" /><stem n="importusertrack" chunk="Search_Chunk517.xml" /><stem n="exportusertrack" chunk="Search_Chunk517.xml" /><stem n="importtrack" chunk="Search_Chunk517.xml" /><stem n="exporttrack" chunk="Search_Chunk517.xml" /><stem n="curvesview" chunk="Search_Chunk517.xml" /><stem n="trackcurv" chunk="Search_Chunk517.xml" /><stem n="minlengththreshold" chunk="Search_Chunk517.xml" /><stem n="redefin" chunk="Search_Chunk517.xml" /><stem n="maxrmsethreshold" chunk="Search_Chunk517.xml" /><stem n="maxerrorthreshold" chunk="Search_Chunk517.xml" /><stem n="refinesolv" chunk="Search_Chunk517.xml" /><stem n="refineopt" chunk="Search_Chunk517.xml" /><stem n="finess" chunk="Search_Chunk517.xml" /><stem n="unsolv" chunk="Search_Chunk517.xml" /><stem n="deleteinvalidtrack" chunk="Search_Chunk517.xml" /><stem n="deleterejectedtrack" chunk="Search_Chunk517.xml" /><stem n="deleteautotrack" chunk="Search_Chunk517.xml" /><stem n="numberfeatur" chunk="Search_Chunk517.xml" /><stem n="featurethreshold" chunk="Search_Chunk517.xml" /><stem n="featurespear" chunk="Search_Chunk517.xml" /><stem n="refinefeatur" chunk="Search_Chunk517.xml" /><stem n="previewfeatur" chunk="Search_Chunk517.xml" /><stem n="mintracklength" chunk="Search_Chunk517.xml" /><stem n="matchthreshold" chunk="Search_Chunk517.xml" /><stem n="69999999" chunk="Search_Chunk517.xml" /><stem n="smoothnessthreshold" chunk="Search_Chunk517.xml" /><stem n="glitch" chunk="Search_Chunk517.xml" /><stem n="consistencythreshold" chunk="Search_Chunk517.xml" /><stem n="keyframesepar" chunk="Search_Chunk517.xml" /><stem n="motionsmooth" chunk="Search_Chunk517.xml" /><stem n="rootreferencefram" chunk="Search_Chunk517.xml" /><stem n="setrootfram" chunk="Search_Chunk517.xml" /><stem n="alignsecondari" chunk="Search_Chunk517.xml" /><stem n="interaxi" chunk="Search_Chunk517.xml" /><stem n="constantinteraxi" chunk="Search_Chunk517.xml" /><stem n="interaxialdist" chunk="Search_Chunk517.xml" /><stem n="coverg" chunk="Search_Chunk517.xml" /><stem n="displaytrack" chunk="Search_Chunk517.xml" /><stem n="displayreproject" chunk="Search_Chunk517.xml" /><stem n="higlight" chunk="Search_Chunk517.xml" /><stem n="keyframepointsonli" chunk="Search_Chunk517.xml" /><stem n="displaymark" chunk="Search_Chunk517.xml" /><stem n="scaleconstraint" chunk="Search_Chunk517.xml" /><stem n="deletescaleconstraint" chunk="Search_Chunk517.xml" /><stem n="local_matrix" chunk="Search_Chunk517.xml" /><stem n="resetscenetransform" chunk="Search_Chunk517.xml" /><stem n="camtransl" chunk="Search_Chunk517.xml" /><stem n="camrot" chunk="Search_Chunk517.xml" /><stem n="focallength" chunk="Search_Chunk517.xml" /><stem n="windowtransl" chunk="Search_Chunk517.xml" /><stem n="windowscal" chunk="Search_Chunk517.xml" /><stem n="lensdistortiontyp" chunk="Search_Chunk517.xml" /><stem n="+wirefram" chunk="Search_Chunk517.xml" /><stem n="cast_shadow" chunk="Search_Chunk518.xml" /><stem n="receive_shadow" chunk="Search_Chunk518.xml" /><stem n="range_first" chunk="Search_Chunk518.xml" /><stem n="range_last" chunk="Search_Chunk518.xml" /><stem n="image_aspect" chunk="Search_Chunk518.xml" /><stem n="ens-in" chunk="Search_Chunk518.xml" /><stem n="use_vertical_lock" chunk="Search_Chunk518.xml" /><stem n="lens_in_distort_a" chunk="Search_Chunk518.xml" /><stem n="lens_in_distort_b" chunk="Search_Chunk518.xml" /><stem n="lens_in_distort_c" chunk="Search_Chunk518.xml" /><stem n="lens_in_distort" chunk="Search_Chunk518.xml" /><stem n="lens_in_pow" chunk="Search_Chunk518.xml" /><stem n="reset_handl" chunk="Search_Chunk518.xml" /><stem n="reset_tang" chunk="Search_Chunk518.xml" /><stem n="copy_shap" chunk="Search_Chunk518.xml" /><stem n="paste_shap" chunk="Search_Chunk518.xml" /><stem n="set_key_shap" chunk="Search_Chunk518.xml" /><stem n="del_key_shap" chunk="Search_Chunk518.xml" /><stem n="del_anim_shap" chunk="Search_Chunk518.xml" /><stem n="x_point" chunk="Search_Chunk518.xml" /><stem n="y_point" chunk="Search_Chunk518.xml" /><stem n="new_shap" chunk="Search_Chunk518.xml" /><stem n="x_subdivid" chunk="Search_Chunk518.xml" /><stem n="y_subdivid" chunk="Search_Chunk518.xml" /><stem n="uv_posit" chunk="Search_Chunk518.xml" /><stem n="3525" chunk="Search_Chunk518.xml" /><stem n="uv_subdivid" chunk="Search_Chunk518.xml" /><stem n="u_subdivid" chunk="Search_Chunk518.xml" /><stem n="v_subdivid" chunk="Search_Chunk518.xml" /><stem n="control_point" chunk="Search_Chunk518.xml" /><stem n="uniform_subdivid" chunk="Search_Chunk518.xml" /><stem n="break_tang" chunk="Search_Chunk518.xml" /><stem n="mirror_tang" chunk="Search_Chunk518.xml" /><stem n="frame_first" chunk="Search_Chunk518.xml" /><stem n="frame_last" chunk="Search_Chunk518.xml" /><stem n="separate_fac" chunk="Search_Chunk518.xml" /><stem n="-0.5," chunk="Search_Chunk518.xml" /><stem n="u_ext" chunk="Search_Chunk518.xml" /><stem n="close_top" chunk="Search_Chunk518.xml" /><stem n="close_bottom" chunk="Search_Chunk518.xml" /><stem n="ignoremask" chunk="Search_Chunk518.xml" /><stem n="createcard" chunk="Search_Chunk518.xml" /><stem n="p_channel" chunk="Search_Chunk518.xml" /><stem n="n_channel" chunk="Search_Chunk518.xml" /><stem n="analyzesequ" chunk="Search_Chunk518.xml" /><stem n="analyzefram" chunk="Search_Chunk518.xml" /><stem n="framesepar" chunk="Search_Chunk518.xml" /><stem n="normaldetail" chunk="Search_Chunk518.xml" /><stem n="noiselevel" chunk="Search_Chunk518.xml" /><stem n="markregion" chunk="Search_Chunk518.xml" /><stem n="cast-shadow" chunk="Search_Chunk518.xml" /><stem n="pointsiz" chunk="Search_Chunk518.xml" /><stem n="shadow_mod" chunk="Search_Chunk518.xml" /><stem n="scene_epsilon" chunk="Search_Chunk518.xml" /><stem n="sample_width" chunk="Search_Chunk518.xml" /><stem n="depthmap_bia" chunk="Search_Chunk518.xml" /><stem n="depthmap_slope_" chunk="Search_Chunk518.xml" /><stem n="clipping_threshold" chunk="Search_Chunk518.xml" /><stem n="shadow_jitter_scal" chunk="Search_Chunk518.xml" /><stem n="depthmap_width" chunk="Search_Chunk518.xml" /><stem n="shadow_mask" chunk="Search_Chunk518.xml" /><stem n="filter_s" chunk="Search_Chunk518.xml" /><stem n="uv_attrib_nam" chunk="Search_Chunk518.xml" /><stem n="cf" chunk="Search_Chunk518.xml" /><stem n="pw" chunk="Search_Chunk518.xml" /><stem n="world-spac" chunk="Search_Chunk518.xml" /><stem n="recalc_norm" chunk="Search_Chunk518.xml" /><stem n="displacement_channel" chunk="Search_Chunk518.xml" /><stem n="normal_expans" chunk="Search_Chunk518.xml" /><stem n="xy-1" chunk="Search_Chunk518.xml" /><stem n="xyz-1" chunk="Search_Chunk518.xml" /><stem n="build_norm" chunk="Search_Chunk518.xml" /><stem n="displacement_max_tessel" chunk="Search_Chunk518.xml" /><stem n="displacement_mod" chunk="Search_Chunk518.xml" /><stem n="displacement__edge_length" chunk="Search_Chunk518.xml" /><stem n="displacement_edge_threshold" chunk="Search_Chunk518.xml" /><stem n="displacement_normal_threshold" chunk="Search_Chunk518.xml" /><stem n="orthogon" chunk="Search_Chunk518.xml" /><stem n="displacement_displace_threshold" chunk="Search_Chunk518.xml" /><stem n="axis_align" chunk="Search_Chunk518.xml" /><stem n="set_kei" chunk="Search_Chunk518.xml" /><stem n="remove_kei" chunk="Search_Chunk518.xml" /><stem n="save_select" chunk="Search_Chunk518.xml" /><stem n="restore_select" chunk="Search_Chunk518.xml" /><stem n="light_typ" chunk="Search_Chunk518.xml" /><stem n="irrelev" chunk="Search_Chunk518.xml" /><stem n="cone_angl" chunk="Search_Chunk518.xml" /><stem n="cone_penumbra_angl" chunk="Search_Chunk518.xml" /><stem n="cone_falloff" chunk="Search_Chunk518.xml" /><stem n="falloff_typ" chunk="Search_Chunk518.xml" /><stem n="depthmap_slope_bia" chunk="Search_Chunk518.xml" /><stem n="intensity_scal" chunk="Search_Chunk518.xml" /><stem n="clamp_black" chunk="Search_Chunk518.xml" /><stem n="shadow_overrid" chunk="Search_Chunk518.xml" /><stem n="sceneadd" chunk="Search_Chunk518.xml" /><stem n="scenedelet" chunk="Search_Chunk518.xml" /><stem n="scenecopi" chunk="Search_Chunk518.xml" /><stem n="shapedist" chunk="Search_Chunk518.xml" /><stem n="texturetyp" chunk="Search_Chunk518.xml" /><stem n="texturefram" chunk="Search_Chunk518.xml" /><stem n="previewtextur" chunk="Search_Chunk518.xml" /><stem n="bakemenu" chunk="Search_Chunk518.xml" /><stem n="srcdisplai" chunk="Search_Chunk518.xml" /><stem n="passthroughgeo" chunk="Search_Chunk518.xml" /><stem n="createpoint" chunk="Search_Chunk518.xml" /><stem n="newcardrow" chunk="Search_Chunk518.xml" /><stem n="newcardcol" chunk="Search_Chunk518.xml" /><stem n="createcub" chunk="Search_Chunk518.xml" /><stem n="newcuberow" chunk="Search_Chunk518.xml" /><stem n="newcubecol" chunk="Search_Chunk518.xml" /><stem n="newcubeslic" chunk="Search_Chunk518.xml" /><stem n="createspher" chunk="Search_Chunk518.xml" /><stem n="newsphererow" chunk="Search_Chunk518.xml" /><stem n="newspherecol" chunk="Search_Chunk518.xml" /><stem n="createcon" chunk="Search_Chunk518.xml" /><stem n="newconeslic" chunk="Search_Chunk518.xml" /><stem n="createcylind" chunk="Search_Chunk518.xml" /><stem n="newcylinderrow" chunk="Search_Chunk518.xml" /><stem n="newcylindercol" chunk="Search_Chunk518.xml" /><stem n="everybodi" chunk="Search_Chunk518.xml" /><stem n="jon" chunk="Search_Chunk518.xml" /><stem n="line-up" chunk="Search_Chunk518.xml" /><stem n="builder" chunk="Search_Chunk518.xml" /><stem n="tower" chunk="Search_Chunk518.xml" /><stem n="symmetr" chunk="Search_Chunk518.xml" /><stem n="windowsil" chunk="Search_Chunk518.xml" /><stem n="bed" chunk="Search_Chunk518.xml" /><stem n="ribarch" chunk="Search_Chunk518.xml" /><stem n="useribarch" chunk="Search_Chunk518.xml" /><stem n="ribstat" chunk="Search_Chunk518.xml" /><stem n="malform" chunk="Search_Chunk518.xml" /><stem n="unclos" chunk="Search_Chunk518.xml" /><stem n="n_attrib_nam" chunk="Search_Chunk518.xml" /><stem n="projection_mod" chunk="Search_Chunk518.xml" /><stem n="addkeyfram" chunk="Search_Chunk518.xml" /><stem n="deletekeyfram" chunk="Search_Chunk518.xml" /><stem n="framespac" chunk="Search_Chunk518.xml" /><stem n="15th" chunk="Search_Chunk518.xml" /><stem n="addallkeyfram" chunk="Search_Chunk518.xml" /><stem n="cleaner" chunk="Search_Chunk518.xml" /><stem n="pointsepar" chunk="Search_Chunk518.xml" /><stem n="notat" chunk="Search_Chunk518.xml" /><stem n="1-19" chunk="Search_Chunk518.xml" /><stem n="40-60" chunk="Search_Chunk518.xml" /><stem n="65" chunk="Search_Chunk518.xml" /><stem n="65-100" chunk="Search_Chunk518.xml" /><stem n="clearpoint" chunk="Search_Chunk518.xml" /><stem n="displayrejectedpoint" chunk="Search_Chunk518.xml" /><stem n="mintriangl" chunk="Search_Chunk518.xml" /><stem n="densitythreshold" chunk="Search_Chunk518.xml" /><stem n="deletereject" chunk="Search_Chunk518.xml" /><stem n="outputperfram" chunk="Search_Chunk518.xml" /><stem n="displaygroup" chunk="Search_Chunk518.xml" /><stem n="outputgroup" chunk="Search_Chunk518.xml" /><stem n="creategroup" chunk="Search_Chunk518.xml" /><stem n="deletegroup" chunk="Search_Chunk518.xml" /><stem n="bakegroup" chunk="Search_Chunk518.xml" /><stem n="bakemesh" chunk="Search_Chunk518.xml" /><stem n="sgp" chunk="Search_Chunk518.xml" /><stem n="2006" chunk="Search_Chunk519.xml" /><stem n="samplespernod" chunk="Search_Chunk519.xml" /><stem n="noise-fre" chunk="Search_Chunk519.xml" /><stem n="useselect" chunk="Search_Chunk519.xml" /><stem n="usefilt" chunk="Search_Chunk519.xml" /><stem n="2^d" chunk="Search_Chunk519.xml" /><stem n="reconstructor" chunk="Search_Chunk519.xml" /><stem n="octre" chunk="Search_Chunk519.xml" /><stem n="solverdivid" chunk="Search_Chunk519.xml" /><stem n="isodivid" chunk="Search_Chunk519.xml" /><stem n="noise-reduc" chunk="Search_Chunk519.xml" /><stem n="raytrace_max_depth" chunk="Search_Chunk519.xml" /><stem n="pixel_sampl" chunk="Search_Chunk519.xml" /><stem n="shading_r" chunk="Search_Chunk519.xml" /><stem n="antialiasing_filt" chunk="Search_Chunk519.xml" /><stem n="antialiasing_filter_s" chunk="Search_Chunk519.xml" /><stem n="shuttercustom" chunk="Search_Chunk519.xml" /><stem n="temporal_jitt" chunk="Search_Chunk519.xml" /><stem n="shutter_open" chunk="Search_Chunk519.xml" /><stem n="output_motion_vectors_typ" chunk="Search_Chunk519.xml" /><stem n="mb_channel" chunk="Search_Chunk519.xml" /><stem n="output_shader_vector" chunk="Search_Chunk519.xml" /><stem n="ribfilt" chunk="Search_Chunk519.xml" /><stem n="filterarg" chunk="Search_Chunk519.xml" /><stem n="-rif" chunk="Search_Chunk519.xml" /><stem n="ri" chunk="Search_Chunk519.xml" /><stem n="nodenam" chunk="Search_Chunk519.xml" /><stem n="x_size" chunk="Search_Chunk519.xml" /><stem n="y_size" chunk="Search_Chunk519.xml" /><stem n="project_on" chunk="Search_Chunk519.xml" /><stem n="occlusion_mod" chunk="Search_Chunk519.xml" /><stem n="raycast" chunk="Search_Chunk519.xml" /><stem n="power_bia" chunk="Search_Chunk519.xml" /><stem n="preserve_cent" chunk="Search_Chunk519.xml" /><stem n="read_on_each_fram" chunk="Search_Chunk519.xml" /><stem n="sub_fram" chunk="Search_Chunk519.xml" /><stem n="lock_fram" chunk="Search_Chunk519.xml" /><stem n="point_render_mod" chunk="Search_Chunk519.xml" /><stem n="use_geometry_color" chunk="Search_Chunk519.xml" /><stem n="-------" chunk="Search_Chunk519.xml" /><stem n="object_typ" chunk="Search_Chunk519.xml" /><stem n="all_object" chunk="Search_Chunk519.xml" /><stem n="update_mod" chunk="Search_Chunk519.xml" /><stem n="point-cloud" chunk="Search_Chunk519.xml" /><stem n="full_geometry_fram" chunk="Search_Chunk519.xml" /><stem n="coord" chunk="Search_Chunk519.xml" /><stem n="read_texture_w_coord" chunk="Search_Chunk519.xml" /><stem n="scene_view" chunk="Search_Chunk519.xml" /><stem n="reflection_color" chunk="Search_Chunk519.xml" /><stem n="reflection_valu" chunk="Search_Chunk519.xml" /><stem n="refraction_index" chunk="Search_Chunk519.xml" /><stem n="refraction_valu" chunk="Search_Chunk519.xml" /><stem n="ztest_en" chunk="Search_Chunk519.xml" /><stem n="zblend_mod" chunk="Search_Chunk519.xml" /><stem n="back-compat" chunk="Search_Chunk519.xml" /><stem n="zblend_rang" chunk="Search_Chunk519.xml" /><stem n="max_tessel" chunk="Search_Chunk519.xml" /><stem n="spacial_jitt" chunk="Search_Chunk519.xml" /><stem n="focal_jitt" chunk="Search_Chunk519.xml" /><stem n="stochastic_sampl" chunk="Search_Chunk519.xml" /><stem n="uniform_distribut" chunk="Search_Chunk519.xml" /><stem n="motion_vectors_typ" chunk="Search_Chunk519.xml" /><stem n="drop_zero_alpha_sampl" chunk="Search_Chunk519.xml" /><stem n="v_extent" chunk="Search_Chunk519.xml" /><stem n="45°" chunk="Search_Chunk519.xml" /><stem n="transform_norm" chunk="Search_Chunk519.xml" /><stem n="rotate_x" chunk="Search_Chunk519.xml" /><stem n="rotate_i" chunk="Search_Chunk519.xml" /><stem n="rotate_z" chunk="Search_Chunk519.xml" /><stem n="use_quaternion" chunk="Search_Chunk519.xml" /><stem n="reset_shap" chunk="Search_Chunk519.xml" /><stem n="p0-p7" chunk="Search_Chunk519.xml" /><stem n="p3" chunk="Search_Chunk519.xml" /><stem n="p4" chunk="Search_Chunk519.xml" /><stem n="p5" chunk="Search_Chunk519.xml" /><stem n="p6" chunk="Search_Chunk519.xml" /><stem n="src_use_bbox" chunk="Search_Chunk519.xml" /><stem n="reset_src_shap" chunk="Search_Chunk519.xml" /><stem n="src_color" chunk="Search_Chunk519.xml" /><stem n="src1" chunk="Search_Chunk519.xml" /><stem n="udim_en" chunk="Search_Chunk519.xml" /><stem n="tile_u" chunk="Search_Chunk519.xml" /><stem n="tile_v" chunk="Search_Chunk519.xml" /><stem n="wrap_u" chunk="Search_Chunk519.xml" /><stem n="indefinit" chunk="Search_Chunk519.xml" /><stem n="wrap_v" chunk="Search_Chunk519.xml" /><stem n="line_width" chunk="Search_Chunk519.xml" /><stem n="line_color" chunk="Search_Chunk519.xml" /><stem n="type-specif" chunk="Search_Chunk519.xml" /><stem n="alembic-specif" chunk="Search_Chunk519.xml" /><stem n="fbx-specif" chunk="Search_Chunk519.xml" /><stem n="writegeometri" chunk="Search_Chunk519.xml" /><stem n="writepointcloud" chunk="Search_Chunk519.xml" /><stem n="writecamera" chunk="Search_Chunk519.xml" /><stem n="writeax" chunk="Search_Chunk519.xml" /><stem n="storageformat" chunk="Search_Chunk519.xml" /><stem n="writelight" chunk="Search_Chunk519.xml" /><stem n="asciifileformat" chunk="Search_Chunk519.xml" /><stem n="animatemeshvertic" chunk="Search_Chunk519.xml" /><stem n="electr" chunk="Search_Chunk519.xml" /><stem n="out_bounce_mod" chunk="Search_Chunk519.xml" /><stem n="out_new_channel" chunk="Search_Chunk519.xml" /><stem n="out_bounc" chunk="Search_Chunk519.xml" /><stem n="out_frict" chunk="Search_Chunk519.xml" /><stem n="backspin" chunk="Search_Chunk519.xml" /><stem n="in_bounce_mod" chunk="Search_Chunk519.xml" /><stem n="in_new_channel" chunk="Search_Chunk519.xml" /><stem n="in_bounc" chunk="Search_Chunk519.xml" /><stem n="in_frict" chunk="Search_Chunk519.xml" /><stem n="bounceaxis_file_menu" chunk="Search_Chunk519.xml" /><stem n="bounceaxis_snap_menu" chunk="Search_Chunk519.xml" /><stem n="bounceaxis_xform_ord" chunk="Search_Chunk519.xml" /><stem n="bounceaxis_rot_ord" chunk="Search_Chunk519.xml" /><stem n="bounceaxis_transl" chunk="Search_Chunk519.xml" /><stem n="bounceaxis_rot" chunk="Search_Chunk519.xml" /><stem n="bounceaxis_sc" chunk="Search_Chunk519.xml" /><stem n="bounceaxis_uniform_scal" chunk="Search_Chunk519.xml" /><stem n="bounceaxis_skew" chunk="Search_Chunk519.xml" /><stem n="bounceaxis_pivot" chunk="Search_Chunk519.xml" /><stem n="bounceaxis_matrix" chunk="Search_Chunk519.xml" /><stem n="half-spac" chunk="Search_Chunk519.xml" /><stem n="region_invert" chunk="Search_Chunk519.xml" /><stem n="fundament" chunk="Search_Chunk519.xml" /><stem n="subfram" chunk="Search_Chunk519.xml" /><stem n="said" chunk="Search_Chunk519.xml" /><stem n="1534" chunk="Search_Chunk519.xml" /><stem n="birth" chunk="Search_Chunk519.xml" /><stem n="death" chunk="Search_Chunk519.xml" /><stem n="die" chunk="Search_Chunk519.xml" /><stem n="well-docu" chunk="Search_Chunk519.xml" /><stem n="delv" chunk="Search_Chunk519.xml" /><stem n="deeper" chunk="Search_Chunk519.xml" /><stem n="thought" chunk="Search_Chunk520.xml" /><stem n="stuck" chunk="Search_Chunk520.xml" /><stem n="particleemiss" chunk="Search_Chunk520.xml" /><stem n="parenthes" chunk="Search_Chunk520.xml" /><stem n="blown" chunk="Search_Chunk520.xml" /><stem n="promis" chunk="Search_Chunk520.xml" /><stem n="mysteri" chunk="Search_Chunk520.xml" /><stem n="told" chunk="Search_Chunk520.xml" /><stem n="particle_cache_pad" chunk="Search_Chunk520.xml" /><stem n="particle_cache_read_from_fil" chunk="Search_Chunk520.xml" /><stem n="re-evalu" chunk="Search_Chunk520.xml" /><stem n="affect_rgb" chunk="Search_Chunk520.xml" /><stem n="affect_alpha" chunk="Search_Chunk520.xml" /><stem n="affect_s" chunk="Search_Chunk520.xml" /><stem n="affect_mass" chunk="Search_Chunk520.xml" /><stem n="min_ag" chunk="Search_Chunk520.xml" /><stem n="max_ag" chunk="Search_Chunk520.xml" /><stem n="1-drag" chunk="Search_Chunk520.xml" /><stem n="percent" chunk="Search_Chunk520.xml" /><stem n="rotational_drag" chunk="Search_Chunk520.xml" /><stem n="start_fram" chunk="Search_Chunk520.xml" /><stem n="emit_from" chunk="Search_Chunk520.xml" /><stem n="emit_ord" chunk="Search_Chunk520.xml" /><stem n="randomize_typ" chunk="Search_Chunk520.xml" /><stem n="no_random_direct" chunk="Search_Chunk520.xml" /><stem n="selection_onli" chunk="Search_Chunk520.xml" /><stem n="selection_threshold" chunk="Search_Chunk520.xml" /><stem n="vertex_r" chunk="Search_Chunk520.xml" /><stem n="rate_vari" chunk="Search_Chunk520.xml" /><stem n="gaussian-distribut" chunk="Search_Chunk520.xml" /><stem n="rate_channel" chunk="Search_Chunk520.xml" /><stem n="lifetime_vari" chunk="Search_Chunk520.xml" /><stem n="lifetime_channel" chunk="Search_Chunk520.xml" /><stem n="radioact" chunk="Search_Chunk520.xml" /><stem n="decai" chunk="Search_Chunk520.xml" /><stem n="velocity_vari" chunk="Search_Chunk520.xml" /><stem n="velocity_channel" chunk="Search_Chunk520.xml" /><stem n="rotation_veloc" chunk="Search_Chunk520.xml" /><stem n="rotation_velocity_" chunk="Search_Chunk520.xml" /><stem n="rotation_velocity_channel" chunk="Search_Chunk520.xml" /><stem n="size_vari" chunk="Search_Chunk520.xml" /><stem n="size_channel" chunk="Search_Chunk520.xml" /><stem n="mass_vari" chunk="Search_Chunk520.xml" /><stem n="mass_channel" chunk="Search_Chunk520.xml" /><stem n="transfer_veloc" chunk="Search_Chunk520.xml" /><stem n="transfer_window" chunk="Search_Chunk520.xml" /><stem n="color_from_textur" chunk="Search_Chunk520.xml" /><stem n="input_ord" chunk="Search_Chunk520.xml" /><stem n="start_frame_anim" chunk="Search_Chunk520.xml" /><stem n="start_wrap" chunk="Search_Chunk520.xml" /><stem n="exceed" chunk="Search_Chunk520.xml" /><stem n="frame_adv" chunk="Search_Chunk520.xml" /><stem n="max_clip_length" chunk="Search_Chunk520.xml" /><stem n="per-particl" chunk="Search_Chunk520.xml" /><stem n="temp_expr0_pp" chunk="Search_Chunk520.xml" /><stem n="temp_expr1_pp" chunk="Search_Chunk520.xml" /><stem n="temp_expr2_pp" chunk="Search_Chunk520.xml" /><stem n="temp_expr3_pp" chunk="Search_Chunk520.xml" /><stem n="colexpr" chunk="Search_Chunk520.xml" /><stem n="colexpr_onlynew" chunk="Search_Chunk520.xml" /><stem n="opacity_expr" chunk="Search_Chunk520.xml" /><stem n="opacityexpr_onlynew" chunk="Search_Chunk520.xml" /><stem n="sizeexpr" chunk="Search_Chunk520.xml" /><stem n="sizeexpr_onlynew" chunk="Search_Chunk520.xml" /><stem n="massexpr" chunk="Search_Chunk520.xml" /><stem n="massexpr_onlynew" chunk="Search_Chunk520.xml" /><stem n="accelexpr" chunk="Search_Chunk520.xml" /><stem n="accelexpr_onlynew" chunk="Search_Chunk520.xml" /><stem n="forceexpr" chunk="Search_Chunk520.xml" /><stem n="forceexpr_onlynew" chunk="Search_Chunk520.xml" /><stem n="posexpr" chunk="Search_Chunk520.xml" /><stem n="_onlynewposexpr" chunk="Search_Chunk520.xml" /><stem n="velexpr" chunk="Search_Chunk520.xml" /><stem n="velexpr_onlynew" chunk="Search_Chunk520.xml" /><stem n="frameexpr" chunk="Search_Chunk520.xml" /><stem n="frameexpr_onlynew" chunk="Search_Chunk520.xml" /><stem n="channelsexpr" chunk="Search_Chunk520.xml" /><stem n="channelsexpr_onlynew" chunk="Search_Chunk520.xml" /><stem n="new_channel" chunk="Search_Chunk520.xml" /><stem n="steps_per_fram" chunk="Search_Chunk520.xml" /><stem n="ass" chunk="Search_Chunk520.xml" /><stem n="conserve_mass" chunk="Search_Chunk520.xml" /><stem n="conserve_momentum" chunk="Search_Chunk520.xml" /><stem n="velocity_direct" chunk="Search_Chunk520.xml" /><stem n="inherit_color" chunk="Search_Chunk520.xml" /><stem n="dispers" chunk="Search_Chunk520.xml" /><stem n="lattic" chunk="Search_Chunk520.xml" /><stem n="parallel_falloff" chunk="Search_Chunk520.xml" /><stem n="tangential_falloff" chunk="Search_Chunk520.xml" /><stem n="radial_falloff" chunk="Search_Chunk520.xml" /><stem n="air_resist" chunk="Search_Chunk520.xml" /><stem n="use_znear" chunk="Search_Chunk520.xml" /><stem n="use_zfar" chunk="Search_Chunk520.xml" /><stem n="outside_zrang" chunk="Search_Chunk520.xml" /><stem n="use_bbox" chunk="Search_Chunk520.xml" /><stem n="outside_bbox" chunk="Search_Chunk520.xml" /><stem n="chans1" chunk="Search_Chunk520.xml" /><stem n="chans2" chunk="Search_Chunk520.xml" /><stem n="alpha_mod" chunk="Search_Chunk520.xml" /><stem n="1-pow" chunk="Search_Chunk520.xml" /><stem n="1-alpha" chunk="Search_Chunk520.xml" /><stem n="numsampl" chunk="Search_Chunk520.xml" /><stem n="front-most" chunk="Search_Chunk520.xml" /><stem n="furthermost" chunk="Search_Chunk520.xml" /><stem n="set_z" chunk="Search_Chunk520.xml" /><stem n="drop_hidden" chunk="Search_Chunk520.xml" /><stem n="drop_zero_threshold" chunk="Search_Chunk520.xml" /><stem n="targetinputalpha" chunk="Search_Chunk520.xml" /><stem n="volumetric_composit" chunk="Search_Chunk520.xml" /><stem n="mask_channel" chunk="Search_Chunk520.xml" /><stem n="file-type-specif" chunk="Search_Chunk520.xml" /><stem n="file-typ" chunk="Search_Chunk520.xml" /><stem n="two-color" chunk="Search_Chunk520.xml" /><stem n="amtcolour" chunk="Search_Chunk520.xml" /><stem n="convergencepoint" chunk="Search_Chunk520.xml" /><stem n="convergemod" chunk="Search_Chunk520.xml" /><stem n="metafp" chunk="Search_Chunk520.xml" /><stem n="usefram" chunk="Search_Chunk520.xml" /><stem n="mergemod" chunk="Search_Chunk520.xml" /><stem n="meta-" chunk="Search_Chunk520.xml" /><stem n="imagemetadatafilt" chunk="Search_Chunk520.xml" /><stem n="imagemetadatafiltermod" chunk="Search_Chunk520.xml" /><stem n="placemark" chunk="Search_Chunk520.xml" /><stem n="assert" chunk="Search_Chunk520.xml" /><stem n="begintim" chunk="Search_Chunk520.xml" /><stem n="filebegintim" chunk="Search_Chunk520.xml" /><stem n="keyinterv" chunk="Search_Chunk520.xml" /><stem n="kernelsourcefil" chunk="Search_Chunk520.xml" /><stem n="reloadkernelsourcefil" chunk="Search_Chunk520.xml" /><stem n="savekernelfil" chunk="Search_Chunk520.xml" /><stem n="clearkernelsourc" chunk="Search_Chunk520.xml" /><stem n="kernelsourc" chunk="Search_Chunk520.xml" /><stem n="invertkernel_multipli" chunk="Search_Chunk520.xml" /><stem n="inverkernel" chunk="Search_Chunk520.xml" /><stem n="publishbutton" chunk="Search_Chunk520.xml" /><stem n="protectkernel" chunk="Search_Chunk520.xml" /><stem n="whenpublish" chunk="Search_Chunk520.xml" /><stem n="specifiedformat" chunk="Search_Chunk520.xml" /><stem n="maxgpumemori" chunk="Search_Chunk520.xml" /><stem n="maxtilelin" chunk="Search_Chunk520.xml" /><stem n="balloon-lik" chunk="Search_Chunk520.xml" /><stem n="balloon" chunk="Search_Chunk520.xml" /><stem n="one-dimension" chunk="Search_Chunk520.xml" /><stem n="1d-rang" chunk="Search_Chunk520.xml" /><stem n="5x5" chunk="Search_Chunk520.xml" /><stem n="swirl" chunk="Search_Chunk520.xml" /><stem n="trigonometr" chunk="Search_Chunk520.xml" /><stem n="two-pass" chunk="Search_Chunk520.xml" /><stem n="friend" chunk="Search_Chunk520.xml" /><stem n="lock_connect" chunk="Search_Chunk520.xml" /><stem n="frank" chunk="Search_Chunk520.xml" /><stem n="rueter" chunk="Search_Chunk520.xml" /><stem n="straightforward" chunk="Search_Chunk520.xml" /><stem n="skyprecomp" chunk="Search_Chunk520.xml" /><stem n="precomp1" chunk="Search_Chunk520.xml" /><stem n="skyprecompv1" chunk="Search_Chunk520.xml" /><stem n="crop24" chunk="Search_Chunk520.xml" /><stem n="ago" chunk="Search_Chunk520.xml" /><stem n="tidier" chunk="Search_Chunk520.xml" /><stem n="moon" chunk="Search_Chunk520.xml" /><stem n="painter" chunk="Search_Chunk521.xml" /><stem n="auto-label" chunk="Search_Chunk521.xml" /><stem n="out-of-d" chunk="Search_Chunk521.xml" /><stem n="of-dat" chunk="Search_Chunk521.xml" /><stem n="unstabl" chunk="Search_Chunk521.xml" /><stem n="renderon" chunk="Search_Chunk521.xml" /><stem n="regionbl" chunk="Search_Chunk521.xml" /><stem n="regiontr" chunk="Search_Chunk521.xml" /><stem n="pinbl" chunk="Search_Chunk521.xml" /><stem n="pinbr" chunk="Search_Chunk521.xml" /><stem n="pintl" chunk="Search_Chunk521.xml" /><stem n="pintr" chunk="Search_Chunk521.xml" /><stem n="un-synchron" chunk="Search_Chunk521.xml" /><stem n="blocksiz" chunk="Search_Chunk521.xml" /><stem n="usemot" chunk="Search_Chunk521.xml" /><stem n="presetstock" chunk="Search_Chunk521.xml" /><stem n="fujif250und" chunk="Search_Chunk521.xml" /><stem n="graincolourspac" chunk="Search_Chunk521.xml" /><stem n="processr" chunk="Search_Chunk521.xml" /><stem n="redamount" chunk="Search_Chunk521.xml" /><stem n="redsiz" chunk="Search_Chunk521.xml" /><stem n="processgreen" chunk="Search_Chunk521.xml" /><stem n="greenamount" chunk="Search_Chunk521.xml" /><stem n="greensiz" chunk="Search_Chunk521.xml" /><stem n="processblu" chunk="Search_Chunk521.xml" /><stem n="blueamount" chunk="Search_Chunk521.xml" /><stem n="bluesiz" chunk="Search_Chunk521.xml" /><stem n="srccolourspac" chunk="Search_Chunk521.xml" /><stem n="userespons" chunk="Search_Chunk521.xml" /><stem n="responsemix" chunk="Search_Chunk521.xml" /><stem n="drawrespons" chunk="Search_Chunk521.xml" /><stem n="rigregion" chunk="Search_Chunk521.xml" /><stem n="framessearch" chunk="Search_Chunk521.xml" /><stem n="framesus" chunk="Search_Chunk521.xml" /><stem n="maxrigmov" chunk="Search_Chunk521.xml" /><stem n="tl" chunk="Search_Chunk521.xml" /><stem n="lumcorrect" chunk="Search_Chunk521.xml" /><stem n="perspcorrect" chunk="Search_Chunk521.xml" /><stem n="overlapcorrect" chunk="Search_Chunk521.xml" /><stem n="failopac" chunk="Search_Chunk521.xml" /><stem n="preservealpha" chunk="Search_Chunk521.xml" /><stem n="lockfram" chunk="Search_Chunk521.xml" /><stem n="autoscal" chunk="Search_Chunk521.xml" /><stem n="setuserkeyfram" chunk="Search_Chunk521.xml" /><stem n="deleteuserkeyfram" chunk="Search_Chunk521.xml" /><stem n="snaptowir" chunk="Search_Chunk521.xml" /><stem n="trackbwd" chunk="Search_Chunk521.xml" /><stem n="stepbwd" chunk="Search_Chunk521.xml" /><stem n="stepfwd" chunk="Search_Chunk521.xml" /><stem n="trackfwd" chunk="Search_Chunk521.xml" /><stem n="smarttrack" chunk="Search_Chunk521.xml" /><stem n="deletetrackkeysbwd" chunk="Search_Chunk521.xml" /><stem n="deletetrackkeystepbwd" chunk="Search_Chunk521.xml" /><stem n="deletetrackkei" chunk="Search_Chunk521.xml" /><stem n="deletetrackkeystepfwd" chunk="Search_Chunk521.xml" /><stem n="deletetrackkeysfwd" chunk="Search_Chunk521.xml" /><stem n="deletealltrackkei" chunk="Search_Chunk521.xml" /><stem n="deleteal" chunk="Search_Chunk521.xml" /><stem n="wiretyp" chunk="Search_Chunk521.xml" /><stem n="onscreenwir" chunk="Search_Chunk521.xml" /><stem n="showui" chunk="Search_Chunk521.xml" /><stem n="repairmethod" chunk="Search_Chunk521.xml" /><stem n="filters" chunk="Search_Chunk521.xml" /><stem n="tempoffset" chunk="Search_Chunk521.xml" /><stem n="lumblocks" chunk="Search_Chunk521.xml" /><stem n="point5" chunk="Search_Chunk521.xml" /><stem n="startwidth" chunk="Search_Chunk521.xml" /><stem n="endwidth" chunk="Search_Chunk521.xml" /><stem n="overallwidth" chunk="Search_Chunk521.xml" /><stem n="o_colourmatch" chunk="Search_Chunk521.xml" /><stem n="o_solv" chunk="Search_Chunk521.xml" /><stem n="o_occlusiondetector" chunk="Search_Chunk521.xml" /><stem n="viewpair" chunk="Search_Chunk521.xml" /><stem n="matchwhat" chunk="Search_Chunk521.xml" /><stem n="matchingmod" chunk="Search_Chunk521.xml" /><stem n="unocclud" chunk="Search_Chunk521.xml" /><stem n="occlusiondetector" chunk="Search_Chunk521.xml" /><stem n="exportlut" chunk="Search_Chunk521.xml" /><stem n="occlusioncompens" chunk="Search_Chunk521.xml" /><stem n="edgeocclus" chunk="Search_Chunk521.xml" /><stem n="coloursigma" chunk="Search_Chunk521.xml" /><stem n="regions" chunk="Search_Chunk521.xml" /><stem n="multi-scal" chunk="Search_Chunk521.xml" /><stem n="maxblocks" chunk="Search_Chunk521.xml" /><stem n="intervaltyp" chunk="Search_Chunk521.xml" /><stem n="favour" chunk="Search_Chunk521.xml" /><stem n="immun" chunk="Search_Chunk521.xml" /><stem n="correctiontyp" chunk="Search_Chunk521.xml" /><stem n="colourmatch" chunk="Search_Chunk521.xml" /><stem n="disparitygener" chunk="Search_Chunk521.xml" /><stem n="stereoreviewgizmo" chunk="Search_Chunk521.xml" /><stem n="newview" chunk="Search_Chunk521.xml" /><stem n="blobbi" chunk="Search_Chunk521.xml" /><stem n="qc" chunk="Search_Chunk521.xml" /><stem n="shop" chunk="Search_Chunk521.xml" /><stem n="block-bas" chunk="Search_Chunk521.xml" /><stem n="brick" chunk="Search_Chunk521.xml" /><stem n="teapot" chunk="Search_Chunk521.xml" /><stem n="o_depthtodispar" chunk="Search_Chunk521.xml" /><stem n="o_focusmatch" chunk="Search_Chunk521.xml" /><stem n="o_verticalalign" chunk="Search_Chunk521.xml" /><stem n="o_newview" chunk="Search_Chunk522.xml" /><stem n="o_interaxialshift" chunk="Search_Chunk522.xml" /><stem n="o_vectorgener" chunk="Search_Chunk522.xml" /><stem n="o_disparitytodepth" chunk="Search_Chunk522.xml" /><stem n="o_disparityview" chunk="Search_Chunk522.xml" /><stem n="foregroundmask" chunk="Search_Chunk522.xml" /><stem n="low-contrast" chunk="Search_Chunk522.xml" /><stem n="encourag" chunk="Search_Chunk522.xml" /><stem n="unconstrain" chunk="Search_Chunk522.xml" /><stem n="minimis" chunk="Search_Chunk522.xml" /><stem n="o_retim" chunk="Search_Chunk522.xml" /><stem n="enforc" chunk="Search_Chunk522.xml" /><stem n="enforceparallax" chunk="Search_Chunk522.xml" /><stem n="negativeparallax" chunk="Search_Chunk522.xml" /><stem n="limitinpixel" chunk="Search_Chunk522.xml" /><stem n="-100" chunk="Search_Chunk522.xml" /><stem n="disparityr" chunk="Search_Chunk522.xml" /><stem n="positv" chunk="Search_Chunk522.xml" /><stem n="positiveparallax" chunk="Search_Chunk522.xml" /><stem n="upfront" chunk="Search_Chunk522.xml" /><stem n="verticalalign" chunk="Search_Chunk522.xml" /><stem n="colormatch" chunk="Search_Chunk522.xml" /><stem n="matcher" chunk="Search_Chunk522.xml" /><stem n="interaxialshift" chunk="Search_Chunk522.xml" /><stem n="disparityview" chunk="Search_Chunk522.xml" /><stem n="corrupt" chunk="Search_Chunk522.xml" /><stem n="over-smooth" chunk="Search_Chunk522.xml" /><stem n="favourit" chunk="Search_Chunk522.xml" /><stem n="well-align" chunk="Search_Chunk522.xml" /><stem n="wasn" chunk="Search_Chunk522.xml" /><stem n="un-align" chunk="Search_Chunk522.xml" /><stem n="summaris" chunk="Search_Chunk522.xml" /><stem n="violat" chunk="Search_Chunk522.xml" /><stem n="touch-up" chunk="Search_Chunk522.xml" /><stem n="novel" chunk="Search_Chunk522.xml" /><stem n="colour-tr" chunk="Search_Chunk522.xml" /><stem n="wouldn" chunk="Search_Chunk522.xml" /><stem n="non-trivi" chunk="Search_Chunk522.xml" /><stem n="trivial" chunk="Search_Chunk522.xml" /><stem n="certainli" chunk="Search_Chunk522.xml" /><stem n="wavi" chunk="Search_Chunk522.xml" /><stem n="sever" chunk="Search_Chunk522.xml" /><stem n="road" chunk="Search_Chunk522.xml" /><stem n="kerb" chunk="Search_Chunk522.xml" /><stem n="hardli" chunk="Search_Chunk522.xml" /><stem n="zblur" chunk="Search_Chunk522.xml" /><stem n="pretrack" chunk="Search_Chunk522.xml" /><stem n="visualis" chunk="Search_Chunk522.xml" /><stem n="disparityrcolour" chunk="Search_Chunk522.xml" /><stem n="left-to-right" chunk="Search_Chunk522.xml" /><stem n="left-to" chunk="Search_Chunk522.xml" /><stem n="to-right" chunk="Search_Chunk522.xml" /><stem n="disparitylcolour" chunk="Search_Chunk522.xml" /><stem n="right-to-left" chunk="Search_Chunk522.xml" /><stem n="right-to" chunk="Search_Chunk522.xml" /><stem n="to-left" chunk="Search_Chunk522.xml" /><stem n="showboth" chunk="Search_Chunk522.xml" /><stem n="neighbour" chunk="Search_Chunk522.xml" /><stem n="histogramrang" chunk="Search_Chunk522.xml" /><stem n="minpct" chunk="Search_Chunk522.xml" /><stem n="-2.5" chunk="Search_Chunk522.xml" /><stem n="left-most" chunk="Search_Chunk522.xml" /><stem n="right-most" chunk="Search_Chunk522.xml" /><stem n="maxpct" chunk="Search_Chunk522.xml" /><stem n="limitinpct" chunk="Search_Chunk522.xml" /><stem n="-20" chunk="Search_Chunk522.xml" /><stem n="negativeviol" chunk="Search_Chunk522.xml" /><stem n="positiveviol" chunk="Search_Chunk522.xml" /><stem n="deblur" chunk="Search_Chunk522.xml" /><stem n="primarymethod" chunk="Search_Chunk522.xml" /><stem n="deconvolv" chunk="Search_Chunk522.xml" /><stem n="rebuildmethod" chunk="Search_Chunk522.xml" /><stem n="mask_occlus" chunk="Search_Chunk522.xml" /><stem n="matchoriginalcolour" chunk="Search_Chunk522.xml" /><stem n="deconvolut" chunk="Search_Chunk522.xml" /><stem n="defocuss" chunk="Search_Chunk522.xml" /><stem n="removering" chunk="Search_Chunk522.xml" /><stem n="ringrang" chunk="Search_Chunk522.xml" /><stem n="ringratio" chunk="Search_Chunk522.xml" /><stem n="focusmatch" chunk="Search_Chunk522.xml" /><stem n="over-sharpen" chunk="Search_Chunk522.xml" /><stem n="re-introduc" chunk="Search_Chunk522.xml" /><stem n="stereoreview" chunk="Search_Chunk522.xml" /><stem n="peep" chunk="Search_Chunk522.xml" /><stem n="well-match" chunk="Search_Chunk522.xml" /><stem n="plinth" chunk="Search_Chunk522.xml" /><stem n="somewai" chunk="Search_Chunk522.xml" /><stem n="mis-focu" chunk="Search_Chunk522.xml" /><stem n="roto-" chunk="Search_Chunk522.xml" /><stem n="leftinterpolateposit" chunk="Search_Chunk522.xml" /><stem n="rightinterpolateposit" chunk="Search_Chunk522.xml" /><stem n="warpmod" chunk="Search_Chunk522.xml" /><stem n="inputimag" chunk="Search_Chunk522.xml" /><stem n="interpolateposit" chunk="Search_Chunk522.xml" /><stem n="disparityerror" chunk="Search_Chunk522.xml" /><stem n="colourerror" chunk="Search_Chunk522.xml" /><stem n="foliag" chunk="Search_Chunk522.xml" /><stem n="occlusions" chunk="Search_Chunk522.xml" /><stem n="occlusiondil" chunk="Search_Chunk522.xml" /><stem n="occlusionfil" chunk="Search_Chunk522.xml" /><stem n="occlusionblur" chunk="Search_Chunk522.xml" /><stem n="quality-check" chunk="Search_Chunk522.xml" /><stem n="keyston" chunk="Search_Chunk522.xml" /><stem n="flavour" chunk="Search_Chunk522.xml" /><stem n="analysiskeyfram" chunk="Search_Chunk522.xml" /><stem n="addanalysiskei" chunk="Search_Chunk522.xml" /><stem n="deleteanalysiskei" chunk="Search_Chunk522.xml" /><stem n="singlesolv" chunk="Search_Chunk523.xml" /><stem n="featuresepar" chunk="Search_Chunk523.xml" /><stem n="displaytyp" chunk="Search_Chunk523.xml" /><stem n="alignmentmethod" chunk="Search_Chunk523.xml" /><stem n="alignmenterror" chunk="Search_Chunk523.xml" /><stem n="resetfram" chunk="Search_Chunk523.xml" /><stem n="deleteusermatch" chunk="Search_Chunk523.xml" /><stem n="qcing" chunk="Search_Chunk523.xml" /><stem n="flick" chunk="Search_Chunk523.xml" /><stem n="3000" chunk="Search_Chunk523.xml" /><stem n="well-textur" chunk="Search_Chunk523.xml" /><stem n="re-match" chunk="Search_Chunk523.xml" /><stem n="well-defin" chunk="Search_Chunk523.xml" /><stem n="alignwhat" chunk="Search_Chunk523.xml" /><stem n="createpin" chunk="Search_Chunk523.xml" /><stem n="createcamera" chunk="Search_Chunk523.xml" /><stem n="createrig" chunk="Search_Chunk523.xml" /><stem n="baselight" chunk="Search_Chunk523.xml" /><stem n="lef" chunk="Search_Chunk523.xml" /><stem n="transformmatrix" chunk="Search_Chunk523.xml" /><stem n="105" chunk="Search_Chunk523.xml" /><stem n="106" chunk="Search_Chunk523.xml" /><stem n="matched-mov" chunk="Search_Chunk523.xml" /><stem n="previewcorrect" chunk="Search_Chunk523.xml" /><stem n="correctionscal" chunk="Search_Chunk523.xml" /><stem n="broaden" chunk="Search_Chunk523.xml" /><stem n="correctionlimit" chunk="Search_Chunk523.xml" /><stem n="outputocclus" chunk="Search_Chunk523.xml" /><stem n="toalpha" chunk="Search_Chunk523.xml" /><stem n="occlusioncorrect" chunk="Search_Chunk523.xml" /><stem n="adjustedg" chunk="Search_Chunk523.xml" /><stem n="colourtoler" chunk="Search_Chunk523.xml" /><stem n="supports" chunk="Search_Chunk523.xml" /><stem n="stabiliseocclus" chunk="Search_Chunk523.xml" /><stem n="disparitytyp" chunk="Search_Chunk523.xml" /><stem n="unsuit" chunk="Search_Chunk523.xml" /><stem n="clue" chunk="Search_Chunk523.xml" /><stem n="featureless" chunk="Search_Chunk523.xml" /><stem n="coher" chunk="Search_Chunk523.xml" /><stem n="leftposit" chunk="Search_Chunk523.xml" /><stem n="rightposit" chunk="Search_Chunk523.xml" /><stem n="outputedg" chunk="Search_Chunk523.xml" /><stem n="featheredg" chunk="Search_Chunk523.xml" /><stem n="o_multisampl" chunk="Search_Chunk523.xml" /><stem n="o_occlusiondetect" chunk="Search_Chunk523.xml" /><stem n="viewrebuilt" chunk="Search_Chunk523.xml" /><stem n="passthrough" chunk="Search_Chunk523.xml" /><stem n="otherview" chunk="Search_Chunk523.xml" /><stem n="dealt" chunk="Search_Chunk523.xml" /><stem n="outputedgesto" chunk="Search_Chunk523.xml" /><stem n="edgecorrect" chunk="Search_Chunk523.xml" /><stem n="gradientthreshold" chunk="Search_Chunk523.xml" /><stem n="dilateocclus" chunk="Search_Chunk523.xml" /><stem n="slow-mot" chunk="Search_Chunk523.xml" /><stem n="double-spe" chunk="Search_Chunk523.xml" /><stem n="outputedgestoalpha" chunk="Search_Chunk523.xml" /><stem n="analysesequ" chunk="Search_Chunk523.xml" /><stem n="nomin" chunk="Search_Chunk523.xml" /><stem n="analysenomin" chunk="Search_Chunk523.xml" /><stem n="non-keyfram" chunk="Search_Chunk523.xml" /><stem n="deleteautomatch" chunk="Search_Chunk523.xml" /><stem n="post-process" chunk="Search_Chunk523.xml" /><stem n="moder" chunk="Search_Chunk523.xml" /><stem n="outputstmap" chunk="Search_Chunk523.xml" /><stem n="alignmenttyp" chunk="Search_Chunk523.xml" /><stem n="aligncamera" chunk="Search_Chunk523.xml" /><stem n="alignscal" chunk="Search_Chunk523.xml" /><stem n="alignshift" chunk="Search_Chunk523.xml" /><stem n="alignrot" chunk="Search_Chunk523.xml" /><stem n="in-plan" chunk="Search_Chunk523.xml" /><stem n="alignperspect" chunk="Search_Chunk523.xml" /><stem n="alignverticalskew" chunk="Search_Chunk523.xml" /><stem n="localalign" chunk="Search_Chunk523.xml" /><stem n="pre-blur" chunk="Search_Chunk523.xml" /><stem n="disparityblurs" chunk="Search_Chunk523.xml" /><stem n="localcorrect" chunk="Search_Chunk523.xml" /><stem n="scaletofit" chunk="Search_Chunk523.xml" /><stem n="calculatescal" chunk="Search_Chunk523.xml" /><stem n="lockscal" chunk="Search_Chunk523.xml" /><stem n="stereograph" chunk="Search_Chunk523.xml" /><stem n="fixparallax" chunk="Search_Chunk523.xml" /><stem n="fixpoint" chunk="Search_Chunk523.xml" /><stem n="re-converg" chunk="Search_Chunk523.xml" /><stem n="easy-to-find" chunk="Search_Chunk523.xml" /><stem n="easy-to" chunk="Search_Chunk523.xml" /><stem n="to-find" chunk="Search_Chunk523.xml" /><stem n="_tutori" chunk="Search_Chunk523.xml" /><stem n="user-guid" chunk="Search_Chunk523.xml" /><stem n="breez" chunk="Search_Chunk523.xml" /><stem n="heard" chunk="Search_Chunk523.xml" /><stem n="rumor" chunk="Search_Chunk523.xml" /><stem n="march" chunk="Search_Chunk523.xml" /><stem n="ici" chunk="Search_Chunk523.xml" /><stem n="introductori" chunk="Search_Chunk523.xml" /><stem n="lesson" chunk="Search_Chunk523.xml" /><stem n="terribl" chunk="Search_Chunk523.xml" /><stem n="excit" chunk="Search_Chunk523.xml" /><stem n="patient" chunk="Search_Chunk523.xml" /><stem n="contextu" chunk="Search_Chunk523.xml" /><stem n="claim" chunk="Search_Chunk523.xml" /><stem n="amus" chunk="Search_Chunk523.xml" /><stem n="reorgan" chunk="Search_Chunk523.xml" /><stem n="tear-off" chunk="Search_Chunk523.xml" /><stem n="previously-sav" chunk="Search_Chunk523.xml" /><stem n="firstof" chunk="Search_Chunk523.xml" /><stem n="recoveri" chunk="Search_Chunk523.xml" /><stem n="freewheel" chunk="Search_Chunk523.xml" /><stem n="rebel" chunk="Search_Chunk523.xml" /><stem n="risk" chunk="Search_Chunk523.xml" /><stem n="adrenalin" chunk="Search_Chunk523.xml" /><stem n="secret" chunk="Search_Chunk523.xml" /><stem n="obsess" chunk="Search_Chunk523.xml" /><stem n="luck" chunk="Search_Chunk523.xml" /><stem n="pc_video" chunk="Search_Chunk523.xml" /><stem n="640" chunk="Search_Chunk523.xml" /><stem n="diagram" chunk="Search_Chunk523.xml" /><stem n="horizon" chunk="Search_Chunk523.xml" /><stem n="reopen" chunk="Search_Chunk523.xml" /><stem n="reappear" chunk="Search_Chunk523.xml" /><stem n="ramp1" chunk="Search_Chunk523.xml" /><stem n="cmd+shift+x" chunk="Search_Chunk523.xml" /><stem n="sequentially-numb" chunk="Search_Chunk523.xml" /><stem n="compbas" chunk="Search_Chunk523.xml" /><stem n="engine_rgba" chunk="Search_Chunk523.xml" /><stem n="smoke_left" chunk="Search_Chunk523.xml" /><stem n="smoke_right" chunk="Search_Chunk523.xml" /><stem n="sooner" chunk="Search_Chunk523.xml" /><stem n="zoom-in" chunk="Search_Chunk523.xml" /><stem n="zoom-out" chunk="Search_Chunk523.xml" /><stem n="tap" chunk="Search_Chunk523.xml" /><stem n="lower-right" chunk="Search_Chunk523.xml" /><stem n="agenda" chunk="Search_Chunk523.xml" /><stem n="lightingpass" chunk="Search_Chunk523.xml" /><stem n="neglect" chunk="Search_Chunk523.xml" /><stem n="down-r" chunk="Search_Chunk523.xml" /><stem n="hi-r" chunk="Search_Chunk523.xml" /><stem n="reformat1" chunk="Search_Chunk523.xml" /><stem n="reformat3" chunk="Search_Chunk523.xml" /><stem n="merge2" chunk="Search_Chunk523.xml" /><stem n="reformat2" chunk="Search_Chunk523.xml" /><stem n="merge3" chunk="Search_Chunk523.xml" /><stem n="exposure1" chunk="Search_Chunk523.xml" /><stem n="spectacular" chunk="Search_Chunk523.xml" /><stem n="hmm" chunk="Search_Chunk523.xml" /><stem n="pai" chunk="Search_Chunk523.xml" /><stem n="computer-process" chunk="Search_Chunk523.xml" /><stem n="prerend" chunk="Search_Chunk523.xml" /><stem n="1-28" chunk="Search_Chunk523.xml" /><stem n="epilogu" chunk="Search_Chunk523.xml" /><stem n="filmmak" chunk="Search_Chunk523.xml" /><stem n="challeng" chunk="Search_Chunk523.xml" /><stem n="monei" chunk="Search_Chunk523.xml" /><stem n="post-apocalypt" chunk="Search_Chunk523.xml" /><stem n="apocalypt" chunk="Search_Chunk523.xml" /><stem n="montreal" chunk="Search_Chunk523.xml" /><stem n="brilliant" chunk="Search_Chunk523.xml" /><stem n="battl" chunk="Search_Chunk523.xml" /><stem n="a-list" chunk="Search_Chunk523.xml" /><stem n="eleph" chunk="Search_Chunk523.xml" /><stem n="savvi" chunk="Search_Chunk523.xml" /><stem n="indispens" chunk="Search_Chunk523.xml" /><stem n="one-point" chunk="Search_Chunk523.xml" /><stem n="two-point" chunk="Search_Chunk523.xml" /><stem n="three-point" chunk="Search_Chunk523.xml" /><stem n="z-rotat" chunk="Search_Chunk524.xml" /><stem n="multi-point" chunk="Search_Chunk524.xml" /><stem n="tracking_tutor" chunk="Search_Chunk524.xml" /><stem n="tutorial_path" chunk="Search_Chunk524.xml" /><stem n="londoney" chunk="Search_Chunk524.xml" /><stem n="spire" chunk="Search_Chunk524.xml" /><stem n="satisfactori" chunk="Search_Chunk524.xml" /><stem n="harder" chunk="Search_Chunk524.xml" /><stem n="chimnei" chunk="Search_Chunk524.xml" /><stem n="44" chunk="Search_Chunk524.xml" /><stem n="camera-shak" chunk="Search_Chunk524.xml" /><stem n="tracker3" chunk="Search_Chunk524.xml" /><stem n="colorcorrect1" chunk="Search_Chunk524.xml" /><stem n="tracker4" chunk="Search_Chunk524.xml" /><stem n="ctrl+c" chunk="Search_Chunk524.xml" /><stem n="ctrl+v" chunk="Search_Chunk524.xml" /><stem n="tracker5" chunk="Search_Chunk524.xml" /><stem n="mardi" chunk="Search_Chunk524.xml" /><stem n="gra" chunk="Search_Chunk524.xml" /><stem n="seldom" chunk="Search_Chunk524.xml" /><stem n="keying_tutor" chunk="Search_Chunk524.xml" /><stem n="alt+" chunk="Search_Chunk524.xml" /><stem n="primatte1" chunk="Search_Chunk524.xml" /><stem n="free-float" chunk="Search_Chunk524.xml" /><stem n="goldfish" chunk="Search_Chunk524.xml" /><stem n="aquarium" chunk="Search_Chunk524.xml" /><stem n="captiv" chunk="Search_Chunk524.xml" /><stem n="fin" chunk="Search_Chunk524.xml" /><stem n="-click" chunk="Search_Chunk524.xml" /><stem n="goal" chunk="Search_Chunk524.xml" /><stem n="ibkcolourv3_1" chunk="Search_Chunk524.xml" /><stem n="ibkgizmov3_01" chunk="Search_Chunk524.xml" /><stem n="ibkgizmov3_1" chunk="Search_Chunk524.xml" /><stem n="reformat4" chunk="Search_Chunk524.xml" /><stem n="gaussian-filt" chunk="Search_Chunk524.xml" /><stem n="08" chunk="Search_Chunk524.xml" /><stem n="-0.08" chunk="Search_Chunk524.xml" /><stem n="hairlin" chunk="Search_Chunk524.xml" /><stem n="-0.03" chunk="Search_Chunk524.xml" /><stem n="rotopaint1" chunk="Search_Chunk524.xml" /><stem n="drag+click" chunk="Search_Chunk524.xml" /><stem n="corner-lin" chunk="Search_Chunk524.xml" /><stem n="fgman" chunk="Search_Chunk524.xml" /><stem n="colorspace1" chunk="Search_Chunk524.xml" /><stem n="flashback" chunk="Search_Chunk524.xml" /><stem n="cb" chunk="Search_Chunk524.xml" /><stem n="cr" chunk="Search_Chunk524.xml" /><stem n="colorspace2" chunk="Search_Chunk524.xml" /><stem n="455" chunk="Search_Chunk524.xml" /><stem n="matte-worthi" chunk="Search_Chunk524.xml" /><stem n="worthi" chunk="Search_Chunk524.xml" /><stem n="424" chunk="Search_Chunk524.xml" /><stem n="61" chunk="Search_Chunk524.xml" /><stem n="premult1" chunk="Search_Chunk524.xml" /><stem n="huecorrect1" chunk="Search_Chunk524.xml" /><stem n="rewir" chunk="Search_Chunk524.xml" /><stem n="elbow" chunk="Search_Chunk524.xml" /><stem n="three-axi" chunk="Search_Chunk524.xml" /><stem n="gatewai" chunk="Search_Chunk524.xml" /><stem n="rtside" chunk="Search_Chunk524.xml" /><stem n="lfside" chunk="Search_Chunk524.xml" /><stem n="2-and" chunk="Search_Chunk524.xml" /><stem n="2-and-a" chunk="Search_Chunk524.xml" /><stem n="2-and-a-half" chunk="Search_Chunk524.xml" /><stem n="2-and-a-half-d" chunk="Search_Chunk524.xml" /><stem n="and-a" chunk="Search_Chunk524.xml" /><stem n="and-a-half" chunk="Search_Chunk524.xml" /><stem n="and-a-half-d" chunk="Search_Chunk524.xml" /><stem n="a-half" chunk="Search_Chunk524.xml" /><stem n="a-half-d" chunk="Search_Chunk524.xml" /><stem n="half-d" chunk="Search_Chunk524.xml" /><stem n="3dinteg_tutor" chunk="Search_Chunk524.xml" /><stem n="3dinteg" chunk="Search_Chunk524.xml" /><stem n="nuke_sign" chunk="Search_Chunk524.xml" /><stem n="wow" chunk="Search_Chunk524.xml" /><stem n="anyon" chunk="Search_Chunk524.xml" /><stem n="zooming-out" chunk="Search_Chunk524.xml" /><stem n="hei" chunk="Search_Chunk524.xml" /><stem n="emblem" chunk="Search_Chunk524.xml" /><stem n="tumbl" chunk="Search_Chunk524.xml" /><stem n="alt-" chunk="Search_Chunk524.xml" /><stem n="-drag" chunk="Search_Chunk524.xml" /><stem n="option-" chunk="Search_Chunk524.xml" /><stem n="camera1" chunk="Search_Chunk524.xml" /><stem n="huge" chunk="Search_Chunk524.xml" /><stem n="cmd+c" chunk="Search_Chunk524.xml" /><stem n="cmd+v" chunk="Search_Chunk524.xml" /><stem n="scene1" chunk="Search_Chunk524.xml" /><stem n="scanlinerender1" chunk="Search_Chunk524.xml" /><stem n="card3" chunk="Search_Chunk524.xml" /><stem n="transformgeo1" chunk="Search_Chunk524.xml" /><stem n="yawn" chunk="Search_Chunk524.xml" /><stem n="ctrl+alt" chunk="Search_Chunk524.xml" /><stem n="cmd+alt" chunk="Search_Chunk524.xml" /><stem n="command+opt" chunk="Search_Chunk524.xml" /><stem n="set-extens" chunk="Search_Chunk524.xml" /><stem n="co-exist" chunk="Search_Chunk524.xml" /><stem n="scene2" chunk="Search_Chunk524.xml" /><stem n="scanlinerenderg" chunk="Search_Chunk524.xml" /><stem n="cube1" chunk="Search_Chunk524.xml" /><stem n="top-cent" chunk="Search_Chunk524.xml" /><stem n="cylinder1" chunk="Search_Chunk524.xml" /><stem n="sphere1" chunk="Search_Chunk524.xml" /><stem n="cap" chunk="Search_Chunk524.xml" /><stem n="concret" chunk="Search_Chunk524.xml" /><stem n="basicmaterial1" chunk="Search_Chunk524.xml" /><stem n="spotlight1" chunk="Search_Chunk524.xml" /><stem n="lee" chunk="Search_Chunk524.xml" /><stem n="lanier" chunk="Search_Chunk524.xml" /><stem n="trainer" chunk="Search_Chunk524.xml" /><stem n="todai" chunk="Search_Chunk524.xml" /><stem n="adob" chunk="Search_Chunk524.xml" /><stem n="middle-mouse-button-click+drag" chunk="Search_Chunk524.xml" /><stem n="mouse-button-click+drag" chunk="Search_Chunk524.xml" /><stem n="button-click+drag" chunk="Search_Chunk524.xml" /><stem n="transform2" chunk="Search_Chunk524.xml" /><stem n="transform3" chunk="Search_Chunk524.xml" /><stem n="transform6" chunk="Search_Chunk524.xml" /><stem n="bridg" chunk="Search_Chunk524.xml" /><stem n="right-button-click" chunk="Search_Chunk524.xml" /><stem n="right-button" chunk="Search_Chunk524.xml" /><stem n="squiggli" chunk="Search_Chunk524.xml" /><stem n="russel" chunk="Search_Chunk524.xml" /><stem n="dodgson" chunk="Search_Chunk524.xml" /><stem n="craft" chunk="Search_Chunk524.xml" /><stem n="simplist" chunk="Search_Chunk524.xml" /><stem n="unison" chunk="Search_Chunk524.xml" /><stem n="padlock" chunk="Search_Chunk524.xml" /><stem n="undoabl" chunk="Search_Chunk524.xml" /><stem n="half-height" chunk="Search_Chunk524.xml" /><stem n="immens" chunk="Search_Chunk524.xml" /><stem n="animat" chunk="Search_Chunk524.xml" /><stem n="drill" chunk="Search_Chunk524.xml" /><stem n="myself" chunk="Search_Chunk524.xml" /><stem n="invalu" chunk="Search_Chunk524.xml" /><stem n="beat" chunk="Search_Chunk524.xml" /><stem n="intro" chunk="Search_Chunk524.xml" /><stem n="non-planar" chunk="Search_Chunk524.xml" /><stem n="feature-bas" chunk="Search_Chunk524.xml" /><stem n="planartrackerlay" chunk="Search_Chunk524.xml" /><stem n="diagnost" chunk="Search_Chunk524.xml" /><stem n="forgot" chunk="Search_Chunk524.xml" /><stem n="tightli" chunk="Search_Chunk524.xml" /><stem n="suspens" chunk="Search_Chunk524.xml" /><stem n="cabl" chunk="Search_Chunk524.xml" /><stem n="tempt" chunk="Search_Chunk524.xml" /><stem n="topmost" chunk="Search_Chunk524.xml" /><stem n="bottom-most" chunk="Search_Chunk524.xml" /><stem n="messi" chunk="Search_Chunk524.xml" /><stem n="382" chunk="Search_Chunk524.xml" /><stem n="ordinarili" chunk="Search_Chunk524.xml" /><stem n="land" chunk="Search_Chunk524.xml" /><stem n="thankfulli" chunk="Search_Chunk524.xml" /><stem n="reign" chunk="Search_Chunk524.xml" /><stem n="sneak" chunk="Search_Chunk524.xml" /><stem n="chroma-kei" chunk="Search_Chunk524.xml" /><stem n="implic" chunk="Search_Chunk524.xml" /><stem n="crane" chunk="Search_Chunk524.xml" /><stem n="bird-lik" chunk="Search_Chunk524.xml" /><stem n="correctplan" chunk="Search_Chunk524.xml" /><stem n="damag" chunk="Search_Chunk524.xml" /><stem n="top-hand" chunk="Search_Chunk525.xml" /><stem n="re-snap" chunk="Search_Chunk525.xml" /><stem n="eyebal" chunk="Search_Chunk525.xml" /><stem n="appendic" chunk="Search_Chunk525.xml" /><stem n="supplement" chunk="Search_Chunk525.xml" /><stem n="auto-sav" chunk="Search_Chunk525.xml" /><stem n="&lt;300&gt;" chunk="Search_Chunk525.xml" /><stem n="&lt;5&gt;" chunk="Search_Chunk525.xml" /><stem n="&lt;30&gt;" chunk="Search_Chunk525.xml" /><stem n="osx" chunk="Search_Chunk525.xml" /><stem n="networkmount" chunk="Search_Chunk525.xml" /><stem n="30fp" chunk="Search_Chunk525.xml" /><stem n="low-end" chunk="Search_Chunk525.xml" /><stem n="playout" chunk="Search_Chunk525.xml" /><stem n="pbo" chunk="Search_Chunk525.xml" /><stem n="upload" chunk="Search_Chunk525.xml" /><stem n="multi_gpu" chunk="Search_Chunk525.xml" /><stem n="helper" chunk="Search_Chunk525.xml" /><stem n="auto-start" chunk="Search_Chunk525.xml" /><stem n="downsiz" chunk="Search_Chunk525.xml" /><stem n="12-" chunk="Search_Chunk525.xml" /><stem n="1x" chunk="Search_Chunk525.xml" /><stem n="2x" chunk="Search_Chunk525.xml" /><stem n="4x" chunk="Search_Chunk525.xml" /><stem n="02d" chunk="Search_Chunk525.xml" /><stem n="halfpremium" chunk="Search_Chunk525.xml" /><stem n="halfgood" chunk="Search_Chunk525.xml" /><stem n="quartergood" chunk="Search_Chunk525.xml" /><stem n="eighthgood" chunk="Search_Chunk525.xml" /><stem n="file-per-fram" chunk="Search_Chunk525.xml" /><stem n="file-p" chunk="Search_Chunk525.xml" /><stem n="part-select" chunk="Search_Chunk525.xml" /><stem n="autocolor" chunk="Search_Chunk525.xml" /><stem n="&lt;node" chunk="Search_Chunk525.xml" /><stem n="type&gt;" chunk="Search_Chunk525.xml" /><stem n="autolabel" chunk="Search_Chunk525.xml" /><stem n="italis" chunk="Search_Chunk525.xml" /><stem n="wxh" chunk="Search_Chunk525.xml" /><stem n="&lt;direct" chunk="Search_Chunk525.xml" /><stem n="arrows&gt;" chunk="Search_Chunk525.xml" /><stem n="&lt;arrow" chunk="Search_Chunk525.xml" /><stem n="components&gt;" chunk="Search_Chunk525.xml" /><stem n="drag-to-insert" chunk="Search_Chunk525.xml" /><stem n="drag-to" chunk="Search_Chunk525.xml" /><stem n="to-insert" chunk="Search_Chunk525.xml" /><stem n="disori" chunk="Search_Chunk525.xml" /><stem n="512x512" chunk="Search_Chunk525.xml" /><stem n="256x256" chunk="Search_Chunk525.xml" /><stem n="1024x1024" chunk="Search_Chunk525.xml" /><stem n="2048x2048" chunk="Search_Chunk525.xml" /><stem n="multifram" chunk="Search_Chunk525.xml" /><stem n="display" chunk="Search_Chunk525.xml" /><stem n="th" chunk="Search_Chunk525.xml" /><stem n="ms" chunk="Search_Chunk525.xml" /><stem n="1000m" chunk="Search_Chunk525.xml" /><stem n="25fp" chunk="Search_Chunk525.xml" /><stem n="40m" chunk="Search_Chunk525.xml" /><stem n="60m" chunk="Search_Chunk525.xml" /><stem n="sel" chunk="Search_Chunk525.xml" /><stem n="rotoshap" chunk="Search_Chunk525.xml" /><stem n="unmodifi" chunk="Search_Chunk525.xml" /><stem n="stippl" chunk="Search_Chunk525.xml" /><stem n="left-middl" chunk="Search_Chunk525.xml" /><stem n="pickabl" chunk="Search_Chunk525.xml" /><stem n="optic" chunk="Search_Chunk525.xml" /><stem n="mouse-click" chunk="Search_Chunk525.xml" /><stem n="lmb" chunk="Search_Chunk525.xml" /><stem n="rmb" chunk="Search_Chunk525.xml" /><stem n="ctrl+" chunk="Search_Chunk525.xml" /><stem n="ctrl+a" chunk="Search_Chunk525.xml" /><stem n="ctrl+d" chunk="Search_Chunk525.xml" /><stem n="ctrl+f" chunk="Search_Chunk525.xml" /><stem n="f6" chunk="Search_Chunk525.xml" /><stem n="ctrl+lmb" chunk="Search_Chunk525.xml" /><stem n="ctrl+n" chunk="Search_Chunk525.xml" /><stem n="ctrl+o" chunk="Search_Chunk525.xml" /><stem n="ctrl+q" chunk="Search_Chunk525.xml" /><stem n="ctrl+t" chunk="Search_Chunk525.xml" /><stem n="ctrl+w" chunk="Search_Chunk525.xml" /><stem n="ctrl+x" chunk="Search_Chunk525.xml" /><stem n="ctrl+z" chunk="Search_Chunk525.xml" /><stem n="shift+esc" chunk="Search_Chunk525.xml" /><stem n="alt+shift+1" chunk="Search_Chunk525.xml" /><stem n="crtl+shift+a" chunk="Search_Chunk525.xml" /><stem n="ctrl+alt+`" chunk="Search_Chunk525.xml" /><stem n="goto" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+z" chunk="Search_Chunk525.xml" /><stem n="ctrl+alt+shift+`" chunk="Search_Chunk525.xml" /><stem n="pgdown" chunk="Search_Chunk525.xml" /><stem n="alt+down" chunk="Search_Chunk525.xml" /><stem n="alt+shift+left" chunk="Search_Chunk525.xml" /><stem n="alt+shift+right" chunk="Search_Chunk525.xml" /><stem n="alt+u" chunk="Search_Chunk525.xml" /><stem n="alt+up" chunk="Search_Chunk525.xml" /><stem n="crtl+f" chunk="Search_Chunk525.xml" /><stem n="ctrl+rmb" chunk="Search_Chunk525.xml" /><stem n="shift+i" chunk="Search_Chunk525.xml" /><stem n="shift+left" chunk="Search_Chunk525.xml" /><stem n="shift+o" chunk="Search_Chunk525.xml" /><stem n="shift+right" chunk="Search_Chunk525.xml" /><stem n="ctrl+alt+down" chunk="Search_Chunk525.xml" /><stem n="ctrl+alt+up" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+1" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+2" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+f" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+lmb" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+p" chunk="Search_Chunk525.xml" /><stem n="shift+drag" chunk="Search_Chunk525.xml" /><stem n="alt+d" chunk="Search_Chunk525.xml" /><stem n="itm" chunk="Search_Chunk525.xml" /><stem n="alt+lmb" chunk="Search_Chunk525.xml" /><stem n="ctrl+numer" chunk="Search_Chunk525.xml" /><stem n="ctrl+return" chunk="Search_Chunk525.xml" /><stem n="shift+backspac" chunk="Search_Chunk525.xml" /><stem n="shift+u" chunk="Search_Chunk525.xml" /><stem n="alt+shift+" chunk="Search_Chunk525.xml" /><stem n="ctrl+alt+a" chunk="Search_Chunk525.xml" /><stem n="alt+shift+down" chunk="Search_Chunk525.xml" /><stem n="alt+shift+up" chunk="Search_Chunk525.xml" /><stem n="ctrl+alt+return" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+a" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+i" chunk="Search_Chunk525.xml" /><stem n="shift+lmb" chunk="Search_Chunk525.xml" /><stem n="shift+alt+lmb" chunk="Search_Chunk525.xml" /><stem n="ctrl+alt+shift+i" chunk="Search_Chunk525.xml" /><stem n="semi-colon" chunk="Search_Chunk525.xml" /><stem n="multiview" chunk="Search_Chunk525.xml" /><stem n="apostroph" chunk="Search_Chunk525.xml" /><stem n="`" chunk="Search_Chunk525.xml" /><stem n="alt+g" chunk="Search_Chunk525.xml" /><stem n="alt+mmb" chunk="Search_Chunk525.xml" /><stem n="alt+p" chunk="Search_Chunk525.xml" /><stem n="alt+w" chunk="Search_Chunk525.xml" /><stem n="ctrl+left" chunk="Search_Chunk525.xml" /><stem n="ctrl+p" chunk="Search_Chunk525.xml" /><stem n="ctrl+right" chunk="Search_Chunk525.xml" /><stem n="ctrl+u" chunk="Search_Chunk525.xml" /><stem n="shift+0" chunk="Search_Chunk525.xml" /><stem n="shift+numer" chunk="Search_Chunk525.xml" /><stem n="shift+w" chunk="Search_Chunk525.xml" /><stem n="right-sid" chunk="Search_Chunk525.xml" /><stem n="alt+rmb" chunk="Search_Chunk525.xml" /><stem n="ctrl+l" chunk="Search_Chunk525.xml" /><stem n="left-sid" chunk="Search_Chunk525.xml" /><stem n="auto-plac" chunk="Search_Chunk525.xml" /><stem n="splai" chunk="Search_Chunk525.xml" /><stem n="1st" chunk="Search_Chunk525.xml" /><stem n="2nd" chunk="Search_Chunk525.xml" /><stem n="alt+b" chunk="Search_Chunk525.xml" /><stem n="alt+c" chunk="Search_Chunk525.xml" /><stem n="alt+f" chunk="Search_Chunk525.xml" /><stem n="alt+h" chunk="Search_Chunk525.xml" /><stem n="alt+k" chunk="Search_Chunk525.xml" /><stem n="alt+n" chunk="Search_Chunk525.xml" /><stem n="alt+x" chunk="Search_Chunk525.xml" /><stem n="ctrl+b" chunk="Search_Chunk525.xml" /><stem n="ctrl+creat" chunk="Search_Chunk525.xml" /><stem n="ctrl+down" chunk="Search_Chunk525.xml" /><stem n="ctrl+f7" chunk="Search_Chunk525.xml" /><stem n="ctrl+g" chunk="Search_Chunk525.xml" /><stem n="ctrl+up" chunk="Search_Chunk525.xml" /><stem n="shift+creat" chunk="Search_Chunk525.xml" /><stem n="shift+f7" chunk="Search_Chunk525.xml" /><stem n="alt+shift+k" chunk="Search_Chunk525.xml" /><stem n="alt+shift+u" chunk="Search_Chunk525.xml" /><stem n="ctrl+alt+g" chunk="Search_Chunk525.xml" /><stem n="ctrl+alt+lmb" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+b" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+c" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+g" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+v" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+n" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift+x" chunk="Search_Chunk525.xml" /><stem n="ctrl+alt+shift+g" chunk="Search_Chunk525.xml" /><stem n="ctrl+alt+shift+k" chunk="Search_Chunk525.xml" /><stem n="ctrl+y" chunk="Search_Chunk525.xml" /><stem n="ctrt+alt+return" chunk="Search_Chunk525.xml" /><stem n="shift+tab" chunk="Search_Chunk525.xml" /><stem n="alt+`" chunk="Search_Chunk525.xml" /><stem n="ctrl+e" chunk="Search_Chunk525.xml" /><stem n="ctrl+shift" chunk="Search_Chunk525.xml" /><stem n="alt+shift+lmb" chunk="Search_Chunk526.xml" /><stem n="ctrl+alt+shift+lmb" chunk="Search_Chunk526.xml" /><stem n="ctrl+backspac" chunk="Search_Chunk526.xml" /><stem n="ctrl+drag" chunk="Search_Chunk526.xml" /><stem n="ctrl+shift+drag" chunk="Search_Chunk526.xml" /><stem n="sd" chunk="Search_Chunk526.xml" /><stem n="hq" chunk="Search_Chunk526.xml" /><stem n="xq" chunk="Search_Chunk526.xml" /><stem n="ari" chunk="Search_Chunk526.xml" /><stem n="av" chunk="Search_Chunk526.xml" /><stem n="writer" chunk="Search_Chunk526.xml" /><stem n="directshow" chunk="Search_Chunk526.xml" /><stem n="multimedia" chunk="Search_Chunk526.xml" /><stem n="mxf" chunk="Search_Chunk526.xml" /><stem n="115" chunk="Search_Chunk526.xml" /><stem n="145" chunk="Search_Chunk526.xml" /><stem n="175" chunk="Search_Chunk526.xml" /><stem n="185" chunk="Search_Chunk526.xml" /><stem n="220" chunk="Search_Chunk526.xml" /><stem n="220x" chunk="Search_Chunk526.xml" /><stem n="5k" chunk="Search_Chunk526.xml" /><stem n="cinemadng" chunk="Search_Chunk526.xml" /><stem n="fpi" chunk="Search_Chunk526.xml" /><stem n="obsolet" chunk="Search_Chunk526.xml" /><stem n="gif" chunk="Search_Chunk526.xml" /><stem n="radianc" chunk="Search_Chunk526.xml" /><stem n="triplet" chunk="Search_Chunk526.xml" /><stem n="iff" chunk="Search_Chunk526.xml" /><stem n="jpeg2000" chunk="Search_Chunk526.xml" /><stem n="720p" chunk="Search_Chunk526.xml" /><stem n="piz-bas" chunk="Search_Chunk526.xml" /><stem n="wavelet" chunk="Search_Chunk526.xml" /><stem n="pxr24" chunk="Search_Chunk526.xml" /><stem n="lossi" chunk="Search_Chunk526.xml" /><stem n="b44" chunk="Search_Chunk526.xml" /><stem n="4-by-4" chunk="Search_Chunk526.xml" /><stem n="4-by" chunk="Search_Chunk526.xml" /><stem n="by-4" chunk="Search_Chunk526.xml" /><stem n="b44a" chunk="Search_Chunk526.xml" /><stem n="png16" chunk="Search_Chunk526.xml" /><stem n="uicktim" chunk="Search_Chunk526.xml" /><stem n="mpeg-1" chunk="Search_Chunk526.xml" /><stem n="dslr" chunk="Search_Chunk526.xml" /><stem n="canon" chunk="Search_Chunk526.xml" /><stem n="cr2" chunk="Search_Chunk526.xml" /><stem n="redc" chunk="Search_Chunk526.xml" /><stem n="od" chunk="Search_Chunk526.xml" /><stem n="redcin" chunk="Search_Chunk526.xml" /><stem n="sgi16" chunk="Search_Chunk526.xml" /><stem n="softimag" chunk="Search_Chunk526.xml" /><stem n="pic" chunk="Search_Chunk526.xml" /><stem n="tif16" chunk="Search_Chunk526.xml" /><stem n="ftif" chunk="Search_Chunk526.xml" /><stem n="schema" chunk="Search_Chunk526.xml" /><stem n="lzw" chunk="Search_Chunk526.xml" /><stem n="ruevis" chunk="Search_Chunk526.xml" /><stem n="tga" chunk="Search_Chunk526.xml" /><stem n="rla" chunk="Search_Chunk526.xml" /><stem n="text-bas" chunk="Search_Chunk526.xml" /><stem n="m4a" chunk="Search_Chunk526.xml" /><stem n="contributor" chunk="Search_Chunk526.xml" /><stem n="reproduct" chunk="Search_Chunk526.xml" /><stem n="grant-" chunk="Search_Chunk526.xml" /><stem n="non-exclus" chunk="Search_Chunk526.xml" /><stem n="worldwid" chunk="Search_Chunk526.xml" /><stem n="royalty-fre" chunk="Search_Chunk526.xml" /><stem n="royalti" chunk="Search_Chunk526.xml" /><stem n="sell" chunk="Search_Chunk526.xml" /><stem n="license-" chunk="Search_Chunk526.xml" /><stem n="infring" chunk="Search_Chunk526.xml" /><stem n="as-i" chunk="Search_Chunk526.xml" /><stem n="warranti" chunk="Search_Chunk526.xml" /><stem n="merchant" chunk="Search_Chunk526.xml" /><stem n="non-infring" chunk="Search_Chunk526.xml" /><stem n="201210" chunk="Search_Chunk527.xml" /><stem n="r1338" chunk="Search_Chunk527.xml" /><stem n="bzip2" chunk="Search_Chunk527.xml" /><stem n="curl" chunk="Search_Chunk527.xml" /><stem n="directx" chunk="Search_Chunk527.xml" /><stem n="jun10" chunk="Search_Chunk527.xml" /><stem n="eucon" chunk="Search_Chunk527.xml" /><stem n="expat" chunk="Search_Chunk527.xml" /><stem n="ftgl" chunk="Search_Chunk527.xml" /><stem n="glew" chunk="Search_Chunk527.xml" /><stem n="bsd" chunk="Search_Chunk527.xml" /><stem n="mkl" chunk="Search_Chunk527.xml" /><stem n="088" chunk="Search_Chunk527.xml" /><stem n="258" chunk="Search_Chunk527.xml" /><stem n="6b" chunk="Search_Chunk527.xml" /><stem n="libexif" chunk="Search_Chunk527.xml" /><stem n="libpng" chunk="Search_Chunk527.xml" /><stem n="libresampl" chunk="Search_Chunk527.xml" /><stem n="libsndfil" chunk="Search_Chunk527.xml" /><stem n="libtiff" chunk="Search_Chunk527.xml" /><stem n="msinttyp" chunk="Search_Chunk527.xml" /><stem n="r20" chunk="Search_Chunk527.xml" /><stem n="openalsoft" chunk="Search_Chunk527.xml" /><stem n="openimageio" chunk="Search_Chunk527.xml" /><stem n="r1719" chunk="Search_Chunk527.xml" /><stem n="openssl" chunk="Search_Chunk527.xml" /><stem n="0a" chunk="Search_Chunk527.xml" /><stem n="portaudio" chunk="Search_Chunk527.xml" /><stem n="v19" chunk="Search_Chunk527.xml" /><stem n="pystr" chunk="Search_Chunk527.xml" /><stem n="quazip" chunk="Search_Chunk527.xml" /><stem n="qt" chunk="Search_Chunk527.xml" /><stem n="skein" chunk="Search_Chunk527.xml" /><stem n="tbb" chunk="Search_Chunk527.xml" /><stem n="30_20101215" chunk="Search_Chunk527.xml" /><stem n="4965" chunk="Search_Chunk527.xml" /><stem n="vxl" chunk="Search_Chunk527.xml" /><stem n="xmlrpcpp" chunk="Search_Chunk527.xml" /><stem n="zeromq" chunk="Search_Chunk527.xml" /><stem n="zlib" chunk="Search_Chunk527.xml" /><stem n="public" chunk="Search_Chunk527.xml" /><stem n="novemb" chunk="Search_Chunk527.xml" /><stem n="2008" chunk="Search_Chunk527.xml" /><stem n="consent" chunk="Search_Chunk527.xml" /><stem n="shall" chunk="Search_Chunk527.xml" /><stem n="agreeement" chunk="Search_Chunk527.xml" /><stem n="intellectu" chunk="Search_Chunk527.xml" /><stem n="compliant" chunk="Search_Chunk527.xml" /><stem n="amwa" chunk="Search_Chunk527.xml" /><stem n="provis" chunk="Search_Chunk527.xml" /><stem n="rebrand" chunk="Search_Chunk527.xml" /><stem n="redistribut" chunk="Search_Chunk527.xml" /><stem n="mscorp" chunk="Search_Chunk528.xml" /><stem n="thereto" chunk="Search_Chunk528.xml" /><stem n="affili" chunk="Search_Chunk528.xml" /><stem n="indirectli" chunk="Search_Chunk528.xml" /><stem n="indirect" chunk="Search_Chunk528.xml" /><stem n="benefici" chunk="Search_Chunk528.xml" /><stem n="ownership" chunk="Search_Chunk528.xml" /><stem n="exercis" chunk="Search_Chunk528.xml" /><stem n="fifti" chunk="Search_Chunk528.xml" /><stem n="vote" chunk="Search_Chunk528.xml" /><stem n="equiti" chunk="Search_Chunk528.xml" /><stem n="decision-mak" chunk="Search_Chunk528.xml" /><stem n="thereof" chunk="Search_Chunk528.xml" /><stem n="substanc" chunk="Search_Chunk528.xml" /><stem n="promot" chunk="Search_Chunk528.xml" /><stem n="duli" chunk="Search_Chunk528.xml" /><stem n="delawar" chunk="Search_Chunk528.xml" /><stem n="436" chunk="Search_Chunk528.xml" /><stem n="westfield" chunk="Search_Chunk528.xml" /><stem n="madison" chunk="Search_Chunk528.xml" /><stem n="wisconsin" chunk="Search_Chunk528.xml" /><stem n="53717" chunk="Search_Chunk528.xml" /><stem n="successor" chunk="Search_Chunk528.xml" /><stem n="appoint" chunk="Search_Chunk528.xml" /><stem n="herebi" chunk="Search_Chunk528.xml" /><stem n="compensation-fre" chunk="Search_Chunk528.xml" /><stem n="nonexclus" chunk="Search_Chunk528.xml" /><stem n="complianc" chunk="Search_Chunk528.xml" /><stem n="whatsoev" chunk="Search_Chunk528.xml" /><stem n="ii" chunk="Search_Chunk528.xml" /><stem n="neither" chunk="Search_Chunk528.xml" /><stem n="maskwork" chunk="Search_Chunk528.xml" /><stem n="hereund" chunk="Search_Chunk528.xml" /><stem n="forego" chunk="Search_Chunk528.xml" /><stem n="expressli" chunk="Search_Chunk528.xml" /><stem n="estoppel" chunk="Search_Chunk528.xml" /><stem n="reciproc" chunk="Search_Chunk528.xml" /><stem n="license" chunk="Search_Chunk528.xml" /><stem n="nondiscriminatori" chunk="Search_Chunk528.xml" /><stem n="â€œthi" chunk="Search_Chunk528.xml" /><stem n="sdkâ€" chunk="Search_Chunk528.xml" /><stem n="defens" chunk="Search_Chunk528.xml" /><stem n="â€œthe" chunk="Search_Chunk528.xml" /><stem n="su" chunk="Search_Chunk528.xml" /><stem n="partyâ€" chunk="Search_Chunk529.xml" /><stem n="partyâ€™" chunk="Search_Chunk529.xml" /><stem n="sixti" chunk="Search_Chunk529.xml" /><stem n="â€œaafsdkpsl" chunk="Search_Chunk529.xml" /><stem n="txtâ€" chunk="Search_Chunk529.xml" /><stem n="â€œlegalâ€" chunk="Search_Chunk529.xml" /><stem n="recipi" chunk="Search_Chunk529.xml" /><stem n="shipment" chunk="Search_Chunk529.xml" /><stem n="herein" chunk="Search_Chunk529.xml" /><stem n="wokflow" chunk="Search_Chunk529.xml" /><stem n="â€" chunk="Search_Chunk529.xml" /><stem n="conspicu" chunk="Search_Chunk529.xml" /><stem n="collater" chunk="Search_Chunk529.xml" /><stem n="indemnifi" chunk="Search_Chunk529.xml" /><stem n="liabil" chunk="Search_Chunk529.xml" /><stem n="incur" chunk="Search_Chunk529.xml" /><stem n="fee" chunk="Search_Chunk529.xml" /><stem n="indemn" chunk="Search_Chunk529.xml" /><stem n="oblig" chunk="Search_Chunk529.xml" /><stem n="behalf" chunk="Search_Chunk529.xml" /><stem n="disclaim" chunk="Search_Chunk529.xml" /><stem n="fault" chunk="Search_Chunk529.xml" /><stem n="statutori" chunk="Search_Chunk529.xml" /><stem n="enjoy" chunk="Search_Chunk529.xml" /><stem n="possess" chunk="Search_Chunk529.xml" /><stem n="workmanlik" chunk="Search_Chunk529.xml" /><stem n="virus" chunk="Search_Chunk529.xml" /><stem n="uninterrupt" chunk="Search_Chunk529.xml" /><stem n="error-fre" chunk="Search_Chunk529.xml" /><stem n="cure" chunk="Search_Chunk529.xml" /><stem n="surviv" chunk="Search_Chunk529.xml" /><stem n="validli" chunk="Search_Chunk529.xml" /><stem n="liabl" chunk="Search_Chunk529.xml" /><stem n="econom" chunk="Search_Chunk529.xml" /><stem n="incident" chunk="Search_Chunk529.xml" /><stem n="punit" chunk="Search_Chunk529.xml" /><stem n="consequenti" chunk="Search_Chunk529.xml" /><stem n="profit" chunk="Search_Chunk529.xml" /><stem n="goodwil" chunk="Search_Chunk529.xml" /><stem n="busi" chunk="Search_Chunk529.xml" /><stem n="anticip" chunk="Search_Chunk529.xml" /><stem n="inabl" chunk="Search_Chunk529.xml" /><stem n="remedi" chunk="Search_Chunk529.xml" /><stem n="satisfact" chunk="Search_Chunk529.xml" /><stem n="discontinu" chunk="Search_Chunk529.xml" /><stem n="injuri" chunk="Search_Chunk529.xml" /><stem n="jurisdict" chunk="Search_Chunk529.xml" /><stem n="acquir" chunk="Search_Chunk530.xml" /><stem n="prime" chunk="Search_Chunk530.xml" /><stem n="contractor" chunk="Search_Chunk530.xml" /><stem n="subcontractor" chunk="Search_Chunk530.xml" /><stem n="tier" chunk="Search_Chunk530.xml" /><stem n="227" chunk="Search_Chunk530.xml" /><stem n="7201" chunk="Search_Chunk530.xml" /><stem n="7202-4" chunk="Search_Chunk530.xml" /><stem n="7202" chunk="Search_Chunk530.xml" /><stem n="dod" chunk="Search_Chunk530.xml" /><stem n="acquisit" chunk="Search_Chunk530.xml" /><stem n="212" chunk="Search_Chunk530.xml" /><stem n="non-dod" chunk="Search_Chunk530.xml" /><stem n="miscellan" chunk="Search_Chunk530.xml" /><stem n="hereof" chunk="Search_Chunk530.xml" /><stem n="unenforc" chunk="Search_Chunk530.xml" /><stem n="reform" chunk="Search_Chunk530.xml" /><stem n="deem" chunk="Search_Chunk530.xml" /><stem n="waiv" chunk="Search_Chunk530.xml" /><stem n="acquiesc" chunk="Search_Chunk530.xml" /><stem n="agent" chunk="Search_Chunk530.xml" /><stem n="employe" chunk="Search_Chunk530.xml" /><stem n="instrument" chunk="Search_Chunk530.xml" /><stem n="disput" chunk="Search_Chunk530.xml" /><stem n="citizen" chunk="Search_Chunk530.xml" /><stem n="charter" chunk="Search_Chunk530.xml" /><stem n="america" chunk="Search_Chunk530.xml" /><stem n="litig" chunk="Search_Chunk530.xml" /><stem n="feder" chunk="Search_Chunk530.xml" /><stem n="court" chunk="Search_Chunk530.xml" /><stem n="commonwealth" chunk="Search_Chunk530.xml" /><stem n="massachusett" chunk="Search_Chunk530.xml" /><stem n="attornei" chunk="Search_Chunk530.xml" /><stem n="nation" chunk="Search_Chunk530.xml" /><stem n="contract" chunk="Search_Chunk530.xml" /><stem n="constru" chunk="Search_Chunk530.xml" /><stem n="drafter" chunk="Search_Chunk530.xml" /><stem n="warrant" chunk="Search_Chunk530.xml" /><stem n="aafsdkpsl" chunk="Search_Chunk530.xml" /><stem n="licensor" chunk="Search_Chunk530.xml" /><stem n="2010-2012" chunk="Search_Chunk530.xml" /><stem n="lucasfilm" chunk="Search_Chunk530.xml" /><stem n="entertain" chunk="Search_Chunk530.xml" /><stem n="ilm" chunk="Search_Chunk530.xml" /><stem n="servic" chunk="Search_Chunk530.xml" /><stem n="endors" chunk="Search_Chunk530.xml" /><stem n="owner" chunk="Search_Chunk530.xml" /><stem n="exemplari" chunk="Search_Chunk530.xml" /><stem n="procur" chunk="Search_Chunk530.xml" /><stem n="theori" chunk="Search_Chunk530.xml" /><stem n="strict" chunk="Search_Chunk530.xml" /><stem n="tort" chunk="Search_Chunk530.xml" /><stem n="fullest" chunk="Search_Chunk530.xml" /><stem n="oral" chunk="Search_Chunk530.xml" /><stem n="statut" chunk="Search_Chunk530.xml" /><stem n="murmurhash3" chunk="Search_Chunk530.xml" /><stem n="------------------------------------------------------------------------" chunk="Search_Chunk530.xml" /><stem n="mit" chunk="Search_Chunk530.xml" /><stem n="&lt;year&gt;" chunk="Search_Chunk530.xml" /><stem n="&lt;copyright" chunk="Search_Chunk530.xml" /><stem n="holders&gt;" chunk="Search_Chunk530.xml" /><stem n="sublicens" chunk="Search_Chunk530.xml" /><stem n="whom" chunk="Search_Chunk530.xml" /><stem n="furnish" chunk="Search_Chunk531.xml" /><stem n="noninfring" chunk="Search_Chunk531.xml" /><stem n="end-us" chunk="Search_Chunk531.xml" /><stem n="tewksburi" chunk="Search_Chunk531.xml" /><stem n="01876" chunk="Search_Chunk531.xml" /><stem n="internal-use-onli" chunk="Search_Chunk531.xml" /><stem n="internal-us" chunk="Search_Chunk531.xml" /><stem n="use-onli" chunk="Search_Chunk531.xml" /><stem n="off-the-shelf" chunk="Search_Chunk531.xml" /><stem n="off-th" chunk="Search_Chunk531.xml" /><stem n="the-shelf" chunk="Search_Chunk531.xml" /><stem n="shelf" chunk="Search_Chunk531.xml" /><stem n="commercially-avail" chunk="Search_Chunk531.xml" /><stem n="know-how" chunk="Search_Chunk531.xml" /><stem n="thereund" chunk="Search_Chunk531.xml" /><stem n="employ" chunk="Search_Chunk531.xml" /><stem n="confidenti" chunk="Search_Chunk531.xml" /><stem n="restructur" chunk="Search_Chunk531.xml" /><stem n="perpetu" chunk="Search_Chunk531.xml" /><stem n="non-transfer" chunk="Search_Chunk531.xml" /><stem n="nonassign" chunk="Search_Chunk531.xml" /><stem n="forbidden" chunk="Search_Chunk531.xml" /><stem n="assembl" chunk="Search_Chunk531.xml" /><stem n="altivec" chunk="Search_Chunk531.xml" /><stem n="sse2" chunk="Search_Chunk531.xml" /><stem n="gate" chunk="Search_Chunk531.xml" /><stem n="arrai" chunk="Search_Chunk531.xml" /><stem n="fpga" chunk="Search_Chunk531.xml" /><stem n="avidí" chunk="Search_Chunk531.xml" /><stem n="non-assign" chunk="Search_Chunk531.xml" /><stem n="high-definit" chunk="Search_Chunk531.xml" /><stem n="hereaft" chunk="Search_Chunk531.xml" /><stem n="disposit" chunk="Search_Chunk531.xml" /><stem n="partyí" chunk="Search_Chunk531.xml" /><stem n="nondisclosur" chunk="Search_Chunk531.xml" /><stem n="embodi" chunk="Search_Chunk531.xml" /><stem n="therein" chunk="Search_Chunk531.xml" /><stem n="disclos" chunk="Search_Chunk531.xml" /><stem n="irrepar" chunk="Search_Chunk531.xml" /><stem n="harm" chunk="Search_Chunk531.xml" /><stem n="injunct" chunk="Search_Chunk531.xml" /><stem n="relief" chunk="Search_Chunk531.xml" /><stem n="afford" chunk="Search_Chunk531.xml" /><stem n="privat" chunk="Search_Chunk531.xml" /><stem n="fund" chunk="Search_Chunk531.xml" /><stem n="disclosur" chunk="Search_Chunk531.xml" /><stem n="subparagraph" chunk="Search_Chunk531.xml" /><stem n="scienc" chunk="Search_Chunk531.xml" /><stem n="dfar" chunk="Search_Chunk531.xml" /><stem n="252" chunk="Search_Chunk531.xml" /><stem n="7013" chunk="Search_Chunk531.xml" /><stem n="52" chunk="Search_Chunk531.xml" /><stem n="227-19" chunk="Search_Chunk531.xml" /><stem n="countri" chunk="Search_Chunk531.xml" /><stem n="embargo" chunk="Search_Chunk531.xml" /><stem n="denial" chunk="Search_Chunk531.xml" /><stem n="agenc" chunk="Search_Chunk531.xml" /><stem n="revok" chunk="Search_Chunk531.xml" /><stem n="deni" chunk="Search_Chunk531.xml" /><stem n="venu" chunk="Search_Chunk531.xml" /><stem n="partnership" chunk="Search_Chunk531.xml" /><stem n="joint" chunk="Search_Chunk531.xml" /><stem n="ventur" chunk="Search_Chunk531.xml" /><stem n="principal-ag" chunk="Search_Chunk531.xml" /><stem n="majeur" chunk="Search_Chunk531.xml" /><stem n="payment" chunk="Search_Chunk531.xml" /><stem n="catastroph" chunk="Search_Chunk531.xml" /><stem n="war" chunk="Search_Chunk531.xml" /><stem n="civil" chunk="Search_Chunk531.xml" /><stem n="government" chunk="Search_Chunk531.xml" /><stem n="omiss" chunk="Search_Chunk531.xml" /><stem n="labor" chunk="Search_Chunk531.xml" /><stem n="strike" chunk="Search_Chunk531.xml" /><stem n="transport" chunk="Search_Chunk531.xml" /><stem n="stoppag" chunk="Search_Chunk531.xml" /><stem n="caption" chunk="Search_Chunk531.xml" /><stem n="waiver" chunk="Search_Chunk531.xml" /><stem n="signatori" chunk="Search_Chunk531.xml" /><stem n="pertain" chunk="Search_Chunk531.xml" /><stem n="supersed" chunk="Search_Chunk531.xml" /><stem n="preexist" chunk="Search_Chunk531.xml" /><stem n="renew" chunk="Search_Chunk531.xml" /><stem n="bmxlib" chunk="Search_Chunk531.xml" /><stem n="august" chunk="Search_Chunk531.xml" /><stem n="17th" chunk="Search_Chunk531.xml" /><stem n="2003" chunk="Search_Chunk531.xml" /><stem n="transmit" chunk="Search_Chunk531.xml" /><stem n="machine-execut" chunk="Search_Chunk531.xml" /><stem n="r1130" chunk="Search_Chunk531.xml" /><stem n="multi-platform" chunk="Search_Chunk531.xml" /><stem n="bsd-xdr" chunk="Search_Chunk531.xml" /><stem n="xdr" chunk="Search_Chunk531.xml" /><stem n="bsd-licens" chunk="Search_Chunk531.xml" /><stem n="2009" chunk="Search_Chunk531.xml" /><stem n="charl" chunk="Search_Chunk531.xml" /><stem n="wilson" chunk="Search_Chunk531.xml" /><stem n="compressor" chunk="Search_Chunk531.xml" /><stem n="1996-2000" chunk="Search_Chunk531.xml" /><stem n="julian" chunk="Search_Chunk531.xml" /><stem n="seward" chunk="Search_Chunk531.xml" /><stem n="misrepres" chunk="Search_Chunk531.xml" /><stem n="wrote" chunk="Search_Chunk531.xml" /><stem n="appreci" chunk="Search_Chunk531.xml" /><stem n="plainli" chunk="Search_Chunk531.xml" /><stem n="daniel" chunk="Search_Chunk531.xml" /><stem n="stenberg" chunk="Search_Chunk531.xml" /><stem n="&lt;daniel" chunk="Search_Chunk531.xml" /><stem n="haxx" chunk="Search_Chunk531.xml" /><stem n="se&gt;" chunk="Search_Chunk531.xml" /><stem n="advertis" chunk="Search_Chunk531.xml" /><stem n="internet-bas" chunk="Search_Chunk531.xml" /><stem n="art" chunk="Search_Chunk531.xml" /><stem n="redist" chunk="Search_Chunk531.xml" /><stem n="dxerr" chunk="Search_Chunk531.xml" /><stem n="x64" chunk="Search_Chunk531.xml" /><stem n="dxtex" chunk="Search_Chunk531.xml" /><stem n="dxviewer" chunk="Search_Chunk531.xml" /><stem n="gdftrace" chunk="Search_Chunk531.xml" /><stem n="meshconvert" chunk="Search_Chunk531.xml" /><stem n="sa" chunk="Search_Chunk531.xml" /><stem n="effects11" chunk="Search_Chunk531.xml" /><stem n="distributor" chunk="Search_Chunk531.xml" /><stem n="defend" chunk="Search_Chunk531.xml" /><stem n="harmless" chunk="Search_Chunk531.xml" /><stem n="iii" chunk="Search_Chunk531.xml" /><stem n="xbox" chunk="Search_Chunk531.xml" /><stem n="mobil" chunk="Search_Chunk531.xml" /><stem n="malici" chunk="Search_Chunk531.xml" /><stem n="decept" chunk="Search_Chunk531.xml" /><stem n="unlaw" chunk="Search_Chunk531.xml" /><stem n="sold" chunk="Search_Chunk531.xml" /><stem n="benchmark" chunk="Search_Chunk531.xml" /><stem n="decompil" chunk="Search_Chunk531.xml" /><stem n="disassembl" chunk="Search_Chunk531.xml" /><stem n="rent" chunk="Search_Chunk531.xml" /><stem n="leas" chunk="Search_Chunk531.xml" /><stem n="lend" chunk="Search_Chunk531.xml" /><stem n="domest" chunk="Search_Chunk531.xml" /><stem n="washington" chunk="Search_Chunk531.xml" /><stem n="unfair" chunk="Search_Chunk531.xml" /><stem n="competit" chunk="Search_Chunk531.xml" /><stem n="supplier" chunk="Search_Chunk531.xml" /><stem n="$5" chunk="Search_Chunk531.xml" /><stem n="knew" chunk="Search_Chunk531.xml" /><stem n="quebec" chunk="Search_Chunk531.xml" /><stem n="canada" chunk="Search_Chunk531.xml" /><stem n="french" chunk="Search_Chunk531.xml" /><stem n="remarqu" chunk="Search_Chunk531.xml" /><stem n="ce" chunk="Search_Chunk531.xml" /><stem n="logiciel" chunk="Search_Chunk531.xml" /><stem n="étant" chunk="Search_Chunk531.xml" /><stem n="distribué" chunk="Search_Chunk531.xml" /><stem n="au" chunk="Search_Chunk531.xml" /><stem n="québec" chunk="Search_Chunk531.xml" /><stem n="contrat" chunk="Search_Chunk531.xml" /><stem n="sont" chunk="Search_Chunk531.xml" /><stem n="fourni" chunk="Search_Chunk531.xml" /><stem n="ci-dess" chunk="Search_Chunk531.xml" /><stem n="ci" chunk="Search_Chunk531.xml" /><stem n="dessou" chunk="Search_Chunk531.xml" /><stem n="françai" chunk="Search_Chunk531.xml" /><stem n="exonér" chunk="Search_Chunk531.xml" /><stem n="garanti" chunk="Search_Chunk531.xml" /><stem n="le" chunk="Search_Chunk531.xml" /><stem n="visé" chunk="Search_Chunk532.xml" /><stem n="par" chunk="Search_Chunk532.xml" /><stem n="est" chunk="Search_Chunk532.xml" /><stem n="offert" chunk="Search_Chunk532.xml" /><stem n="tel" chunk="Search_Chunk532.xml" /><stem n="quel" chunk="Search_Chunk532.xml" /><stem n="tout" chunk="Search_Chunk532.xml" /><stem n="utilis" chunk="Search_Chunk532.xml" /><stem n="votr" chunk="Search_Chunk532.xml" /><stem n="seul" chunk="Search_Chunk532.xml" /><stem n="risqu" chunk="Search_Chunk532.xml" /><stem n="et" chunk="Search_Chunk532.xml" /><stem n="péril" chunk="Search_Chunk532.xml" /><stem n="aucun" chunk="Search_Chunk532.xml" /><stem n="autr" chunk="Search_Chunk532.xml" /><stem n="vou" chunk="Search_Chunk532.xml" /><stem n="pouvez" chunk="Search_Chunk532.xml" /><stem n="bénéficier" chunk="Search_Chunk532.xml" /><stem n="droit" chunk="Search_Chunk532.xml" /><stem n="additionnel" chunk="Search_Chunk532.xml" /><stem n="vertu" chunk="Search_Chunk532.xml" /><stem n="du" chunk="Search_Chunk532.xml" /><stem n="sur" chunk="Search_Chunk532.xml" /><stem n="la" chunk="Search_Chunk532.xml" /><stem n="consommateur" chunk="Search_Chunk532.xml" /><stem n="que" chunk="Search_Chunk532.xml" /><stem n="ne" chunk="Search_Chunk532.xml" /><stem n="peut" chunk="Search_Chunk532.xml" /><stem n="ou" chunk="Search_Chunk532.xml" /><stem n="ell" chunk="Search_Chunk532.xml" /><stem n="permis" chunk="Search_Chunk532.xml" /><stem n="implicit" chunk="Search_Chunk532.xml" /><stem n="qualité" chunk="Search_Chunk532.xml" /><stem n="marchand" chunk="Search_Chunk532.xml" /><stem n="adéquat" chunk="Search_Chunk532.xml" /><stem n="particuli" chunk="Search_Chunk532.xml" /><stem n="contrefaçon" chunk="Search_Chunk532.xml" /><stem n="exclu" chunk="Search_Chunk532.xml" /><stem n="dommages-intérêt" chunk="Search_Chunk532.xml" /><stem n="dommag" chunk="Search_Chunk532.xml" /><stem n="intérêt" chunk="Search_Chunk532.xml" /><stem n="responsabilité" chunk="Search_Chunk532.xml" /><stem n="pour" chunk="Search_Chunk532.xml" /><stem n="obtenir" chunk="Search_Chunk532.xml" /><stem n="fournisseur" chunk="Search_Chunk532.xml" /><stem n="indemnis" chunk="Search_Chunk532.xml" /><stem n="hauteur" chunk="Search_Chunk532.xml" /><stem n="$" chunk="Search_Chunk532.xml" /><stem n="prétendr" chunk="Search_Chunk532.xml" /><stem n="compri" chunk="Search_Chunk532.xml" /><stem n="spéciaux" chunk="Search_Chunk532.xml" /><stem n="accessoir" chunk="Search_Chunk532.xml" /><stem n="pert" chunk="Search_Chunk532.xml" /><stem n="bénéfice" chunk="Search_Chunk532.xml" /><stem n="cett" chunk="Search_Chunk532.xml" /><stem n="qui" chunk="Search_Chunk532.xml" /><stem n="relié" chunk="Search_Chunk532.xml" /><stem n="aux" chunk="Search_Chunk532.xml" /><stem n="contenu" chunk="Search_Chunk532.xml" /><stem n="réclamat" chunk="Search_Chunk532.xml" /><stem n="titr" chunk="Search_Chunk532.xml" /><stem n="négligenc" chunk="Search_Chunk532.xml" /><stem n="faut" chunk="Search_Chunk532.xml" /><stem n="autorisé" chunk="Search_Chunk532.xml" /><stem n="loi" chunk="Search_Chunk532.xml" /><stem n="vigueur" chunk="Search_Chunk532.xml" /><stem n="appliqu" chunk="Search_Chunk532.xml" /><stem n="également" chunk="Search_Chunk532.xml" /><stem n="même" chunk="Search_Chunk532.xml" /><stem n="si" chunk="Search_Chunk532.xml" /><stem n="connaissait" chunk="Search_Chunk532.xml" /><stem n="devrait" chunk="Search_Chunk532.xml" /><stem n="connaîtr" chunk="Search_Chunk532.xml" /><stem n="éventualité" chunk="Search_Chunk532.xml" /><stem n="autoris" chunk="Search_Chunk532.xml" /><stem n="pa" chunk="Search_Chunk532.xml" /><stem n="quelqu" chunk="Search_Chunk532.xml" /><stem n="soit" chunk="Search_Chunk532.xml" /><stem n="il" chunk="Search_Chunk532.xml" /><stem n="ci-dessu" chunk="Search_Chunk532.xml" /><stem n="dessu" chunk="Search_Chunk532.xml" /><stem n="appliquera" chunk="Search_Chunk532.xml" /><stem n="égard" chunk="Search_Chunk532.xml" /><stem n="effet" chunk="Search_Chunk532.xml" /><stem n="juridiqu" chunk="Search_Chunk532.xml" /><stem n="présent" chunk="Search_Chunk532.xml" /><stem n="décrit" chunk="Search_Chunk532.xml" /><stem n="pourriez" chunk="Search_Chunk532.xml" /><stem n="avoir" chunk="Search_Chunk532.xml" /><stem n="prévu" chunk="Search_Chunk532.xml" /><stem n="confèrent" chunk="Search_Chunk532.xml" /><stem n="celles-ci" chunk="Search_Chunk532.xml" /><stem n="permett" chunk="Search_Chunk532.xml" /><stem n="dirent" chunk="Search_Chunk532.xml" /><stem n="posix" chunk="Search_Chunk532.xml" /><stem n="kevlin" chunk="Search_Chunk532.xml" /><stem n="hennei" chunk="Search_Chunk532.xml" /><stem n="1997" chunk="Search_Chunk532.xml" /><stem n="dlfcn-win32" chunk="Search_Chunk532.xml" /><stem n="dlfcn" chunk="Search_Chunk532.xml" /><stem n="win32" chunk="Search_Chunk532.xml" /><stem n="exif" chunk="Search_Chunk532.xml" /><stem n="parser" chunk="Search_Chunk532.xml" /><stem n="lutz" chunk="Search_Chunk532.xml" /><stem n="mueller" chunk="Search_Chunk532.xml" /><stem n="sourceforg" chunk="Search_Chunk532.xml" /><stem n="2001-2005" chunk="Search_Chunk532.xml" /><stem n="2001" chunk="Search_Chunk532.xml" /><stem n="1998" chunk="Search_Chunk532.xml" /><stem n="1999" chunk="Search_Chunk532.xml" /><stem n="thai" chunk="Search_Chunk532.xml" /><stem n="clark" chunk="Search_Chunk532.xml" /><stem n="cooper" chunk="Search_Chunk532.xml" /><stem n="2002" chunk="Search_Chunk532.xml" /><stem n="2004" chunk="Search_Chunk532.xml" /><stem n="autodesk®" chunk="Search_Chunk532.xml" /><stem n="fbx®" chunk="Search_Chunk532.xml" /><stem n="lgplv2" chunk="Search_Chunk532.xml" /><stem n="lgpl" chunk="Search_Chunk532.xml" /><stem n="fftw" chunk="Search_Chunk532.xml" /><stem n="matteo" chunk="Search_Chunk532.xml" /><stem n="frigo" chunk="Search_Chunk532.xml" /><stem n="institut" chunk="Search_Chunk532.xml" /><stem n="2001-2004" chunk="Search_Chunk532.xml" /><stem n="maddock" chunk="Search_Chunk532.xml" /><stem n="geek" chunk="Search_Chunk532.xml" /><stem n="nz" chunk="Search_Chunk532.xml" /><stem n="sam" chunk="Search_Chunk532.xml" /><stem n="hocevar" chunk="Search_Chunk532.xml" /><stem n="zoi" chunk="Search_Chunk532.xml" /><stem n="sean" chunk="Search_Chunk532.xml" /><stem n="morrison" chunk="Search_Chunk532.xml" /><stem n="learner" chunk="Search_Chunk532.xml" /><stem n="brlcad" chunk="Search_Chunk532.xml" /><stem n="wrangler" chunk="Search_Chunk532.xml" /><stem n="2002-2008" chunk="Search_Chunk532.xml" /><stem n="milan" chunk="Search_Chunk532.xml" /><stem n="ikit" chunk="Search_Chunk532.xml" /><stem n="&lt;milan" chunk="Search_Chunk532.xml" /><stem n="ieee" chunk="Search_Chunk532.xml" /><stem n="org&gt;" chunk="Search_Chunk532.xml" /><stem n="marcelo" chunk="Search_Chunk532.xml" /><stem n="magallon" chunk="Search_Chunk532.xml" /><stem n="&lt;mmagallo" chunk="Search_Chunk532.xml" /><stem n="debian" chunk="Search_Chunk532.xml" /><stem n="lev" chunk="Search_Chunk532.xml" /><stem n="povalahev" chunk="Search_Chunk532.xml" /><stem n="hdf5" chunk="Search_Chunk532.xml" /><stem n="-----------------------------------------------------------------------------" chunk="Search_Chunk532.xml" /><stem n="2006-2012" chunk="Search_Chunk532.xml" /><stem n="ncsa" chunk="Search_Chunk532.xml" /><stem n="1998-2006" chunk="Search_Chunk532.xml" /><stem n="truste" chunk="Search_Chunk532.xml" /><stem n="univers" chunk="Search_Chunk532.xml" /><stem n="illinoi" chunk="Search_Chunk532.xml" /><stem n="supercomput" chunk="Search_Chunk532.xml" /><stem n="urbana-champaign" chunk="Search_Chunk532.xml" /><stem n="urbana" chunk="Search_Chunk532.xml" /><stem n="champaign" chunk="Search_Chunk532.xml" /><stem n="fortner" chunk="Search_Chunk532.xml" /><stem n="unidata" chunk="Search_Chunk533.xml" /><stem n="netcdf" chunk="Search_Chunk533.xml" /><stem n="jean-loup" chunk="Search_Chunk533.xml" /><stem n="jean" chunk="Search_Chunk533.xml" /><stem n="loup" chunk="Search_Chunk533.xml" /><stem n="gailli" chunk="Search_Chunk533.xml" /><stem n="adler" chunk="Search_Chunk533.xml" /><stem n="dec" chunk="Search_Chunk533.xml" /><stem n="lawrenc" chunk="Search_Chunk533.xml" /><stem n="berkelei" chunk="Search_Chunk533.xml" /><stem n="laboratori" chunk="Search_Chunk533.xml" /><stem n="lbnl" chunk="Search_Chunk533.xml" /><stem n="energi" chunk="Search_Chunk533.xml" /><stem n="de-ac02" chunk="Search_Chunk533.xml" /><stem n="de-ac02-05ch11231" chunk="Search_Chunk533.xml" /><stem n="ac02" chunk="Search_Chunk533.xml" /><stem n="ac02-05ch11231" chunk="Search_Chunk533.xml" /><stem n="05ch11231" chunk="Search_Chunk533.xml" /><stem n="california" chunk="Search_Chunk533.xml" /><stem n="livermor" chunk="Search_Chunk533.xml" /><stem n="uc" chunk="Search_Chunk533.xml" /><stem n="llnl" chunk="Search_Chunk533.xml" /><stem n="w-7405-eng-48" chunk="Search_Chunk533.xml" /><stem n="w-7405" chunk="Search_Chunk533.xml" /><stem n="w-7405-eng" chunk="Search_Chunk533.xml" /><stem n="7405" chunk="Search_Chunk533.xml" /><stem n="7405-eng" chunk="Search_Chunk533.xml" /><stem n="7405-eng-48" chunk="Search_Chunk533.xml" /><stem n="eng" chunk="Search_Chunk533.xml" /><stem n="eng-48" chunk="Search_Chunk533.xml" /><stem n="regent" chunk="Search_Chunk533.xml" /><stem n="sponsor" chunk="Search_Chunk533.xml" /><stem n="apparatu" chunk="Search_Chunk533.xml" /><stem n="privately-" chunk="Search_Chunk533.xml" /><stem n="opinion" chunk="Search_Chunk533.xml" /><stem n="ijg" chunk="Search_Chunk533.xml" /><stem n="inventormath" chunk="Search_Chunk533.xml" /><stem n="inventor" chunk="Search_Chunk533.xml" /><stem n="prevail" chunk="Search_Chunk533.xml" /><stem n="sentenc" chunk="Search_Chunk533.xml" /><stem n="februari" chunk="Search_Chunk533.xml" /><stem n="2006-2008" chunk="Search_Chunk533.xml" /><stem n="glenn" chunk="Search_Chunk533.xml" /><stem n="rander" chunk="Search_Chunk533.xml" /><stem n="randers-pehrson" chunk="Search_Chunk533.xml" /><stem n="pehrson" chunk="Search_Chunk533.xml" /><stem n="libpng-1" chunk="Search_Chunk533.xml" /><stem n="cosmin" chunk="Search_Chunk533.xml" /><stem n="truta" chunk="Search_Chunk533.xml" /><stem n="juli" chunk="Search_Chunk533.xml" /><stem n="octob" chunk="Search_Chunk533.xml" /><stem n="2000-2002" chunk="Search_Chunk533.xml" /><stem n="simon-pierr" chunk="Search_Chunk533.xml" /><stem n="pierr" chunk="Search_Chunk533.xml" /><stem n="cadieux" chunk="Search_Chunk533.xml" /><stem n="eric" chunk="Search_Chunk533.xml" /><stem n="raymond" chunk="Search_Chunk533.xml" /><stem n="gill" chunk="Search_Chunk533.xml" /><stem n="vollant" chunk="Search_Chunk533.xml" /><stem n="effort" chunk="Search_Chunk533.xml" /><stem n="fulfil" chunk="Search_Chunk533.xml" /><stem n="libpng-0" chunk="Search_Chunk533.xml" /><stem n="96" chunk="Search_Chunk533.xml" /><stem n="tom" chunk="Search_Chunk533.xml" /><stem n="willem" chunk="Search_Chunk533.xml" /><stem n="van" chunk="Search_Chunk533.xml" /><stem n="schaik" chunk="Search_Chunk533.xml" /><stem n="june" chunk="Search_Chunk533.xml" /><stem n="andrea" chunk="Search_Chunk533.xml" /><stem n="dilger" chunk="Search_Chunk533.xml" /><stem n="bowler" chunk="Search_Chunk533.xml" /><stem n="kevin" chunk="Search_Chunk533.xml" /><stem n="bracei" chunk="Search_Chunk533.xml" /><stem n="bushel" chunk="Search_Chunk533.xml" /><stem n="magnu" chunk="Search_Chunk533.xml" /><stem n="holmgren" chunk="Search_Chunk533.xml" /><stem n="greg" chunk="Search_Chunk533.xml" /><stem n="roelof" chunk="Search_Chunk533.xml" /><stem n="tanner" chunk="Search_Chunk533.xml" /><stem n="1995" chunk="Search_Chunk533.xml" /><stem n="schalnat" chunk="Search_Chunk533.xml" /><stem n="dave" chunk="Search_Chunk533.xml" /><stem n="martindal" chunk="Search_Chunk533.xml" /><stem n="paul" chunk="Search_Chunk533.xml" /><stem n="schmidt" chunk="Search_Chunk533.xml" /><stem n="tim" chunk="Search_Chunk533.xml" /><stem n="wegner" chunk="Search_Chunk533.xml" /><stem n="png_get_copyright" chunk="Search_Chunk533.xml" /><stem n="pngbar" chunk="Search_Chunk533.xml" /><stem n="88x31" chunk="Search_Chunk533.xml" /><stem n="pngnow" chunk="Search_Chunk533.xml" /><stem n="98x31" chunk="Search_Chunk533.xml" /><stem n="osi" chunk="Search_Chunk533.xml" /><stem n="certifi" chunk="Search_Chunk533.xml" /><stem n="certif" chunk="Search_Chunk533.xml" /><stem n="glennrp" chunk="Search_Chunk533.xml" /><stem n="mazzoni" chunk="Search_Chunk533.xml" /><stem n="&lt;domin" chunk="Search_Chunk533.xml" /><stem n="minorninth" chunk="Search_Chunk533.xml" /><stem n="com&gt;" chunk="Search_Chunk533.xml" /><stem n="resample-1" chunk="Search_Chunk533.xml" /><stem n="1994-2002" chunk="Search_Chunk533.xml" /><stem n="1994" chunk="Search_Chunk533.xml" /><stem n="juliu" chunk="Search_Chunk533.xml" /><stem n="smith" chunk="Search_Chunk533.xml" /><stem n="&lt;jo" chunk="Search_Chunk533.xml" /><stem n="ccrma" chunk="Search_Chunk533.xml" /><stem n="stanford" chunk="Search_Chunk533.xml" /><stem n="edu&gt;" chunk="Search_Chunk533.xml" /><stem n="jo" chunk="Search_Chunk533.xml" /><stem n="1999-2011" chunk="Search_Chunk533.xml" /><stem n="2011" chunk="Search_Chunk533.xml" /><stem n="erik" chunk="Search_Chunk533.xml" /><stem n="castro" chunk="Search_Chunk533.xml" /><stem n="lopo" chunk="Search_Chunk533.xml" /><stem n="&lt;erikd" chunk="Search_Chunk533.xml" /><stem n="mega-nerd" chunk="Search_Chunk533.xml" /><stem n="nerd" chunk="Search_Chunk533.xml" /><stem n="david" chunk="Search_Chunk533.xml" /><stem n="vien" chunk="Search_Chunk533.xml" /><stem n="&lt;davidv" chunk="Search_Chunk533.xml" /><stem n="plogu" chunk="Search_Chunk533.xml" /><stem n="templ" chunk="Search_Chunk533.xml" /><stem n="330" chunk="Search_Chunk533.xml" /><stem n="boston" chunk="Search_Chunk533.xml" /><stem n="ma" chunk="Search_Chunk533.xml" /><stem n="02111" chunk="Search_Chunk533.xml" /><stem n="02111-1307" chunk="Search_Chunk533.xml" /><stem n="1307" chunk="Search_Chunk533.xml" /><stem n="1988-1997" chunk="Search_Chunk533.xml" /><stem n="1988" chunk="Search_Chunk533.xml" /><stem n="leffler" chunk="Search_Chunk533.xml" /><stem n="1991-1997" chunk="Search_Chunk533.xml" /><stem n="1991" chunk="Search_Chunk533.xml" /><stem n="silicon" chunk="Search_Chunk533.xml" /><stem n="c9x" chunk="Search_Chunk533.xml" /><stem n="stdint" chunk="Search_Chunk533.xml" /><stem n="inttyp" chunk="Search_Chunk533.xml" /><stem n="iec" chunk="Search_Chunk533.xml" /><stem n="9899" chunk="Search_Chunk533.xml" /><stem n="tc2" chunk="Search_Chunk533.xml" /><stem n="committe" chunk="Search_Chunk533.xml" /><stem n="draft" chunk="Search_Chunk533.xml" /><stem n="wg14" chunk="Search_Chunk533.xml" /><stem n="n1124" chunk="Search_Chunk533.xml" /><stem n="alexand" chunk="Search_Chunk533.xml" /><stem n="chemeri" chunk="Search_Chunk533.xml" /><stem n="``a" chunk="Search_Chunk533.xml" /><stem n="1999-2007" chunk="Search_Chunk533.xml" /><stem n="2007" chunk="Search_Chunk533.xml" /><stem n="copyleft" chunk="Search_Chunk533.xml" /><stem n="2003-2010" chunk="Search_Chunk533.xml" /><stem n="al" chunk="Search_Chunk533.xml" /><stem n="luca" chunk="Search_Chunk533.xml" /><stem n="llc" chunk="Search_Chunk533.xml" /><stem n="larri" chunk="Search_Chunk533.xml" /><stem n="gritz" chunk="Search_Chunk533.xml" /><stem n="socket" chunk="Search_Chunk533.xml" /><stem n="toolkit" chunk="Search_Chunk533.xml" /><stem n="ssleai" chunk="Search_Chunk533.xml" /><stem n="bsd-style" chunk="Search_Chunk533.xml" /><stem n="openssl-cor" chunk="Search_Chunk533.xml" /><stem n="1998-2008" chunk="Search_Chunk533.xml" /><stem n="materialso" chunk="Search_Chunk533.xml" /><stem n="cryptograph" chunk="Search_Chunk533.xml" /><stem n="young" chunk="Search_Chunk533.xml" /><stem n="eai" chunk="Search_Chunk533.xml" /><stem n="cryptsoft" chunk="Search_Chunk533.xml" /><stem n="hudson" chunk="Search_Chunk533.xml" /><stem n="tjh" chunk="Search_Chunk533.xml" /><stem n="1995-1998" chunk="Search_Chunk533.xml" /><stem n="ssl" chunk="Search_Chunk533.xml" /><stem n="netscap" chunk="Search_Chunk533.xml" /><stem n="ahear" chunk="Search_Chunk533.xml" /><stem n="rc4" chunk="Search_Chunk533.xml" /><stem n="rsa" chunk="Search_Chunk533.xml" /><stem n="lhash" chunk="Search_Chunk533.xml" /><stem n="textual" chunk="Search_Chunk533.xml" /><stem n="2003-2009" chunk="Search_Chunk533.xml" /><stem n="hopkin" chunk="Search_Chunk533.xml" /><stem n="portabl" chunk="Search_Chunk533.xml" /><stem n="ross" chunk="Search_Chunk533.xml" /><stem n="bencina" chunk="Search_Chunk533.xml" /><stem n="phil" chunk="Search_Chunk533.xml" /><stem n="burk" chunk="Search_Chunk533.xml" /><stem n="non-bind" chunk="Search_Chunk533.xml" /><stem n="2008-2010" chunk="Search_Chunk533.xml" /><stem n="nokia" chunk="Search_Chunk533.xml" /><stem n="subsidiari" chunk="Search_Chunk533.xml" /><stem n="qt-info" chunk="Search_Chunk533.xml" /><stem n="qt-json" chunk="Search_Chunk533.xml" /><stem n="json" chunk="Search_Chunk533.xml" /><stem n="serial" chunk="Search_Chunk533.xml" /><stem n="qvariant" chunk="Search_Chunk533.xml" /><stem n="eeli" chunk="Search_Chunk533.xml" /><stem n="reilin" chunk="Search_Chunk533.xml" /><stem n="holder&gt;" chunk="Search_Chunk533.xml" /><stem n="conclus" chunk="Search_Chunk533.xml" /><stem n="wrapper" chunk="Search_Chunk533.xml" /><stem n="sergei" chunk="Search_Chunk533.xml" /><stem n="tachenov" chunk="Search_Chunk533.xml" /><stem n="​" chunk="Search_Chunk533.xml" /><stem n="player" chunk="Search_Chunk533.xml" /><stem n="1990-2006" chunk="Search_Chunk533.xml" /><stem n="1990" chunk="Search_Chunk533.xml" /><stem n="2008-2012" chunk="Search_Chunk533.xml" /><stem n="kakadu" chunk="Search_Chunk533.xml" /><stem n="doug" chunk="Search_Chunk534.xml" /><stem n="domain" chunk="Search_Chunk534.xml" /><stem n="dr" chunk="Search_Chunk534.xml" /><stem n="brian" chunk="Search_Chunk534.xml" /><stem n="gladman" chunk="Search_Chunk534.xml" /><stem n="worcest" chunk="Search_Chunk534.xml" /><stem n="gpl" chunk="Search_Chunk534.xml" /><stem n="sparselib++" chunk="Search_Chunk534.xml" /><stem n="spars" chunk="Search_Chunk534.xml" /><stem n="notr" chunk="Search_Chunk534.xml" /><stem n="dame" chunk="Search_Chunk534.xml" /><stem n="pozo" chunk="Search_Chunk534.xml" /><stem n="remington" chunk="Search_Chunk534.xml" /><stem n="lumsdain" chunk="Search_Chunk534.xml" /><stem n="strlcpy" chunk="Search_Chunk534.xml" /><stem n="strlcat" chunk="Search_Chunk534.xml" /><stem n="todd" chunk="Search_Chunk534.xml" /><stem n="miller" chunk="Search_Chunk534.xml" /><stem n="&lt;todd" chunk="Search_Chunk534.xml" /><stem n="courtesan" chunk="Search_Chunk534.xml" /><stem n="2005-2010" chunk="Search_Chunk534.xml" /><stem n="franklin" chunk="Search_Chunk534.xml" /><stem n="02110-1301" chunk="Search_Chunk534.xml" /><stem n="02110" chunk="Search_Chunk534.xml" /><stem n="1301" chunk="Search_Chunk534.xml" /><stem n="inlin" chunk="Search_Chunk534.xml" /><stem n="microsystem" chunk="Search_Chunk534.xml" /><stem n="scriptic" chunk="Search_Chunk534.xml" /><stem n="verbatim" chunk="Search_Chunk534.xml" /><stem n="classifi" chunk="Search_Chunk534.xml" /><stem n="227-7013" chunk="Search_Chunk534.xml" /><stem n="notwithstand" chunk="Search_Chunk534.xml" /><stem n="2000-2003" chunk="Search_Chunk534.xml" /><stem n="targetjr" chunk="Search_Chunk534.xml" /><stem n="consortium" chunk="Search_Chunk534.xml" /><stem n="crd" chunk="Search_Chunk534.xml" /><stem n="niskayuna" chunk="Search_Chunk534.xml" /><stem n="ny" chunk="Search_Chunk534.xml" /><stem n="12309" chunk="Search_Chunk534.xml" /><stem n="xml-rpc" chunk="Search_Chunk534.xml" /><stem n="rpc" chunk="Search_Chunk534.xml" /><stem n="2002-2003" chunk="Search_Chunk534.xml" /><stem n="chri" chunk="Search_Chunk534.xml" /><stem n="morlei" chunk="Search_Chunk534.xml" /><stem n="asynchron" chunk="Search_Chunk534.xml" /><stem n="ømq" chunk="Search_Chunk534.xml" /><stem n="add-on" chunk="Search_Chunk534.xml" /><stem n="close-sourc" chunk="Search_Chunk534.xml" /><stem n="share-alik" chunk="Search_Chunk534.xml" /><stem n="alik" chunk="Search_Chunk534.xml" /><stem n="fsf" chunk="Search_Chunk534.xml" /><stem n="subclass" chunk="Search_Chunk534.xml" /><stem n="faith" chunk="Search_Chunk534.xml" /><stem n="accessor" chunk="Search_Chunk534.xml" /><stem n="relink" chunk="Search_Chunk534.xml" /><stem n="interface-compat" chunk="Search_Chunk534.xml" /><stem n="4d0" chunk="Search_Chunk534.xml" /><stem n="4d1" chunk="Search_Chunk534.xml" /><stem n="uncombin" chunk="Search_Chunk534.xml" /><stem n="spirit" chunk="Search_Chunk534.xml" /><stem n="1995-2010" chunk="Search_Chunk534.xml" /><stem n="courier" chunk="Search_Chunk534.xml" /><stem n="bitstream" chunk="Search_Chunk534.xml" /><stem n="1989" chunk="Search_Chunk534.xml" /><stem n="1989-1992" chunk="Search_Chunk534.xml" /><stem n="1992" chunk="Search_Chunk534.xml" /><stem n="cambridg" chunk="Search_Chunk534.xml" /><stem n="proprieti" chunk="Search_Chunk534.xml" /><stem n="ibm" chunk="Search_Chunk534.xml" /><stem n="typefont" chunk="Search_Chunk534.xml" /><stem n="market" chunk="Search_Chunk534.xml" /><stem n="indemnif" chunk="Search_Chunk534.xml" /><stem n="henc" chunk="Search_Chunk534.xml" /><stem n="preambl" chunk="Search_Chunk534.xml" /><stem n="freedom" chunk="Search_Chunk534.xml" /><stem n="software--to" chunk="Search_Chunk534.xml" /><stem n="software-" chunk="Search_Chunk534.xml" /><stem n="packages--typ" chunk="Search_Chunk534.xml" /><stem n="packages-" chunk="Search_Chunk534.xml" /><stem n="libraries--of" chunk="Search_Chunk534.xml" /><stem n="libraries-" chunk="Search_Chunk534.xml" /><stem n="ordinari" chunk="Search_Chunk534.xml" /><stem n="strategi" chunk="Search_Chunk534.xml" /><stem n="price" chunk="Search_Chunk534.xml" /><stem n="forbid" chunk="Search_Chunk534.xml" /><stem n="surrend" chunk="Search_Chunk534.xml" /><stem n="grati" chunk="Search_Chunk534.xml" /><stem n="two-step" chunk="Search_Chunk534.xml" /><stem n="reput" chunk="Search_Chunk534.xml" /><stem n="pose" chunk="Search_Chunk534.xml" /><stem n="threat" chunk="Search_Chunk534.xml" /><stem n="insist" chunk="Search_Chunk534.xml" /><stem n="non-fre" chunk="Search_Chunk534.xml" /><stem n="lax" chunk="Search_Chunk534.xml" /><stem n="compet" chunk="Search_Chunk534.xml" /><stem n="widest" chunk="Search_Chunk534.xml" /><stem n="de-facto" chunk="Search_Chunk534.xml" /><stem n="facto" chunk="Search_Chunk534.xml" /><stem n="variant" chunk="Search_Chunk534.xml" /><stem n="wherewith" chunk="Search_Chunk534.xml" /><stem n="straightforwardli" chunk="Search_Chunk534.xml" /><stem n="hereinaft" chunk="Search_Chunk534.xml" /><stem n="exchang" chunk="Search_Chunk534.xml" /><stem n="subsect" chunk="Search_Chunk534.xml" /><stem n="application-suppli" chunk="Search_Chunk534.xml" /><stem n="contest" chunk="Search_Chunk534.xml" /><stem n="opt" chunk="Search_Chunk534.xml" /><stem n="irrevers" chunk="Search_Chunk534.xml" /><stem n="machine-read" chunk="Search_Chunk534.xml" /><stem n="customarili" chunk="Search_Chunk534.xml" /><stem n="compel" chunk="Search_Chunk534.xml" /><stem n="unrestrict" chunk="Search_Chunk534.xml" /><stem n="understood" chunk="Search_Chunk534.xml" /><stem n="6a" chunk="Search_Chunk534.xml" /><stem n="contradict" chunk="Search_Chunk534.xml" /><stem n="void" chunk="Search_Chunk534.xml" /><stem n="judgment" chunk="Search_Chunk534.xml" /><stem n="alleg" chunk="Search_Chunk534.xml" /><stem n="excus" chunk="Search_Chunk534.xml" /><stem n="pertin" chunk="Search_Chunk534.xml" /><stem n="refrain" chunk="Search_Chunk534.xml" /><stem n="relianc" chunk="Search_Chunk534.xml" /><stem n="donor" chunk="Search_Chunk534.xml" /><stem n="thoroughli" chunk="Search_Chunk534.xml" /><stem n="believ" chunk="Search_Chunk534.xml" /><stem n="geograph" chunk="Search_Chunk534.xml" /><stem n="incompat" chunk="Search_Chunk534.xml" /><stem n="defect" chunk="Search_Chunk534.xml" /><stem n="sustain" chunk="Search_Chunk534.xml" /><stem n="safest" chunk="Search_Chunk534.xml" /><stem n="&lt;one" chunk="Search_Chunk534.xml" /><stem n="&lt;name" chunk="Search_Chunk534.xml" /><stem n="author&gt;" chunk="Search_Chunk534.xml" /><stem n="school" chunk="Search_Chunk534.xml" /><stem n="yoyodyn" chunk="Search_Chunk534.xml" /><stem n="`frob" chunk="Search_Chunk534.xml" /><stem n="jame" chunk="Search_Chunk534.xml" /><stem n="hacker" chunk="Search_Chunk534.xml" /><stem n="&lt;signatur" chunk="Search_Chunk534.xml" /><stem n="ty" chunk="Search_Chunk534.xml" /><stem n="coon&gt;" chunk="Search_Chunk534.xml" /><stem n="coon" chunk="Search_Chunk534.xml" /><stem n="presid" chunk="Search_Chunk534.xml" /><stem n="withdraw" chunk="Search_Chunk534.xml" /><stem n="visionmong" chunk="Search_Chunk534.xml" /><stem n="england" chunk="Search_Chunk534.xml" /><stem n="wale" chunk="Search_Chunk534.xml" /><stem n="resel" chunk="Search_Chunk534.xml" /><stem n="refus" chunk="Search_Chunk534.xml" /><stem n="twelv" chunk="Search_Chunk534.xml" /><stem n="paid" chunk="Search_Chunk534.xml" /><stem n="assigne" chunk="Search_Chunk534.xml" /><stem n="custodi" chunk="Search_Chunk534.xml" /><stem n="login-bas" chunk="Search_Chunk534.xml" /><stem n="concessionari" chunk="Search_Chunk534.xml" /><stem n="discount" chunk="Search_Chunk534.xml" /><stem n="part-tim" chunk="Search_Chunk534.xml" /><stem n="full-tim" chunk="Search_Chunk534.xml" /><stem n="for-profit" chunk="Search_Chunk534.xml" /><stem n="on-sal" chunk="Search_Chunk534.xml" /><stem n="financi" chunk="Search_Chunk534.xml" /><stem n="reward" chunk="Search_Chunk534.xml" /><stem n="undertak" chunk="Search_Chunk534.xml" /><stem n="premis" chunk="Search_Chunk534.xml" /><stem n="steam" chunk="Search_Chunk534.xml" /><stem n="valv" chunk="Search_Chunk534.xml" /><stem n="workshop" chunk="Search_Chunk534.xml" /><stem n="indi" chunk="Search_Chunk534.xml" /><stem n="mari" chunk="Search_Chunk534.xml" /><stem n="iv" chunk="Search_Chunk534.xml" /><stem n="ple" chunk="Search_Chunk534.xml" /><stem n="doubt" chunk="Search_Chunk534.xml" /><stem n="non-interact" chunk="Search_Chunk535.xml" /><stem n="headless" chunk="Search_Chunk535.xml" /><stem n="capac" chunk="Search_Chunk535.xml" /><stem n="user-interact" chunk="Search_Chunk535.xml" /><stem n="guard" chunk="Search_Chunk535.xml" /><stem n="unlicens" chunk="Search_Chunk535.xml" /><stem n="pledg" chunk="Search_Chunk535.xml" /><stem n="circumv" chunk="Search_Chunk535.xml" /><stem n="oss" chunk="Search_Chunk535.xml" /><stem n="lgpl-2" chunk="Search_Chunk535.xml" /><stem n="re-link" chunk="Search_Chunk535.xml" /><stem n="off-lin" chunk="Search_Chunk535.xml" /><stem n="off-sit" chunk="Search_Chunk535.xml" /><stem n="flood" chunk="Search_Chunk535.xml" /><stem n="vandal" chunk="Search_Chunk535.xml" /><stem n="incid" chunk="Search_Chunk535.xml" /><stem n="settl" chunk="Search_Chunk535.xml" /><stem n="reimburs" chunk="Search_Chunk535.xml" /><stem n="defenc" chunk="Search_Chunk535.xml" /><stem n="admiss" chunk="Search_Chunk535.xml" /><stem n="prejudici" chunk="Search_Chunk535.xml" /><stem n="refund" chunk="Search_Chunk535.xml" /><stem n="payabl" chunk="Search_Chunk535.xml" /><stem n="annual" chunk="Search_Chunk535.xml" /><stem n="tax" chunk="Search_Chunk535.xml" /><stem n="duti" chunk="Search_Chunk535.xml" /><stem n="tariff" chunk="Search_Chunk535.xml" /><stem n="impost" chunk="Search_Chunk535.xml" /><stem n="contempl" chunk="Search_Chunk535.xml" /><stem n="nineti" chunk="Search_Chunk535.xml" /><stem n="unauthoris" chunk="Search_Chunk535.xml" /><stem n="faulti" chunk="Search_Chunk535.xml" /><stem n="sharehold" chunk="Search_Chunk535.xml" /><stem n="settlement" chunk="Search_Chunk535.xml" /><stem n="authoris" chunk="Search_Chunk535.xml" /><stem n="re-sal" chunk="Search_Chunk535.xml" /><stem n="revenu" chunk="Search_Chunk535.xml" /><stem n="opportun" chunk="Search_Chunk535.xml" /><stem n="us$5000" chunk="Search_Chunk535.xml" /><stem n="fraud" chunk="Search_Chunk535.xml" /><stem n="fraudul" chunk="Search_Chunk535.xml" /><stem n="misrepresent" chunk="Search_Chunk535.xml" /><stem n="forese" chunk="Search_Chunk535.xml" /><stem n="need-to" chunk="Search_Chunk535.xml" /><stem n="need-to-know" chunk="Search_Chunk535.xml" /><stem n="to-know" chunk="Search_Chunk535.xml" /><stem n="segreg" chunk="Search_Chunk535.xml" /><stem n="commingl" chunk="Search_Chunk535.xml" /><stem n="receipt" chunk="Search_Chunk535.xml" /><stem n="monetari" chunk="Search_Chunk535.xml" /><stem n="unauthor" chunk="Search_Chunk535.xml" /><stem n="equit" chunk="Search_Chunk535.xml" /><stem n="demand" chunk="Search_Chunk535.xml" /><stem n="audit" chunk="Search_Chunk535.xml" /><stem n="privaci" chunk="Search_Chunk535.xml" /><stem n="supp" chunk="Search_Chunk535.xml" /><stem n="7202-1" chunk="Search_Chunk535.xml" /><stem n="contractu" chunk="Search_Chunk535.xml" /><stem n="contrari" chunk="Search_Chunk535.xml" /><stem n="unpublished-right" chunk="Search_Chunk535.xml" /><stem n="unpublish" chunk="Search_Chunk535.xml" /><stem n="kingdom" chunk="Search_Chunk535.xml" /><stem n="negoti" chunk="Search_Chunk535.xml" /><stem n="non-contractu" chunk="Search_Chunk535.xml" /><stem n="english" chunk="Search_Chunk535.xml" /><stem n="irrevoc" chunk="Search_Chunk535.xml" /><stem n="testimoni" chunk="Search_Chunk535.xml" /><stem n="promptli" chunk="Search_Chunk535.xml" /><stem n="ow" chunk="Search_Chunk535.xml" /><stem n="rescind" chunk="Search_Chunk535.xml" /><stem n="presss" chunk="Search_Chunk535.xml" /><stem n="creating_node_tool_set" chunk="Search_Chunk535.xml" /><stem n="editing_clips_dope_sheet" chunk="Search_Chunk535.xml" /><stem n="primatte™" chunk="Search_Chunk535.xml" /><stem n="1997-" chunk="Search_Chunk535.xml" /><stem n="infer" chunk="Search_Chunk535.xml" /><stem n="linu" chunk="Search_Chunk535.xml" /><stem n="torvald" chunk="Search_Chunk535.xml" /><stem n="2d3" chunk="Search_Chunk535.xml" /><stem n="cineon™" chunk="Search_Chunk535.xml" /><stem n="eastman" chunk="Search_Chunk535.xml" /><stem n="chung" chunk="Search_Chunk535.xml" /><stem n="hksc" chunk="Search_Chunk535.xml" /><stem n="stereoscopi" chunk="Search_Chunk535.xml" /><stem n="ron" chunk="Search_Chunk535.xml" /><stem n="brinkmann" chunk="Search_Chunk535.xml" /><stem n="digitalcomposit" chunk="Search_Chunk535.xml" /><stem n="mayang" chunk="Search_Chunk535.xml" /><stem n="tomorrow" chunk="Search_Chunk535.xml" /><stem n="©2004" chunk="Search_Chunk535.xml" /><stem n="fox" chunk="Search_Chunk535.xml" /><stem n="stealth" chunk="Search_Chunk535.xml" /><stem n="xxx" chunk="Search_Chunk535.xml" /><stem n="©2002" chunk="Search_Chunk535.xml" /><stem n="columbia" chunk="Search_Chunk535.xml" /><stem n="diogo" chunk="Search_Chunk535.xml" /><stem n="girondi" chunk="Search_Chunk535.xml" /><stem n="baier" chunk="Search_Chunk535.xml" /><stem n="proofread" chunk="Search_Chunk535.xml" /><stem n="golden" chunk="Search_Chunk535.xml" /><stem n="w1f" chunk="Search_Chunk535.xml" /><stem n="9ht" chunk="Search_Chunk535.xml" /><stem n="rev" chunk="Search_Chunk535.xml" /><stem n="qwerti" chunk="Search_Chunk535.xml" /><stem n="&lt;num&gt;" chunk="Search_Chunk535.xml" /><stem n="hud" chunk="Search_Chunk535.xml" /><stem n="splitwip" chunk="Search_Chunk535.xml" /><stem n="upper-most" chunk="Search_Chunk535.xml" /><stem n="shfit" chunk="Search_Chunk535.xml" /><stem n="cash" chunk="Search_Chunk535.xml" /><stem n="hieroplay" chunk="Search_Chunk535.xml" /><stem n="f2" chunk="Search_Chunk535.xml" /><stem n="f3" chunk="Search_Chunk535.xml" /><stem n="f4" chunk="Search_Chunk535.xml" /><stem n="f&lt;num&gt;" chunk="Search_Chunk535.xml" /><stem n="searchbox" chunk="Search_Chunk535.xml" /></ents><chunkfiles><Url Source="Search_Chunk1.xml" /><Url Source="Search_Chunk2.xml" /><Url Source="Search_Chunk3.xml" /><Url Source="Search_Chunk4.xml" /><Url Source="Search_Chunk5.xml" /><Url Source="Search_Chunk6.xml" /><Url Source="Search_Chunk7.xml" /><Url Source="Search_Chunk8.xml" /><Url Source="Search_Chunk9.xml" /><Url Source="Search_Chunk10.xml" /><Url Source="Search_Chunk11.xml" /><Url Source="Search_Chunk12.xml" /><Url Source="Search_Chunk13.xml" /><Url Source="Search_Chunk14.xml" /><Url Source="Search_Chunk15.xml" /><Url Source="Search_Chunk16.xml" /><Url Source="Search_Chunk17.xml" /><Url Source="Search_Chunk18.xml" /><Url Source="Search_Chunk19.xml" /><Url Source="Search_Chunk20.xml" /><Url Source="Search_Chunk21.xml" /><Url Source="Search_Chunk22.xml" /><Url Source="Search_Chunk23.xml" /><Url Source="Search_Chunk24.xml" /><Url Source="Search_Chunk25.xml" /><Url Source="Search_Chunk26.xml" /><Url Source="Search_Chunk27.xml" /><Url Source="Search_Chunk28.xml" /><Url Source="Search_Chunk29.xml" /><Url Source="Search_Chunk30.xml" /><Url Source="Search_Chunk31.xml" /><Url Source="Search_Chunk32.xml" /><Url Source="Search_Chunk33.xml" /><Url Source="Search_Chunk34.xml" /><Url Source="Search_Chunk35.xml" /><Url Source="Search_Chunk36.xml" /><Url Source="Search_Chunk37.xml" /><Url Source="Search_Chunk38.xml" /><Url Source="Search_Chunk39.xml" /><Url Source="Search_Chunk40.xml" /><Url Source="Search_Chunk41.xml" /><Url Source="Search_Chunk42.xml" /><Url Source="Search_Chunk43.xml" /><Url Source="Search_Chunk44.xml" /><Url Source="Search_Chunk45.xml" /><Url Source="Search_Chunk46.xml" /><Url Source="Search_Chunk47.xml" /><Url Source="Search_Chunk48.xml" /><Url Source="Search_Chunk49.xml" /><Url Source="Search_Chunk50.xml" /><Url Source="Search_Chunk51.xml" /><Url Source="Search_Chunk52.xml" /><Url Source="Search_Chunk53.xml" /><Url Source="Search_Chunk54.xml" /><Url Source="Search_Chunk55.xml" /><Url Source="Search_Chunk56.xml" /><Url Source="Search_Chunk57.xml" /><Url Source="Search_Chunk58.xml" /><Url Source="Search_Chunk59.xml" /><Url Source="Search_Chunk60.xml" /><Url Source="Search_Chunk61.xml" /><Url Source="Search_Chunk62.xml" /><Url Source="Search_Chunk63.xml" /><Url Source="Search_Chunk64.xml" /><Url Source="Search_Chunk65.xml" /><Url Source="Search_Chunk66.xml" /><Url Source="Search_Chunk67.xml" /><Url Source="Search_Chunk68.xml" /><Url Source="Search_Chunk69.xml" /><Url Source="Search_Chunk70.xml" /><Url Source="Search_Chunk71.xml" /><Url Source="Search_Chunk72.xml" /><Url Source="Search_Chunk73.xml" /><Url Source="Search_Chunk74.xml" /><Url Source="Search_Chunk75.xml" /><Url Source="Search_Chunk76.xml" /><Url Source="Search_Chunk77.xml" /><Url Source="Search_Chunk78.xml" /><Url Source="Search_Chunk79.xml" /><Url Source="Search_Chunk80.xml" /><Url Source="Search_Chunk81.xml" /><Url Source="Search_Chunk82.xml" /><Url Source="Search_Chunk83.xml" /><Url Source="Search_Chunk84.xml" /><Url Source="Search_Chunk85.xml" /><Url Source="Search_Chunk86.xml" /><Url Source="Search_Chunk87.xml" /><Url Source="Search_Chunk88.xml" /><Url Source="Search_Chunk89.xml" /><Url Source="Search_Chunk90.xml" /><Url Source="Search_Chunk91.xml" /><Url Source="Search_Chunk92.xml" /><Url Source="Search_Chunk93.xml" /><Url Source="Search_Chunk94.xml" /><Url Source="Search_Chunk95.xml" /><Url Source="Search_Chunk96.xml" /><Url Source="Search_Chunk97.xml" /><Url Source="Search_Chunk98.xml" /><Url Source="Search_Chunk99.xml" /><Url Source="Search_Chunk100.xml" /><Url Source="Search_Chunk101.xml" /><Url Source="Search_Chunk102.xml" /><Url Source="Search_Chunk103.xml" /><Url Source="Search_Chunk104.xml" /><Url Source="Search_Chunk105.xml" /><Url Source="Search_Chunk106.xml" /><Url Source="Search_Chunk107.xml" /><Url Source="Search_Chunk108.xml" /><Url Source="Search_Chunk109.xml" /><Url Source="Search_Chunk110.xml" /><Url Source="Search_Chunk111.xml" /><Url Source="Search_Chunk112.xml" /><Url Source="Search_Chunk113.xml" /><Url Source="Search_Chunk114.xml" /><Url Source="Search_Chunk115.xml" /><Url Source="Search_Chunk116.xml" /><Url Source="Search_Chunk117.xml" /><Url Source="Search_Chunk118.xml" /><Url Source="Search_Chunk119.xml" /><Url Source="Search_Chunk120.xml" /><Url Source="Search_Chunk121.xml" /><Url Source="Search_Chunk122.xml" /><Url Source="Search_Chunk123.xml" /><Url Source="Search_Chunk124.xml" /><Url Source="Search_Chunk125.xml" /><Url Source="Search_Chunk126.xml" /><Url Source="Search_Chunk127.xml" /><Url Source="Search_Chunk128.xml" /><Url Source="Search_Chunk129.xml" /><Url Source="Search_Chunk130.xml" /><Url Source="Search_Chunk131.xml" /><Url Source="Search_Chunk132.xml" /><Url Source="Search_Chunk133.xml" /><Url Source="Search_Chunk134.xml" /><Url Source="Search_Chunk135.xml" /><Url Source="Search_Chunk136.xml" /><Url Source="Search_Chunk137.xml" /><Url Source="Search_Chunk138.xml" /><Url Source="Search_Chunk139.xml" /><Url Source="Search_Chunk140.xml" /><Url Source="Search_Chunk141.xml" /><Url Source="Search_Chunk142.xml" /><Url Source="Search_Chunk143.xml" /><Url Source="Search_Chunk144.xml" /><Url Source="Search_Chunk145.xml" /><Url Source="Search_Chunk146.xml" /><Url Source="Search_Chunk147.xml" /><Url Source="Search_Chunk148.xml" /><Url Source="Search_Chunk149.xml" /><Url Source="Search_Chunk150.xml" /><Url Source="Search_Chunk151.xml" /><Url Source="Search_Chunk152.xml" /><Url Source="Search_Chunk153.xml" /><Url Source="Search_Chunk154.xml" /><Url Source="Search_Chunk155.xml" /><Url Source="Search_Chunk156.xml" /><Url Source="Search_Chunk157.xml" /><Url Source="Search_Chunk158.xml" /><Url Source="Search_Chunk159.xml" /><Url Source="Search_Chunk160.xml" /><Url Source="Search_Chunk161.xml" /><Url Source="Search_Chunk162.xml" /><Url Source="Search_Chunk163.xml" /><Url Source="Search_Chunk164.xml" /><Url Source="Search_Chunk165.xml" /><Url Source="Search_Chunk166.xml" /><Url Source="Search_Chunk167.xml" /><Url Source="Search_Chunk168.xml" /><Url Source="Search_Chunk169.xml" /><Url Source="Search_Chunk170.xml" /><Url Source="Search_Chunk171.xml" /><Url Source="Search_Chunk172.xml" /><Url Source="Search_Chunk173.xml" /><Url Source="Search_Chunk174.xml" /><Url Source="Search_Chunk175.xml" /><Url Source="Search_Chunk176.xml" /><Url Source="Search_Chunk177.xml" /><Url Source="Search_Chunk178.xml" /><Url Source="Search_Chunk179.xml" /><Url Source="Search_Chunk180.xml" /><Url Source="Search_Chunk181.xml" /><Url Source="Search_Chunk182.xml" /><Url Source="Search_Chunk183.xml" /><Url Source="Search_Chunk184.xml" /><Url Source="Search_Chunk185.xml" /><Url Source="Search_Chunk186.xml" /><Url Source="Search_Chunk187.xml" /><Url Source="Search_Chunk188.xml" /><Url Source="Search_Chunk189.xml" /><Url Source="Search_Chunk190.xml" /><Url Source="Search_Chunk191.xml" /><Url Source="Search_Chunk192.xml" /><Url Source="Search_Chunk193.xml" /><Url Source="Search_Chunk194.xml" /><Url Source="Search_Chunk195.xml" /><Url Source="Search_Chunk196.xml" /><Url Source="Search_Chunk197.xml" /><Url Source="Search_Chunk198.xml" /><Url Source="Search_Chunk199.xml" /><Url Source="Search_Chunk200.xml" /><Url Source="Search_Chunk201.xml" /><Url Source="Search_Chunk202.xml" /><Url Source="Search_Chunk203.xml" /><Url Source="Search_Chunk204.xml" /><Url Source="Search_Chunk205.xml" /><Url Source="Search_Chunk206.xml" /><Url Source="Search_Chunk207.xml" /><Url Source="Search_Chunk208.xml" /><Url Source="Search_Chunk209.xml" /><Url Source="Search_Chunk210.xml" /><Url Source="Search_Chunk211.xml" /><Url Source="Search_Chunk212.xml" /><Url Source="Search_Chunk213.xml" /><Url Source="Search_Chunk214.xml" /><Url Source="Search_Chunk215.xml" /><Url Source="Search_Chunk216.xml" /><Url Source="Search_Chunk217.xml" /><Url Source="Search_Chunk218.xml" /><Url Source="Search_Chunk219.xml" /><Url Source="Search_Chunk220.xml" /><Url Source="Search_Chunk221.xml" /><Url Source="Search_Chunk222.xml" /><Url Source="Search_Chunk223.xml" /><Url Source="Search_Chunk224.xml" /><Url Source="Search_Chunk225.xml" /><Url Source="Search_Chunk226.xml" /><Url Source="Search_Chunk227.xml" /><Url Source="Search_Chunk228.xml" /><Url Source="Search_Chunk229.xml" /><Url Source="Search_Chunk230.xml" /><Url Source="Search_Chunk231.xml" /><Url Source="Search_Chunk232.xml" /><Url Source="Search_Chunk233.xml" /><Url Source="Search_Chunk234.xml" /><Url Source="Search_Chunk235.xml" /><Url Source="Search_Chunk236.xml" /><Url Source="Search_Chunk237.xml" /><Url Source="Search_Chunk238.xml" /><Url Source="Search_Chunk239.xml" /><Url Source="Search_Chunk240.xml" /><Url Source="Search_Chunk241.xml" /><Url Source="Search_Chunk242.xml" /><Url Source="Search_Chunk243.xml" /><Url Source="Search_Chunk244.xml" /><Url Source="Search_Chunk245.xml" /><Url Source="Search_Chunk246.xml" /><Url Source="Search_Chunk247.xml" /><Url Source="Search_Chunk248.xml" /><Url Source="Search_Chunk249.xml" /><Url Source="Search_Chunk250.xml" /><Url Source="Search_Chunk251.xml" /><Url Source="Search_Chunk252.xml" /><Url Source="Search_Chunk253.xml" /><Url Source="Search_Chunk254.xml" /><Url Source="Search_Chunk255.xml" /><Url Source="Search_Chunk256.xml" /><Url Source="Search_Chunk257.xml" /><Url Source="Search_Chunk258.xml" /><Url Source="Search_Chunk259.xml" /><Url Source="Search_Chunk260.xml" /><Url Source="Search_Chunk261.xml" /><Url Source="Search_Chunk262.xml" /><Url Source="Search_Chunk263.xml" /><Url Source="Search_Chunk264.xml" /><Url Source="Search_Chunk265.xml" /><Url Source="Search_Chunk266.xml" /><Url Source="Search_Chunk267.xml" /><Url Source="Search_Chunk268.xml" /><Url Source="Search_Chunk269.xml" /><Url Source="Search_Chunk270.xml" /><Url Source="Search_Chunk271.xml" /><Url Source="Search_Chunk272.xml" /><Url Source="Search_Chunk273.xml" /><Url Source="Search_Chunk274.xml" /><Url Source="Search_Chunk275.xml" /><Url Source="Search_Chunk276.xml" /><Url Source="Search_Chunk277.xml" /><Url Source="Search_Chunk278.xml" /><Url Source="Search_Chunk279.xml" /><Url Source="Search_Chunk280.xml" /><Url Source="Search_Chunk281.xml" /><Url Source="Search_Chunk282.xml" /><Url Source="Search_Chunk283.xml" /><Url Source="Search_Chunk284.xml" /><Url Source="Search_Chunk285.xml" /><Url Source="Search_Chunk286.xml" /><Url Source="Search_Chunk287.xml" /><Url Source="Search_Chunk288.xml" /><Url Source="Search_Chunk289.xml" /><Url Source="Search_Chunk290.xml" /><Url Source="Search_Chunk291.xml" /><Url Source="Search_Chunk292.xml" /><Url Source="Search_Chunk293.xml" /><Url Source="Search_Chunk294.xml" /><Url Source="Search_Chunk295.xml" /><Url Source="Search_Chunk296.xml" /><Url Source="Search_Chunk297.xml" /><Url Source="Search_Chunk298.xml" /><Url Source="Search_Chunk299.xml" /><Url Source="Search_Chunk300.xml" /><Url Source="Search_Chunk301.xml" /><Url Source="Search_Chunk302.xml" /><Url Source="Search_Chunk303.xml" /><Url Source="Search_Chunk304.xml" /><Url Source="Search_Chunk305.xml" /><Url Source="Search_Chunk306.xml" /><Url Source="Search_Chunk307.xml" /><Url Source="Search_Chunk308.xml" /><Url Source="Search_Chunk309.xml" /><Url Source="Search_Chunk310.xml" /><Url Source="Search_Chunk311.xml" /><Url Source="Search_Chunk312.xml" /><Url Source="Search_Chunk313.xml" /><Url Source="Search_Chunk314.xml" /><Url Source="Search_Chunk315.xml" /><Url Source="Search_Chunk316.xml" /><Url Source="Search_Chunk317.xml" /><Url Source="Search_Chunk318.xml" /><Url Source="Search_Chunk319.xml" /><Url Source="Search_Chunk320.xml" /><Url Source="Search_Chunk321.xml" /><Url Source="Search_Chunk322.xml" /><Url Source="Search_Chunk323.xml" /><Url Source="Search_Chunk324.xml" /><Url Source="Search_Chunk325.xml" /><Url Source="Search_Chunk326.xml" /><Url Source="Search_Chunk327.xml" /><Url Source="Search_Chunk328.xml" /><Url Source="Search_Chunk329.xml" /><Url Source="Search_Chunk330.xml" /><Url Source="Search_Chunk331.xml" /><Url Source="Search_Chunk332.xml" /><Url Source="Search_Chunk333.xml" /><Url Source="Search_Chunk334.xml" /><Url Source="Search_Chunk335.xml" /><Url Source="Search_Chunk336.xml" /><Url Source="Search_Chunk337.xml" /><Url Source="Search_Chunk338.xml" /><Url Source="Search_Chunk339.xml" /><Url Source="Search_Chunk340.xml" /><Url Source="Search_Chunk341.xml" /><Url Source="Search_Chunk342.xml" /><Url Source="Search_Chunk343.xml" /><Url Source="Search_Chunk344.xml" /><Url Source="Search_Chunk345.xml" /><Url Source="Search_Chunk346.xml" /><Url Source="Search_Chunk347.xml" /><Url Source="Search_Chunk348.xml" /><Url Source="Search_Chunk349.xml" /><Url Source="Search_Chunk350.xml" /><Url Source="Search_Chunk351.xml" /><Url Source="Search_Chunk352.xml" /><Url Source="Search_Chunk353.xml" /><Url Source="Search_Chunk354.xml" /><Url Source="Search_Chunk355.xml" /><Url Source="Search_Chunk356.xml" /><Url Source="Search_Chunk357.xml" /><Url Source="Search_Chunk358.xml" /><Url Source="Search_Chunk359.xml" /><Url Source="Search_Chunk360.xml" /><Url Source="Search_Chunk361.xml" /><Url Source="Search_Chunk362.xml" /><Url Source="Search_Chunk363.xml" /><Url Source="Search_Chunk364.xml" /><Url Source="Search_Chunk365.xml" /><Url Source="Search_Chunk366.xml" /><Url Source="Search_Chunk367.xml" /><Url Source="Search_Chunk368.xml" /><Url Source="Search_Chunk369.xml" /><Url Source="Search_Chunk370.xml" /><Url Source="Search_Chunk371.xml" /><Url Source="Search_Chunk372.xml" /><Url Source="Search_Chunk373.xml" /><Url Source="Search_Chunk374.xml" /><Url Source="Search_Chunk375.xml" /><Url Source="Search_Chunk376.xml" /><Url Source="Search_Chunk377.xml" /><Url Source="Search_Chunk378.xml" /><Url Source="Search_Chunk379.xml" /><Url Source="Search_Chunk380.xml" /><Url Source="Search_Chunk381.xml" /><Url Source="Search_Chunk382.xml" /><Url Source="Search_Chunk383.xml" /><Url Source="Search_Chunk384.xml" /><Url Source="Search_Chunk385.xml" /><Url Source="Search_Chunk386.xml" /><Url Source="Search_Chunk387.xml" /><Url Source="Search_Chunk388.xml" /><Url Source="Search_Chunk389.xml" /><Url Source="Search_Chunk390.xml" /><Url Source="Search_Chunk391.xml" /><Url Source="Search_Chunk392.xml" /><Url Source="Search_Chunk393.xml" /><Url Source="Search_Chunk394.xml" /><Url Source="Search_Chunk395.xml" /><Url Source="Search_Chunk396.xml" /><Url Source="Search_Chunk397.xml" /><Url Source="Search_Chunk398.xml" /><Url Source="Search_Chunk399.xml" /><Url Source="Search_Chunk400.xml" /><Url Source="Search_Chunk401.xml" /><Url Source="Search_Chunk402.xml" /><Url Source="Search_Chunk403.xml" /><Url Source="Search_Chunk404.xml" /><Url Source="Search_Chunk405.xml" /><Url Source="Search_Chunk406.xml" /><Url Source="Search_Chunk407.xml" /><Url Source="Search_Chunk408.xml" /><Url Source="Search_Chunk409.xml" /><Url Source="Search_Chunk410.xml" /><Url Source="Search_Chunk411.xml" /><Url Source="Search_Chunk412.xml" /><Url Source="Search_Chunk413.xml" /><Url Source="Search_Chunk414.xml" /><Url Source="Search_Chunk415.xml" /><Url Source="Search_Chunk416.xml" /><Url Source="Search_Chunk417.xml" /><Url Source="Search_Chunk418.xml" /><Url Source="Search_Chunk419.xml" /><Url Source="Search_Chunk420.xml" /><Url Source="Search_Chunk421.xml" /><Url Source="Search_Chunk422.xml" /><Url Source="Search_Chunk423.xml" /><Url Source="Search_Chunk424.xml" /><Url Source="Search_Chunk425.xml" /><Url Source="Search_Chunk426.xml" /><Url Source="Search_Chunk427.xml" /><Url Source="Search_Chunk428.xml" /><Url Source="Search_Chunk429.xml" /><Url Source="Search_Chunk430.xml" /><Url Source="Search_Chunk431.xml" /><Url Source="Search_Chunk432.xml" /><Url Source="Search_Chunk433.xml" /><Url Source="Search_Chunk434.xml" /><Url Source="Search_Chunk435.xml" /><Url Source="Search_Chunk436.xml" /><Url Source="Search_Chunk437.xml" /><Url Source="Search_Chunk438.xml" /><Url Source="Search_Chunk439.xml" /><Url Source="Search_Chunk440.xml" /><Url Source="Search_Chunk441.xml" /><Url Source="Search_Chunk442.xml" /><Url Source="Search_Chunk443.xml" /><Url Source="Search_Chunk444.xml" /><Url Source="Search_Chunk445.xml" /><Url Source="Search_Chunk446.xml" /><Url Source="Search_Chunk447.xml" /><Url Source="Search_Chunk448.xml" /><Url Source="Search_Chunk449.xml" /><Url Source="Search_Chunk450.xml" /><Url Source="Search_Chunk451.xml" /><Url Source="Search_Chunk452.xml" /><Url Source="Search_Chunk453.xml" /><Url Source="Search_Chunk454.xml" /><Url Source="Search_Chunk455.xml" /><Url Source="Search_Chunk456.xml" /><Url Source="Search_Chunk457.xml" /><Url Source="Search_Chunk458.xml" /><Url Source="Search_Chunk459.xml" /><Url Source="Search_Chunk460.xml" /><Url Source="Search_Chunk461.xml" /><Url Source="Search_Chunk462.xml" /><Url Source="Search_Chunk463.xml" /><Url Source="Search_Chunk464.xml" /><Url Source="Search_Chunk465.xml" /><Url Source="Search_Chunk466.xml" /><Url Source="Search_Chunk467.xml" /><Url Source="Search_Chunk468.xml" /><Url Source="Search_Chunk469.xml" /><Url Source="Search_Chunk470.xml" /><Url Source="Search_Chunk471.xml" /><Url Source="Search_Chunk472.xml" /><Url Source="Search_Chunk473.xml" /><Url Source="Search_Chunk474.xml" /><Url Source="Search_Chunk475.xml" /><Url Source="Search_Chunk476.xml" /><Url Source="Search_Chunk477.xml" /><Url Source="Search_Chunk478.xml" /><Url Source="Search_Chunk479.xml" /><Url Source="Search_Chunk480.xml" /><Url Source="Search_Chunk481.xml" /><Url Source="Search_Chunk482.xml" /><Url Source="Search_Chunk483.xml" /><Url Source="Search_Chunk484.xml" /><Url Source="Search_Chunk485.xml" /><Url Source="Search_Chunk486.xml" /><Url Source="Search_Chunk487.xml" /><Url Source="Search_Chunk488.xml" /><Url Source="Search_Chunk489.xml" /><Url Source="Search_Chunk490.xml" /><Url Source="Search_Chunk491.xml" /><Url Source="Search_Chunk492.xml" /><Url Source="Search_Chunk493.xml" /><Url Source="Search_Chunk494.xml" /><Url Source="Search_Chunk495.xml" /><Url Source="Search_Chunk496.xml" /><Url Source="Search_Chunk497.xml" /><Url Source="Search_Chunk498.xml" /><Url Source="Search_Chunk499.xml" /><Url Source="Search_Chunk500.xml" /><Url Source="Search_Chunk501.xml" /><Url Source="Search_Chunk502.xml" /><Url Source="Search_Chunk503.xml" /><Url Source="Search_Chunk504.xml" /><Url Source="Search_Chunk505.xml" /><Url Source="Search_Chunk506.xml" /><Url Source="Search_Chunk507.xml" /><Url Source="Search_Chunk508.xml" /><Url Source="Search_Chunk509.xml" /><Url Source="Search_Chunk510.xml" /><Url Source="Search_Chunk511.xml" /><Url Source="Search_Chunk512.xml" /><Url Source="Search_Chunk513.xml" /><Url Source="Search_Chunk514.xml" /><Url Source="Search_Chunk515.xml" /><Url Source="Search_Chunk516.xml" /><Url Source="Search_Chunk517.xml" /><Url Source="Search_Chunk518.xml" /><Url Source="Search_Chunk519.xml" /><Url Source="Search_Chunk520.xml" /><Url Source="Search_Chunk521.xml" /><Url Source="Search_Chunk522.xml" /><Url Source="Search_Chunk523.xml" /><Url Source="Search_Chunk524.xml" /><Url Source="Search_Chunk525.xml" /><Url Source="Search_Chunk526.xml" /><Url Source="Search_Chunk527.xml" /><Url Source="Search_Chunk528.xml" /><Url Source="Search_Chunk529.xml" /><Url Source="Search_Chunk530.xml" /><Url Source="Search_Chunk531.xml" /><Url Source="Search_Chunk532.xml" /><Url Source="Search_Chunk533.xml" /><Url Source="Search_Chunk534.xml" /><Url Source="Search_Chunk535.xml" /></chunkfiles></index>