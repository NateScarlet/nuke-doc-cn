Root {
 inputs 0
 format "2048 1556 0 0 2048 1556 1 2K_Super_35(full-ap)"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
}
StickyNote {
 inputs 0
 name StickyNote9
 label "WipeKernel:\nA simple transition between two\ninputs."
 xpos -50
 ypos -135
}
ColorBars {
 inputs 0
 name ColorBars1
 xpos 39
 ypos -65
}
CheckerBoard2 {
 inputs 0
 name CheckerBoard6
 xpos -48
 ypos -65
}
BlinkScript {
 inputs 2
 ProgramGroup 1
 KernelDescription "1 \"WipeKernel\" iterate componentWise e64713ed9dfa55a59dc838ebc8b1e3c0884a7a6eefc60943f38b6e7cd2e7f14a 3 \"above\" Read Point \"below\" Read Point \"dst\" Write Point 2 \"Origin\" Float 2 AABIQgAASEI= \"Angle\" Float 1 AAA0Qg=="
 kernelSource "kernel WipeKernel : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> above;  //image to show above the line\n  Image<eRead, eAccessPoint, eEdgeClamped> below;  //image to show below the line\n  Image<eWrite> dst;  //the output image\n\n  param:\n   float2 origin;\n   float angle;\n\n  local:\n   float2 vec;\n\n  //In define(), parameters can be given labels and default values.\n  void define() \{\n    defineParam(origin, \"Origin\", float2(50.0f, 50.0f));\n    defineParam(angle, \"Angle\", 45.0f);\n  \}\n\n  //The init() function is run before any calls to process().\n  void init() \{\n    vec.x = cos(angle * PI / 180.0f);\n    vec.y = sin(angle * PI / 180.0f);\n  \}\n\n  //The process function is run at every pixel to produce the output.\n  void process(int2 pos) \{\n    float2 posVec; \n    posVec.x = pos.x - origin.x;\n    posVec.y = pos.y - origin.y;\n\n    //Z value of cross product\n    float val = vec.x * posVec.y - vec.y * posVec.x;\n    if(val > 0.0f) \{\n      dst() = above();\n    \}\n    else \{\n      dst() = below();\n    \}\n  \}\n\};\n\n"
 rebuild ""
 name BlinkScript1
 selected true
 xpos -9
 ypos 25
}
Viewer {
 frame 1
 input_process false
 name Viewer1
 xpos -9
 ypos 85
}
