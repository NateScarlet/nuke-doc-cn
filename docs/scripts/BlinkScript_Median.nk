Root {
 inputs 0
 format "2048 1556 0 0 2048 1556 1 2K_Super_35(full-ap)"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
}
StickyNote {
 inputs 0
 name StickyNote5
 label "Median5x5Kernel:\nA median filter that makes use of \nBlink's median function"
 xpos -60
 ypos -76
}
CheckerBoard2 {
 inputs 0
 name CheckerBoard11
 xpos -8
 ypos -17
}
Grain2 {
 name Grain2_2
 label "Kodak 5248"
 xpos -8
 ypos 55
 black {0 0 0}
 minimum {0 0 0}
}
BlinkScript {
 KernelDescription "1 \"Median5x5Kernel\" iterate componentWise 7404135bee08a84417bafabc793d1abe83cffceb445a60576389e4beffaebb24 2 \"imageIn\" Read Ranged2D \"imageOut\" Write Point 0"
 kernelSource "kernel Median5x5Kernel : public ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessRanged2D, eEdgeClamped> imageIn; \n  Image<eWrite, eAccessPoint> imageOut;          \n\n  void init()\n  \{\n    imageIn.setRange(-2, -2, 2, 2);\n  \}\n\n  void process(int2 pos)\n  \{\n    float vals\[25];\n\n    for (int j = -2, index = 0; j <= 2; j++) \{\n      for (int i = -2; i <= 2; i++, index++) \{\n        vals\[index] = imageIn(i, j);\n      \}\n    \}\n   \n    //The median function takes an array of floating-point values and an array length.\n    imageOut() = median(vals, 25);\n    \n  \}\n\};\n"
 rebuild ""
 name BlinkScript13
 selected true
 xpos -8
 ypos 100
}
Viewer {
 frame 1
 input_process false
 name Viewer1
 xpos -8
 ypos 132
}
